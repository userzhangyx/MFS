<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CefSharp.Fakes</name>
    </assembly>
    <members>
        <member name="T:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs">
            <summary>CefSharp.Event.JavascriptBindingCompleteEventArgs 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.#ctor(CefSharp.Event.JavascriptBindingCompleteEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.AllInstances.AlreadyBoundGet">
            <summary>设置 JavascriptBindingCompleteEventArgs.get_AlreadyBound() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.AllInstances.AlreadyBoundSetBoolean">
            <summary>设置 JavascriptBindingCompleteEventArgs.set_AlreadyBound(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.AllInstances.IsCachedGet">
            <summary>设置 JavascriptBindingCompleteEventArgs.get_IsCached() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.AllInstances.IsCachedSetBoolean">
            <summary>设置 JavascriptBindingCompleteEventArgs.set_IsCached(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.AllInstances.ObjectNameGet">
            <summary>设置 JavascriptBindingCompleteEventArgs.get_ObjectName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.AllInstances.ObjectNameSetString">
            <summary>设置 JavascriptBindingCompleteEventArgs.set_ObjectName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.AllInstances.ObjectRepositoryGet">
            <summary>设置 JavascriptBindingCompleteEventArgs.get_ObjectRepository() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.AllInstances.ObjectRepositorySetIJavascriptObjectRepository">
            <summary>设置 JavascriptBindingCompleteEventArgs.set_ObjectRepository(IJavascriptObjectRepository value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.AlreadyBoundGet">
            <summary>设置 JavascriptBindingCompleteEventArgs.get_AlreadyBound() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.AlreadyBoundSetBoolean">
            <summary>设置 JavascriptBindingCompleteEventArgs.set_AlreadyBound(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.ConstructorIJavascriptObjectRepositoryStringBooleanBoolean">
            <summary>设置 JavascriptBindingCompleteEventArgs.JavascriptBindingCompleteEventArgs(IJavascriptObjectRepository objectRepository, String name, Boolean alreadyBound, Boolean isCached) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.IsCachedGet">
            <summary>设置 JavascriptBindingCompleteEventArgs.get_IsCached() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.IsCachedSetBoolean">
            <summary>设置 JavascriptBindingCompleteEventArgs.set_IsCached(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.ObjectNameGet">
            <summary>设置 JavascriptBindingCompleteEventArgs.get_ObjectName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.ObjectNameSetString">
            <summary>设置 JavascriptBindingCompleteEventArgs.set_ObjectName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.ObjectRepositoryGet">
            <summary>设置 JavascriptBindingCompleteEventArgs.get_ObjectRepository() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingCompleteEventArgs.ObjectRepositorySetIJavascriptObjectRepository">
            <summary>设置 JavascriptBindingCompleteEventArgs.set_ObjectRepository(IJavascriptObjectRepository value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs">
            <summary>CefSharp.Event.JavascriptBindingEventArgs 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.#ctor(CefSharp.Event.JavascriptBindingEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.AllInstances.ObjectNameGet">
            <summary>设置 JavascriptBindingEventArgs.get_ObjectName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.AllInstances.ObjectNameSetString">
            <summary>设置 JavascriptBindingEventArgs.set_ObjectName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.AllInstances.ObjectRepositoryGet">
            <summary>设置 JavascriptBindingEventArgs.get_ObjectRepository() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.AllInstances.ObjectRepositorySetIJavascriptObjectRepository">
            <summary>设置 JavascriptBindingEventArgs.set_ObjectRepository(IJavascriptObjectRepository value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.ConstructorIJavascriptObjectRepositoryString">
            <summary>设置 JavascriptBindingEventArgs.JavascriptBindingEventArgs(IJavascriptObjectRepository objectRepository, String name) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.ObjectNameGet">
            <summary>设置 JavascriptBindingEventArgs.get_ObjectName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.ObjectNameSetString">
            <summary>设置 JavascriptBindingEventArgs.set_ObjectName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.ObjectRepositoryGet">
            <summary>设置 JavascriptBindingEventArgs.get_ObjectRepository() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingEventArgs.ObjectRepositorySetIJavascriptObjectRepository">
            <summary>设置 JavascriptBindingEventArgs.set_ObjectRepository(IJavascriptObjectRepository value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs">
            <summary>CefSharp.Event.JavascriptBindingMultipleCompleteEventArgs 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.#ctor(CefSharp.Event.JavascriptBindingMultipleCompleteEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.AllInstances.ObjectNamesGet">
            <summary>设置 JavascriptBindingMultipleCompleteEventArgs.get_ObjectNames() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.AllInstances.ObjectNamesSetIListOfString">
            <summary>设置 JavascriptBindingMultipleCompleteEventArgs.set_ObjectNames(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.AllInstances.ObjectRepositoryGet">
            <summary>设置 JavascriptBindingMultipleCompleteEventArgs.get_ObjectRepository() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.AllInstances.ObjectRepositorySetIJavascriptObjectRepository">
            <summary>设置 JavascriptBindingMultipleCompleteEventArgs.set_ObjectRepository(IJavascriptObjectRepository value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.ConstructorIJavascriptObjectRepositoryIListOfString">
            <summary>设置 JavascriptBindingMultipleCompleteEventArgs.JavascriptBindingMultipleCompleteEventArgs(IJavascriptObjectRepository objectRepository, IList`1&lt;String&gt; names) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.ObjectNamesGet">
            <summary>设置 JavascriptBindingMultipleCompleteEventArgs.get_ObjectNames() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.ObjectNamesSetIListOfString">
            <summary>设置 JavascriptBindingMultipleCompleteEventArgs.set_ObjectNames(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.ObjectRepositoryGet">
            <summary>设置 JavascriptBindingMultipleCompleteEventArgs.get_ObjectRepository() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.ShimJavascriptBindingMultipleCompleteEventArgs.ObjectRepositorySetIJavascriptObjectRepository">
            <summary>设置 JavascriptBindingMultipleCompleteEventArgs.set_ObjectRepository(IJavascriptObjectRepository value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Event.Fakes.StubJavascriptBindingCompleteEventArgs">
            <summary>CefSharp.Event.JavascriptBindingCompleteEventArgs 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.StubJavascriptBindingCompleteEventArgs.#ctor(CefSharp.IJavascriptObjectRepository,System.String,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.StubJavascriptBindingCompleteEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.StubJavascriptBindingCompleteEventArgs.InitializeStub">
            <summary>初始化 type StubJavascriptBindingCompleteEventArgs 的新实例</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.StubJavascriptBindingCompleteEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.StubJavascriptBindingCompleteEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Event.Fakes.StubJavascriptBindingEventArgs">
            <summary>CefSharp.Event.JavascriptBindingEventArgs 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.StubJavascriptBindingEventArgs.#ctor(CefSharp.IJavascriptObjectRepository,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.StubJavascriptBindingEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.StubJavascriptBindingEventArgs.InitializeStub">
            <summary>初始化 type StubJavascriptBindingEventArgs 的新实例</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.StubJavascriptBindingEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.StubJavascriptBindingEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Event.Fakes.StubJavascriptBindingMultipleCompleteEventArgs">
            <summary>CefSharp.Event.JavascriptBindingMultipleCompleteEventArgs 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.StubJavascriptBindingMultipleCompleteEventArgs.#ctor(CefSharp.IJavascriptObjectRepository,System.Collections.Generic.IList{System.String})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.StubJavascriptBindingMultipleCompleteEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Event.Fakes.StubJavascriptBindingMultipleCompleteEventArgs.InitializeStub">
            <summary>初始化 type StubJavascriptBindingMultipleCompleteEventArgs 的新实例</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.StubJavascriptBindingMultipleCompleteEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Event.Fakes.StubJavascriptBindingMultipleCompleteEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimAddressChangedEventArgs">
            <summary>CefSharp.AddressChangedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimAddressChangedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimAddressChangedEventArgs.#ctor(CefSharp.AddressChangedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAddressChangedEventArgs.AddressGet">
            <summary>设置 AddressChangedEventArgs.get_Address() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAddressChangedEventArgs.AddressSetString">
            <summary>设置 AddressChangedEventArgs.set_Address(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimAddressChangedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAddressChangedEventArgs.AllInstances.AddressGet">
            <summary>设置 AddressChangedEventArgs.get_Address() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAddressChangedEventArgs.AllInstances.AddressSetString">
            <summary>设置 AddressChangedEventArgs.set_Address(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAddressChangedEventArgs.AllInstances.BrowserGet">
            <summary>设置 AddressChangedEventArgs.get_Browser() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAddressChangedEventArgs.AllInstances.BrowserSetIBrowser">
            <summary>设置 AddressChangedEventArgs.set_Browser(IBrowser value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimAddressChangedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimAddressChangedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAddressChangedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAddressChangedEventArgs.BrowserGet">
            <summary>设置 AddressChangedEventArgs.get_Browser() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAddressChangedEventArgs.BrowserSetIBrowser">
            <summary>设置 AddressChangedEventArgs.set_Browser(IBrowser value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAddressChangedEventArgs.ConstructorIBrowserString">
            <summary>设置 AddressChangedEventArgs.AddressChangedEventArgs(IBrowser browser, String address) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimAssemblyInfo">
            <summary>CefSharp.AssemblyInfo 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimAssemblyInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimAssemblyInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimAssemblyInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAssemblyInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimAsyncExtensions">
            <summary>CefSharp.AsyncExtensions 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimAsyncExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimAsyncExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimAsyncExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAsyncExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAsyncExtensions.DeleteCookiesAsyncICookieManagerStringString">
            <summary>设置 AsyncExtensions.DeleteCookiesAsync(ICookieManager cookieManager, String url, String name) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAsyncExtensions.FlushStoreAsyncICookieManager">
            <summary>设置 AsyncExtensions.FlushStoreAsync(ICookieManager cookieManager) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAsyncExtensions.SetCookieAsyncICookieManagerStringCookie">
            <summary>设置 AsyncExtensions.SetCookieAsync(ICookieManager cookieManager, String url, Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAsyncExtensions.VisitAllCookiesAsyncICookieManager">
            <summary>设置 AsyncExtensions.VisitAllCookiesAsync(ICookieManager cookieManager) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimAsyncExtensions.VisitUrlCookiesAsyncICookieManagerStringBoolean">
            <summary>设置 AsyncExtensions.VisitUrlCookiesAsync(ICookieManager cookieManager, String url, Boolean includeHttpOnly) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimBindingOptions">
            <summary>CefSharp.BindingOptions 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimBindingOptions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimBindingOptions.#ctor(CefSharp.BindingOptions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimBindingOptions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.AllInstances.BinderGet">
            <summary>设置 BindingOptions.get_Binder() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.AllInstances.BinderSetIBinder">
            <summary>设置 BindingOptions.set_Binder(IBinder value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.AllInstances.CamelCaseJavascriptNamesGet">
            <summary>设置 BindingOptions.get_CamelCaseJavascriptNames() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.AllInstances.CamelCaseJavascriptNamesSetBoolean">
            <summary>设置 BindingOptions.set_CamelCaseJavascriptNames(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.AllInstances.MethodInterceptorGet">
            <summary>设置 BindingOptions.get_MethodInterceptor() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.AllInstances.MethodInterceptorSetIMethodInterceptor">
            <summary>设置 BindingOptions.set_MethodInterceptor(IMethodInterceptor value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimBindingOptions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimBindingOptions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.BinderGet">
            <summary>设置 BindingOptions.get_Binder() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.BinderSetIBinder">
            <summary>设置 BindingOptions.set_Binder(IBinder value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.CamelCaseJavascriptNamesGet">
            <summary>设置 BindingOptions.get_CamelCaseJavascriptNames() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.CamelCaseJavascriptNamesSetBoolean">
            <summary>设置 BindingOptions.set_CamelCaseJavascriptNames(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.Constructor">
            <summary>设置 BindingOptions.BindingOptions() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.DefaultBinderGet">
            <summary>设置 BindingOptions.get_DefaultBinder() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.MethodInterceptorGet">
            <summary>设置 BindingOptions.get_MethodInterceptor() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimBindingOptions.MethodInterceptorSetIMethodInterceptor">
            <summary>设置 BindingOptions.set_MethodInterceptor(IMethodInterceptor value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimByteArrayResourceHandler">
            <summary>CefSharp.ByteArrayResourceHandler 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimByteArrayResourceHandler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimByteArrayResourceHandler.#ctor(CefSharp.ByteArrayResourceHandler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimByteArrayResourceHandler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.AllInstances.CefSharpIResourceHandlerCanGetCookieCookie">
            <summary>设置 ByteArrayResourceHandler.CefSharp.IResourceHandler.CanGetCookie(Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.AllInstances.CefSharpIResourceHandlerCanSetCookieCookie">
            <summary>设置 ByteArrayResourceHandler.CefSharp.IResourceHandler.CanSetCookie(Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.AllInstances.CefSharpIResourceHandlerCancel">
            <summary>设置 ByteArrayResourceHandler.CefSharp.IResourceHandler.Cancel() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.AllInstances.CefSharpIResourceHandlerGetResponseHeadersIResponseInt64OutStringOut">
            <summary>设置 ByteArrayResourceHandler.CefSharp.IResourceHandler.GetResponseHeaders(IResponse response, Int64&amp; responseLength, String&amp; redirectUrl) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.AllInstances.CefSharpIResourceHandlerProcessRequestIRequestICallback">
            <summary>设置 ByteArrayResourceHandler.CefSharp.IResourceHandler.ProcessRequest(IRequest request, ICallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.AllInstances.CefSharpIResourceHandlerReadResponseStreamInt32OutICallback">
            <summary>设置 ByteArrayResourceHandler.CefSharp.IResourceHandler.ReadResponse(Stream dataOut, Int32&amp; bytesRead, ICallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.AllInstances.DataGet">
            <summary>设置 ByteArrayResourceHandler.get_Data() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.AllInstances.DataSetByteArray">
            <summary>设置 ByteArrayResourceHandler.set_Data(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.AllInstances.MimeTypeGet">
            <summary>设置 ByteArrayResourceHandler.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.AllInstances.MimeTypeSetString">
            <summary>设置 ByteArrayResourceHandler.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.AllInstances.SystemIDisposableDispose">
            <summary>设置 ByteArrayResourceHandler.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimByteArrayResourceHandler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimByteArrayResourceHandler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimByteArrayResourceHandler.Bind(CefSharp.IResourceHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimByteArrayResourceHandler.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.CefSharpIResourceHandlerCanGetCookieCookie">
            <summary>设置 ByteArrayResourceHandler.CefSharp.IResourceHandler.CanGetCookie(Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.CefSharpIResourceHandlerCanSetCookieCookie">
            <summary>设置 ByteArrayResourceHandler.CefSharp.IResourceHandler.CanSetCookie(Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.CefSharpIResourceHandlerCancel">
            <summary>设置 ByteArrayResourceHandler.CefSharp.IResourceHandler.Cancel() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.CefSharpIResourceHandlerGetResponseHeadersIResponseInt64OutStringOut">
            <summary>设置 ByteArrayResourceHandler.CefSharp.IResourceHandler.GetResponseHeaders(IResponse response, Int64&amp; responseLength, String&amp; redirectUrl) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.CefSharpIResourceHandlerProcessRequestIRequestICallback">
            <summary>设置 ByteArrayResourceHandler.CefSharp.IResourceHandler.ProcessRequest(IRequest request, ICallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.ConstructorStringByteArray">
            <summary>设置 ByteArrayResourceHandler.ByteArrayResourceHandler(String mimeType, Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.DataGet">
            <summary>设置 ByteArrayResourceHandler.get_Data() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.DataSetByteArray">
            <summary>设置 ByteArrayResourceHandler.set_Data(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.MimeTypeGet">
            <summary>设置 ByteArrayResourceHandler.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.MimeTypeSetString">
            <summary>设置 ByteArrayResourceHandler.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimByteArrayResourceHandler.SystemIDisposableDispose">
            <summary>设置 ByteArrayResourceHandler.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimCdmRegistration">
            <summary>CefSharp.CdmRegistration 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCdmRegistration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCdmRegistration.#ctor(CefSharp.CdmRegistration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimCdmRegistration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCdmRegistration.AllInstances.ErrorCodeGet">
            <summary>设置 CdmRegistration.get_ErrorCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCdmRegistration.AllInstances.ErrorCodeSetCdmRegistrationErrorCode">
            <summary>设置 CdmRegistration.set_ErrorCode(CdmRegistrationErrorCode value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCdmRegistration.AllInstances.ErrorMessageGet">
            <summary>设置 CdmRegistration.get_ErrorMessage() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCdmRegistration.AllInstances.ErrorMessageSetString">
            <summary>设置 CdmRegistration.set_ErrorMessage(String value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCdmRegistration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCdmRegistration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCdmRegistration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCdmRegistration.ConstructorCdmRegistrationErrorCodeString">
            <summary>设置 CdmRegistration.CdmRegistration(CdmRegistrationErrorCode errorCode, String errorMessage) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCdmRegistration.ErrorCodeGet">
            <summary>设置 CdmRegistration.get_ErrorCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCdmRegistration.ErrorCodeSetCdmRegistrationErrorCode">
            <summary>设置 CdmRegistration.set_ErrorCode(CdmRegistrationErrorCode value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCdmRegistration.ErrorMessageGet">
            <summary>设置 CdmRegistration.get_ErrorMessage() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCdmRegistration.ErrorMessageSetString">
            <summary>设置 CdmRegistration.set_ErrorMessage(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimCefCustomScheme">
            <summary>CefSharp.CefCustomScheme 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefCustomScheme.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefCustomScheme.#ctor(CefSharp.CefCustomScheme)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimCefCustomScheme.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.DomainNameGet">
            <summary>设置 CefCustomScheme.get_DomainName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.DomainNameSetString">
            <summary>设置 CefCustomScheme.set_DomainName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.IsCSPBypassingGet">
            <summary>设置 CefCustomScheme.get_IsCSPBypassing() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.IsCSPBypassingSetBoolean">
            <summary>设置 CefCustomScheme.set_IsCSPBypassing(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.IsCorsEnabledGet">
            <summary>设置 CefCustomScheme.get_IsCorsEnabled() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.IsCorsEnabledSetBoolean">
            <summary>设置 CefCustomScheme.set_IsCorsEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.IsDisplayIsolatedGet">
            <summary>设置 CefCustomScheme.get_IsDisplayIsolated() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.IsDisplayIsolatedSetBoolean">
            <summary>设置 CefCustomScheme.set_IsDisplayIsolated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.IsLocalGet">
            <summary>设置 CefCustomScheme.get_IsLocal() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.IsLocalSetBoolean">
            <summary>设置 CefCustomScheme.set_IsLocal(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.IsSecureGet">
            <summary>设置 CefCustomScheme.get_IsSecure() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.IsSecureSetBoolean">
            <summary>设置 CefCustomScheme.set_IsSecure(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.IsStandardGet">
            <summary>设置 CefCustomScheme.get_IsStandard() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.IsStandardSetBoolean">
            <summary>设置 CefCustomScheme.set_IsStandard(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.SchemeHandlerFactoryGet">
            <summary>设置 CefCustomScheme.get_SchemeHandlerFactory() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.SchemeHandlerFactorySetISchemeHandlerFactory">
            <summary>设置 CefCustomScheme.set_SchemeHandlerFactory(ISchemeHandlerFactory value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.SchemeNameGet">
            <summary>设置 CefCustomScheme.get_SchemeName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.AllInstances.SchemeNameSetString">
            <summary>设置 CefCustomScheme.set_SchemeName(String value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefCustomScheme.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefCustomScheme.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.Constructor">
            <summary>设置 CefCustomScheme.CefCustomScheme() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.DomainNameGet">
            <summary>设置 CefCustomScheme.get_DomainName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.DomainNameSetString">
            <summary>设置 CefCustomScheme.set_DomainName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.IsCSPBypassingGet">
            <summary>设置 CefCustomScheme.get_IsCSPBypassing() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.IsCSPBypassingSetBoolean">
            <summary>设置 CefCustomScheme.set_IsCSPBypassing(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.IsCorsEnabledGet">
            <summary>设置 CefCustomScheme.get_IsCorsEnabled() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.IsCorsEnabledSetBoolean">
            <summary>设置 CefCustomScheme.set_IsCorsEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.IsDisplayIsolatedGet">
            <summary>设置 CefCustomScheme.get_IsDisplayIsolated() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.IsDisplayIsolatedSetBoolean">
            <summary>设置 CefCustomScheme.set_IsDisplayIsolated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.IsLocalGet">
            <summary>设置 CefCustomScheme.get_IsLocal() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.IsLocalSetBoolean">
            <summary>设置 CefCustomScheme.set_IsLocal(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.IsSecureGet">
            <summary>设置 CefCustomScheme.get_IsSecure() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.IsSecureSetBoolean">
            <summary>设置 CefCustomScheme.set_IsSecure(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.IsStandardGet">
            <summary>设置 CefCustomScheme.get_IsStandard() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.IsStandardSetBoolean">
            <summary>设置 CefCustomScheme.set_IsStandard(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.ParseCommandLineArgumentsIEnumerableOfString">
            <summary>设置 CefCustomScheme.ParseCommandLineArguments(IEnumerable`1&lt;String&gt; args) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.SchemeHandlerFactoryGet">
            <summary>设置 CefCustomScheme.get_SchemeHandlerFactory() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.SchemeHandlerFactorySetISchemeHandlerFactory">
            <summary>设置 CefCustomScheme.set_SchemeHandlerFactory(ISchemeHandlerFactory value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.SchemeNameGet">
            <summary>设置 CefCustomScheme.get_SchemeName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefCustomScheme.SchemeNameSetString">
            <summary>设置 CefCustomScheme.set_SchemeName(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimCefExtension">
            <summary>CefSharp.CefExtension 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefExtension.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefExtension.#ctor(CefSharp.CefExtension)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimCefExtension.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefExtension.AllInstances.EqualsObject">
            <summary>设置 CefExtension.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefExtension.AllInstances.GetHashCode01">
            <summary>设置 CefExtension.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefExtension.AllInstances.JavascriptCodeGet">
            <summary>设置 CefExtension.get_JavascriptCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefExtension.AllInstances.JavascriptCodeSetString">
            <summary>设置 CefExtension.set_JavascriptCode(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefExtension.AllInstances.NameGet">
            <summary>设置 CefExtension.get_Name() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefExtension.AllInstances.NameSetString">
            <summary>设置 CefExtension.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefExtension.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefExtension.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefExtension.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefExtension.ConstructorStringString">
            <summary>设置 CefExtension.CefExtension(String name, String javascriptCode) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefExtension.EqualsObject">
            <summary>设置 CefExtension.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefExtension.GetHashCode">
            <summary>设置 CefExtension.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefExtension.JavascriptCodeGet">
            <summary>设置 CefExtension.get_JavascriptCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefExtension.JavascriptCodeSetString">
            <summary>设置 CefExtension.set_JavascriptCode(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefExtension.NameGet">
            <summary>设置 CefExtension.get_Name() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefExtension.NameSetString">
            <summary>设置 CefExtension.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimCefLibraryHandle">
            <summary>CefSharp.CefLibraryHandle 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefLibraryHandle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefLibraryHandle.#ctor(CefSharp.CefLibraryHandle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimCefLibraryHandle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefLibraryHandle.AllInstances.IsInvalidGet">
            <summary>设置 CefLibraryHandle.get_IsInvalid() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefLibraryHandle.AllInstances.ReleaseHandle">
            <summary>设置 CefLibraryHandle.ReleaseHandle() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefLibraryHandle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefLibraryHandle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefLibraryHandle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefLibraryHandle.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefLibraryHandle.ConstructorString">
            <summary>设置 CefLibraryHandle.CefLibraryHandle(String filename) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefLibraryHandle.IsInvalidGet">
            <summary>设置 CefLibraryHandle.get_IsInvalid() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefLibraryHandle.ReleaseHandle">
            <summary>设置 CefLibraryHandle.ReleaseHandle() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimCefSharpSettings">
            <summary>CefSharp.CefSharpSettings 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefSharpSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefSharpSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCefSharpSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.ConcurrentTaskExecutionGet">
            <summary>设置 CefSharpSettings.get_ConcurrentTaskExecution() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.ConcurrentTaskExecutionSetBoolean">
            <summary>设置 CefSharpSettings.set_ConcurrentTaskExecution(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.FocusedNodeChangedEnabledGet">
            <summary>设置 CefSharpSettings.get_FocusedNodeChangedEnabled() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.FocusedNodeChangedEnabledSetBoolean">
            <summary>设置 CefSharpSettings.set_FocusedNodeChangedEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.LegacyJavascriptBindingEnabledGet">
            <summary>设置 CefSharpSettings.get_LegacyJavascriptBindingEnabled() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.LegacyJavascriptBindingEnabledSetBoolean">
            <summary>设置 CefSharpSettings.set_LegacyJavascriptBindingEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.ProxyGet">
            <summary>设置 CefSharpSettings.get_Proxy() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.ProxySetProxyOptions">
            <summary>设置 CefSharpSettings.set_Proxy(ProxyOptions value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.ShutdownOnExitGet">
            <summary>设置 CefSharpSettings.get_ShutdownOnExit() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.ShutdownOnExitSetBoolean">
            <summary>设置 CefSharpSettings.set_ShutdownOnExit(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.StaticConstructor">
            <summary>设置 CefSharpSettings.CefSharpSettings() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.SubprocessExitIfParentProcessClosedGet">
            <summary>设置 CefSharpSettings.get_SubprocessExitIfParentProcessClosed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.SubprocessExitIfParentProcessClosedSetBoolean">
            <summary>设置 CefSharpSettings.set_SubprocessExitIfParentProcessClosed(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.WcfEnabledGet">
            <summary>设置 CefSharpSettings.get_WcfEnabled() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.WcfEnabledSetBoolean">
            <summary>设置 CefSharpSettings.set_WcfEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.WcfTimeoutGet">
            <summary>设置 CefSharpSettings.get_WcfTimeout() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCefSharpSettings.WcfTimeoutSetTimeSpan">
            <summary>设置 CefSharpSettings.set_WcfTimeout(TimeSpan value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimConsoleMessageEventArgs">
            <summary>CefSharp.ConsoleMessageEventArgs 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimConsoleMessageEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimConsoleMessageEventArgs.#ctor(CefSharp.ConsoleMessageEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimConsoleMessageEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.AllInstances.LevelGet">
            <summary>设置 ConsoleMessageEventArgs.get_Level() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.AllInstances.LevelSetLogSeverity">
            <summary>设置 ConsoleMessageEventArgs.set_Level(LogSeverity value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.AllInstances.LineGet">
            <summary>设置 ConsoleMessageEventArgs.get_Line() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.AllInstances.LineSetInt32">
            <summary>设置 ConsoleMessageEventArgs.set_Line(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.AllInstances.MessageGet">
            <summary>设置 ConsoleMessageEventArgs.get_Message() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.AllInstances.MessageSetString">
            <summary>设置 ConsoleMessageEventArgs.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.AllInstances.SourceGet">
            <summary>设置 ConsoleMessageEventArgs.get_Source() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.AllInstances.SourceSetString">
            <summary>设置 ConsoleMessageEventArgs.set_Source(String value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimConsoleMessageEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimConsoleMessageEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.ConstructorLogSeverityStringStringInt32">
            <summary>设置 ConsoleMessageEventArgs.ConsoleMessageEventArgs(LogSeverity level, String message, String source, Int32 line) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.LevelGet">
            <summary>设置 ConsoleMessageEventArgs.get_Level() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.LevelSetLogSeverity">
            <summary>设置 ConsoleMessageEventArgs.set_Level(LogSeverity value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.LineGet">
            <summary>设置 ConsoleMessageEventArgs.get_Line() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.LineSetInt32">
            <summary>设置 ConsoleMessageEventArgs.set_Line(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.MessageGet">
            <summary>设置 ConsoleMessageEventArgs.get_Message() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.MessageSetString">
            <summary>设置 ConsoleMessageEventArgs.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.SourceGet">
            <summary>设置 ConsoleMessageEventArgs.get_Source() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimConsoleMessageEventArgs.SourceSetString">
            <summary>设置 ConsoleMessageEventArgs.set_Source(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimCookie">
            <summary>CefSharp.Cookie 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCookie.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCookie.#ctor(CefSharp.Cookie)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimCookie.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.CreationGet">
            <summary>设置 Cookie.get_Creation() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.CreationSetDateTime">
            <summary>设置 Cookie.set_Creation(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.DomainGet">
            <summary>设置 Cookie.get_Domain() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.DomainSetString">
            <summary>设置 Cookie.set_Domain(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.ExpiresGet">
            <summary>设置 Cookie.get_Expires() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.ExpiresSetNullableOfDateTime">
            <summary>设置 Cookie.set_Expires(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.HttpOnlyGet">
            <summary>设置 Cookie.get_HttpOnly() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.HttpOnlySetBoolean">
            <summary>设置 Cookie.set_HttpOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.LastAccessGet">
            <summary>设置 Cookie.get_LastAccess() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.LastAccessSetDateTime">
            <summary>设置 Cookie.set_LastAccess(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.NameGet">
            <summary>设置 Cookie.get_Name() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.NameSetString">
            <summary>设置 Cookie.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.PathGet">
            <summary>设置 Cookie.get_Path() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.PathSetString">
            <summary>设置 Cookie.set_Path(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.SecureGet">
            <summary>设置 Cookie.get_Secure() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.SecureSetBoolean">
            <summary>设置 Cookie.set_Secure(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.ValueGet">
            <summary>设置 Cookie.get_Value() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.AllInstances.ValueSetString">
            <summary>设置 Cookie.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCookie.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimCookie.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.Constructor">
            <summary>设置 Cookie.Cookie() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.CreationGet">
            <summary>设置 Cookie.get_Creation() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.CreationSetDateTime">
            <summary>设置 Cookie.set_Creation(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.DomainGet">
            <summary>设置 Cookie.get_Domain() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.DomainSetString">
            <summary>设置 Cookie.set_Domain(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.ExpiresGet">
            <summary>设置 Cookie.get_Expires() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.ExpiresSetNullableOfDateTime">
            <summary>设置 Cookie.set_Expires(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.HttpOnlyGet">
            <summary>设置 Cookie.get_HttpOnly() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.HttpOnlySetBoolean">
            <summary>设置 Cookie.set_HttpOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.LastAccessGet">
            <summary>设置 Cookie.get_LastAccess() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.LastAccessSetDateTime">
            <summary>设置 Cookie.set_LastAccess(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.NameGet">
            <summary>设置 Cookie.get_Name() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.NameSetString">
            <summary>设置 Cookie.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.PathGet">
            <summary>设置 Cookie.get_Path() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.PathSetString">
            <summary>设置 Cookie.set_Path(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.SecureGet">
            <summary>设置 Cookie.get_Secure() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.SecureSetBoolean">
            <summary>设置 Cookie.set_Secure(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.ValueGet">
            <summary>设置 Cookie.get_Value() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimCookie.ValueSetString">
            <summary>设置 Cookie.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimDefaultResourceHandlerFactory">
            <summary>CefSharp.DefaultResourceHandlerFactory 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.#ctor(CefSharp.DefaultResourceHandlerFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.AllInstances.GetResourceHandlerIWebBrowserIBrowserIFrameIRequest">
            <summary>设置 DefaultResourceHandlerFactory.GetResourceHandler(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.AllInstances.HandlersGet">
            <summary>设置 DefaultResourceHandlerFactory.get_Handlers() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.AllInstances.HandlersSetConcurrentDictionaryOfStringDefaultResourceHandlerFactoryItem">
            <summary>设置 DefaultResourceHandlerFactory.set_Handlers(ConcurrentDictionary`2&lt;String,DefaultResourceHandlerFactoryItem&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.AllInstances.HasHandlersGet">
            <summary>设置 DefaultResourceHandlerFactory.get_HasHandlers() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.AllInstances.RegisterHandlerStringIResourceHandlerBoolean">
            <summary>设置 DefaultResourceHandlerFactory.RegisterHandler(String url, IResourceHandler handler, Boolean oneTimeUse) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.AllInstances.UnregisterHandlerString">
            <summary>设置 DefaultResourceHandlerFactory.UnregisterHandler(String url) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.Bind(CefSharp.IResourceHandlerFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.ConstructorIEqualityComparerOfString">
            <summary>设置 DefaultResourceHandlerFactory.DefaultResourceHandlerFactory(IEqualityComparer`1&lt;String&gt; comparer) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.GetResourceHandlerIWebBrowserIBrowserIFrameIRequest">
            <summary>设置 DefaultResourceHandlerFactory.GetResourceHandler(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.HandlersGet">
            <summary>设置 DefaultResourceHandlerFactory.get_Handlers() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.HandlersSetConcurrentDictionaryOfStringDefaultResourceHandlerFactoryItem">
            <summary>设置 DefaultResourceHandlerFactory.set_Handlers(ConcurrentDictionary`2&lt;String,DefaultResourceHandlerFactoryItem&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.HasHandlersGet">
            <summary>设置 DefaultResourceHandlerFactory.get_HasHandlers() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.RegisterHandlerStringIResourceHandlerBoolean">
            <summary>设置 DefaultResourceHandlerFactory.RegisterHandler(String url, IResourceHandler handler, Boolean oneTimeUse) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactory.UnregisterHandlerString">
            <summary>设置 DefaultResourceHandlerFactory.UnregisterHandler(String url) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem">
            <summary>CefSharp.DefaultResourceHandlerFactoryItem 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.#ctor(CefSharp.DefaultResourceHandlerFactoryItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.AllInstances.HandlerGet">
            <summary>设置 DefaultResourceHandlerFactoryItem.get_Handler() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.AllInstances.HandlerSetIResourceHandler">
            <summary>设置 DefaultResourceHandlerFactoryItem.set_Handler(IResourceHandler value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.AllInstances.OneTimeUseGet">
            <summary>设置 DefaultResourceHandlerFactoryItem.get_OneTimeUse() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.AllInstances.OneTimeUseSetBoolean">
            <summary>设置 DefaultResourceHandlerFactoryItem.set_OneTimeUse(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.ConstructorIResourceHandlerBoolean">
            <summary>设置 DefaultResourceHandlerFactoryItem.DefaultResourceHandlerFactoryItem(IResourceHandler handler, Boolean oneTimeUse) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.HandlerGet">
            <summary>设置 DefaultResourceHandlerFactoryItem.get_Handler() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.HandlerSetIResourceHandler">
            <summary>设置 DefaultResourceHandlerFactoryItem.set_Handler(IResourceHandler value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.OneTimeUseGet">
            <summary>设置 DefaultResourceHandlerFactoryItem.get_OneTimeUse() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDefaultResourceHandlerFactoryItem.OneTimeUseSetBoolean">
            <summary>设置 DefaultResourceHandlerFactoryItem.set_OneTimeUse(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimDependencyChecker">
            <summary>CefSharp.DependencyChecker 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDependencyChecker.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDependencyChecker.AssertAllDependenciesPresentStringStringStringBooleanString">
            <summary>设置 DependencyChecker.AssertAllDependenciesPresent(String locale, String localesDirPath, String resourcesDirPath, Boolean packLoadingDisabled, String browserSubProcessPath) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDependencyChecker.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDependencyChecker.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDependencyChecker.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDependencyChecker.CheckDependenciesBooleanBooleanStringStringStringString">
            <summary>设置 DependencyChecker.CheckDependencies(Boolean checkOptional, Boolean packLoadingDisabled, String path, String resourcesDirPath, String browserSubProcessPath, String localePackFile) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDependencyChecker.CheckDependencyListStringIEnumerableOfString">
            <summary>设置 DependencyChecker.CheckDependencyList(String dir, IEnumerable`1&lt;String&gt; files) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDependencyChecker.StaticConstructor">
            <summary>设置 DependencyChecker.DependencyChecker() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimDomNode">
            <summary>CefSharp.DomNode 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDomNode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDomNode.#ctor(CefSharp.DomNode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimDomNode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.AllInstances.AttributeNamesGet">
            <summary>设置 DomNode.get_AttributeNames() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.AllInstances.GetEnumerator">
            <summary>设置 DomNode.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.AllInstances.HasAttributeString">
            <summary>设置 DomNode.HasAttribute(String attributeName) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.AllInstances.ItemGetString">
            <summary>设置 DomNode.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 DomNode.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.AllInstances.TagNameGet">
            <summary>设置 DomNode.get_TagName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.AllInstances.TagNameSetString">
            <summary>设置 DomNode.set_TagName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.AllInstances.ToString01">
            <summary>设置 DomNode.ToString() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.AttributeNamesGet">
            <summary>设置 DomNode.get_AttributeNames() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDomNode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDomNode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDomNode.Bind(CefSharp.IDomNode)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDomNode.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDomNode.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.ConstructorStringIDictionaryOfStringString">
            <summary>设置 DomNode.DomNode(String tagName, IDictionary`2&lt;String,String&gt; attributes) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.GetEnumerator">
            <summary>设置 DomNode.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.HasAttributeString">
            <summary>设置 DomNode.HasAttribute(String attributeName) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.ItemGetString">
            <summary>设置 DomNode.get_Item(String name) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 DomNode.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.TagNameGet">
            <summary>设置 DomNode.get_TagName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.TagNameSetString">
            <summary>设置 DomNode.set_TagName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDomNode.ToString">
            <summary>设置 DomNode.ToString() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimDownloadItem">
            <summary>CefSharp.DownloadItem 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDownloadItem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDownloadItem.#ctor(CefSharp.DownloadItem)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimDownloadItem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.ContentDispositionGet">
            <summary>设置 DownloadItem.get_ContentDisposition() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.ContentDispositionSetString">
            <summary>设置 DownloadItem.set_ContentDisposition(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.CurrentSpeedGet">
            <summary>设置 DownloadItem.get_CurrentSpeed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.CurrentSpeedSetInt64">
            <summary>设置 DownloadItem.set_CurrentSpeed(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.EndTimeGet">
            <summary>设置 DownloadItem.get_EndTime() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.EndTimeSetNullableOfDateTime">
            <summary>设置 DownloadItem.set_EndTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.FullPathGet">
            <summary>设置 DownloadItem.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.FullPathSetString">
            <summary>设置 DownloadItem.set_FullPath(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.IdGet">
            <summary>设置 DownloadItem.get_Id() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.IdSetInt32">
            <summary>设置 DownloadItem.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.IsCancelledGet">
            <summary>设置 DownloadItem.get_IsCancelled() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.IsCancelledSetBoolean">
            <summary>设置 DownloadItem.set_IsCancelled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.IsCompleteGet">
            <summary>设置 DownloadItem.get_IsComplete() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.IsCompleteSetBoolean">
            <summary>设置 DownloadItem.set_IsComplete(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.IsInProgressGet">
            <summary>设置 DownloadItem.get_IsInProgress() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.IsInProgressSetBoolean">
            <summary>设置 DownloadItem.set_IsInProgress(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.IsValidGet">
            <summary>设置 DownloadItem.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.IsValidSetBoolean">
            <summary>设置 DownloadItem.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.MimeTypeGet">
            <summary>设置 DownloadItem.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.MimeTypeSetString">
            <summary>设置 DownloadItem.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.OriginalUrlGet">
            <summary>设置 DownloadItem.get_OriginalUrl() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.OriginalUrlSetString">
            <summary>设置 DownloadItem.set_OriginalUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.PercentCompleteGet">
            <summary>设置 DownloadItem.get_PercentComplete() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.PercentCompleteSetInt32">
            <summary>设置 DownloadItem.set_PercentComplete(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.ReceivedBytesGet">
            <summary>设置 DownloadItem.get_ReceivedBytes() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.ReceivedBytesSetInt64">
            <summary>设置 DownloadItem.set_ReceivedBytes(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.StartTimeGet">
            <summary>设置 DownloadItem.get_StartTime() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.StartTimeSetNullableOfDateTime">
            <summary>设置 DownloadItem.set_StartTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.SuggestedFileNameGet">
            <summary>设置 DownloadItem.get_SuggestedFileName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.SuggestedFileNameSetString">
            <summary>设置 DownloadItem.set_SuggestedFileName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.TotalBytesGet">
            <summary>设置 DownloadItem.get_TotalBytes() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.TotalBytesSetInt64">
            <summary>设置 DownloadItem.set_TotalBytes(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.UrlGet">
            <summary>设置 DownloadItem.get_Url() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.AllInstances.UrlSetString">
            <summary>设置 DownloadItem.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDownloadItem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDownloadItem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.Constructor">
            <summary>设置 DownloadItem.DownloadItem() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.ContentDispositionGet">
            <summary>设置 DownloadItem.get_ContentDisposition() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.ContentDispositionSetString">
            <summary>设置 DownloadItem.set_ContentDisposition(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.CurrentSpeedGet">
            <summary>设置 DownloadItem.get_CurrentSpeed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.CurrentSpeedSetInt64">
            <summary>设置 DownloadItem.set_CurrentSpeed(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.EndTimeGet">
            <summary>设置 DownloadItem.get_EndTime() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.EndTimeSetNullableOfDateTime">
            <summary>设置 DownloadItem.set_EndTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.FullPathGet">
            <summary>设置 DownloadItem.get_FullPath() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.FullPathSetString">
            <summary>设置 DownloadItem.set_FullPath(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.IdGet">
            <summary>设置 DownloadItem.get_Id() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.IdSetInt32">
            <summary>设置 DownloadItem.set_Id(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.IsCancelledGet">
            <summary>设置 DownloadItem.get_IsCancelled() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.IsCancelledSetBoolean">
            <summary>设置 DownloadItem.set_IsCancelled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.IsCompleteGet">
            <summary>设置 DownloadItem.get_IsComplete() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.IsCompleteSetBoolean">
            <summary>设置 DownloadItem.set_IsComplete(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.IsInProgressGet">
            <summary>设置 DownloadItem.get_IsInProgress() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.IsInProgressSetBoolean">
            <summary>设置 DownloadItem.set_IsInProgress(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.IsValidGet">
            <summary>设置 DownloadItem.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.IsValidSetBoolean">
            <summary>设置 DownloadItem.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.MimeTypeGet">
            <summary>设置 DownloadItem.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.MimeTypeSetString">
            <summary>设置 DownloadItem.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.OriginalUrlGet">
            <summary>设置 DownloadItem.get_OriginalUrl() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.OriginalUrlSetString">
            <summary>设置 DownloadItem.set_OriginalUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.PercentCompleteGet">
            <summary>设置 DownloadItem.get_PercentComplete() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.PercentCompleteSetInt32">
            <summary>设置 DownloadItem.set_PercentComplete(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.ReceivedBytesGet">
            <summary>设置 DownloadItem.get_ReceivedBytes() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.ReceivedBytesSetInt64">
            <summary>设置 DownloadItem.set_ReceivedBytes(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.StartTimeGet">
            <summary>设置 DownloadItem.get_StartTime() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.StartTimeSetNullableOfDateTime">
            <summary>设置 DownloadItem.set_StartTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.SuggestedFileNameGet">
            <summary>设置 DownloadItem.get_SuggestedFileName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.SuggestedFileNameSetString">
            <summary>设置 DownloadItem.set_SuggestedFileName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.TotalBytesGet">
            <summary>设置 DownloadItem.get_TotalBytes() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.TotalBytesSetInt64">
            <summary>设置 DownloadItem.set_TotalBytes(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.UrlGet">
            <summary>设置 DownloadItem.get_Url() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDownloadItem.UrlSetString">
            <summary>设置 DownloadItem.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimDraggableRegion">
            <summary>CefSharp.DraggableRegion 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDraggableRegion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimDraggableRegion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDraggableRegion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimDraggableRegion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimDraggableRegion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimFileResourceHandler">
            <summary>CefSharp.FileResourceHandler 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimFileResourceHandler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimFileResourceHandler.#ctor(CefSharp.FileResourceHandler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimFileResourceHandler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.AllInstances.CefSharpIResourceHandlerCanGetCookieCookie">
            <summary>设置 FileResourceHandler.CefSharp.IResourceHandler.CanGetCookie(Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.AllInstances.CefSharpIResourceHandlerCanSetCookieCookie">
            <summary>设置 FileResourceHandler.CefSharp.IResourceHandler.CanSetCookie(Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.AllInstances.CefSharpIResourceHandlerCancel">
            <summary>设置 FileResourceHandler.CefSharp.IResourceHandler.Cancel() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.AllInstances.CefSharpIResourceHandlerGetResponseHeadersIResponseInt64OutStringOut">
            <summary>设置 FileResourceHandler.CefSharp.IResourceHandler.GetResponseHeaders(IResponse response, Int64&amp; responseLength, String&amp; redirectUrl) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.AllInstances.CefSharpIResourceHandlerProcessRequestIRequestICallback">
            <summary>设置 FileResourceHandler.CefSharp.IResourceHandler.ProcessRequest(IRequest request, ICallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.AllInstances.CefSharpIResourceHandlerReadResponseStreamInt32OutICallback">
            <summary>设置 FileResourceHandler.CefSharp.IResourceHandler.ReadResponse(Stream dataOut, Int32&amp; bytesRead, ICallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.AllInstances.FilePathGet">
            <summary>设置 FileResourceHandler.get_FilePath() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.AllInstances.FilePathSetString">
            <summary>设置 FileResourceHandler.set_FilePath(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.AllInstances.MimeTypeGet">
            <summary>设置 FileResourceHandler.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.AllInstances.MimeTypeSetString">
            <summary>设置 FileResourceHandler.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.AllInstances.SystemIDisposableDispose">
            <summary>设置 FileResourceHandler.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimFileResourceHandler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimFileResourceHandler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimFileResourceHandler.Bind(CefSharp.IResourceHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimFileResourceHandler.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.CefSharpIResourceHandlerCanGetCookieCookie">
            <summary>设置 FileResourceHandler.CefSharp.IResourceHandler.CanGetCookie(Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.CefSharpIResourceHandlerCanSetCookieCookie">
            <summary>设置 FileResourceHandler.CefSharp.IResourceHandler.CanSetCookie(Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.CefSharpIResourceHandlerCancel">
            <summary>设置 FileResourceHandler.CefSharp.IResourceHandler.Cancel() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.CefSharpIResourceHandlerGetResponseHeadersIResponseInt64OutStringOut">
            <summary>设置 FileResourceHandler.CefSharp.IResourceHandler.GetResponseHeaders(IResponse response, Int64&amp; responseLength, String&amp; redirectUrl) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.CefSharpIResourceHandlerProcessRequestIRequestICallback">
            <summary>设置 FileResourceHandler.CefSharp.IResourceHandler.ProcessRequest(IRequest request, ICallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.ConstructorStringString">
            <summary>设置 FileResourceHandler.FileResourceHandler(String mimeType, String filePath) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.FilePathGet">
            <summary>设置 FileResourceHandler.get_FilePath() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.FilePathSetString">
            <summary>设置 FileResourceHandler.set_FilePath(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.MimeTypeGet">
            <summary>设置 FileResourceHandler.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.MimeTypeSetString">
            <summary>设置 FileResourceHandler.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFileResourceHandler.SystemIDisposableDispose">
            <summary>设置 FileResourceHandler.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimFrameLoadEndEventArgs">
            <summary>CefSharp.FrameLoadEndEventArgs 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimFrameLoadEndEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimFrameLoadEndEventArgs.#ctor(CefSharp.FrameLoadEndEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimFrameLoadEndEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.AllInstances.BrowserGet">
            <summary>设置 FrameLoadEndEventArgs.get_Browser() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.AllInstances.BrowserSetIBrowser">
            <summary>设置 FrameLoadEndEventArgs.set_Browser(IBrowser value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.AllInstances.FrameGet">
            <summary>设置 FrameLoadEndEventArgs.get_Frame() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.AllInstances.FrameSetIFrame">
            <summary>设置 FrameLoadEndEventArgs.set_Frame(IFrame value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.AllInstances.HttpStatusCodeGet">
            <summary>设置 FrameLoadEndEventArgs.get_HttpStatusCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.AllInstances.HttpStatusCodeSetInt32">
            <summary>设置 FrameLoadEndEventArgs.set_HttpStatusCode(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.AllInstances.UrlGet">
            <summary>设置 FrameLoadEndEventArgs.get_Url() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.AllInstances.UrlSetString">
            <summary>设置 FrameLoadEndEventArgs.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimFrameLoadEndEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimFrameLoadEndEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.BrowserGet">
            <summary>设置 FrameLoadEndEventArgs.get_Browser() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.BrowserSetIBrowser">
            <summary>设置 FrameLoadEndEventArgs.set_Browser(IBrowser value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.ConstructorIBrowserIFrameInt32">
            <summary>设置 FrameLoadEndEventArgs.FrameLoadEndEventArgs(IBrowser browser, IFrame frame, Int32 httpStatusCode) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.FrameGet">
            <summary>设置 FrameLoadEndEventArgs.get_Frame() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.FrameSetIFrame">
            <summary>设置 FrameLoadEndEventArgs.set_Frame(IFrame value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.HttpStatusCodeGet">
            <summary>设置 FrameLoadEndEventArgs.get_HttpStatusCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.HttpStatusCodeSetInt32">
            <summary>设置 FrameLoadEndEventArgs.set_HttpStatusCode(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.UrlGet">
            <summary>设置 FrameLoadEndEventArgs.get_Url() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadEndEventArgs.UrlSetString">
            <summary>设置 FrameLoadEndEventArgs.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimFrameLoadStartEventArgs">
            <summary>CefSharp.FrameLoadStartEventArgs 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimFrameLoadStartEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimFrameLoadStartEventArgs.#ctor(CefSharp.FrameLoadStartEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimFrameLoadStartEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.AllInstances.BrowserGet">
            <summary>设置 FrameLoadStartEventArgs.get_Browser() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.AllInstances.BrowserSetIBrowser">
            <summary>设置 FrameLoadStartEventArgs.set_Browser(IBrowser value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.AllInstances.FrameGet">
            <summary>设置 FrameLoadStartEventArgs.get_Frame() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.AllInstances.FrameSetIFrame">
            <summary>设置 FrameLoadStartEventArgs.set_Frame(IFrame value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.AllInstances.TransitionTypeGet">
            <summary>设置 FrameLoadStartEventArgs.get_TransitionType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.AllInstances.TransitionTypeSetTransitionType">
            <summary>设置 FrameLoadStartEventArgs.set_TransitionType(TransitionType value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.AllInstances.UrlGet">
            <summary>设置 FrameLoadStartEventArgs.get_Url() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.AllInstances.UrlSetString">
            <summary>设置 FrameLoadStartEventArgs.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimFrameLoadStartEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimFrameLoadStartEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.BrowserGet">
            <summary>设置 FrameLoadStartEventArgs.get_Browser() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.BrowserSetIBrowser">
            <summary>设置 FrameLoadStartEventArgs.set_Browser(IBrowser value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.ConstructorIBrowserIFrameTransitionType">
            <summary>设置 FrameLoadStartEventArgs.FrameLoadStartEventArgs(IBrowser browser, IFrame frame, TransitionType transitionType) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.FrameGet">
            <summary>设置 FrameLoadStartEventArgs.get_Frame() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.FrameSetIFrame">
            <summary>设置 FrameLoadStartEventArgs.set_Frame(IFrame value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.TransitionTypeGet">
            <summary>设置 FrameLoadStartEventArgs.get_TransitionType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.TransitionTypeSetTransitionType">
            <summary>设置 FrameLoadStartEventArgs.set_TransitionType(TransitionType value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.UrlGet">
            <summary>设置 FrameLoadStartEventArgs.get_Url() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimFrameLoadStartEventArgs.UrlSetString">
            <summary>设置 FrameLoadStartEventArgs.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimIsBrowserInitializedChangedEventArgs">
            <summary>CefSharp.IsBrowserInitializedChangedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimIsBrowserInitializedChangedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimIsBrowserInitializedChangedEventArgs.#ctor(CefSharp.IsBrowserInitializedChangedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimIsBrowserInitializedChangedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimIsBrowserInitializedChangedEventArgs.AllInstances.IsBrowserInitializedGet">
            <summary>设置 IsBrowserInitializedChangedEventArgs.get_IsBrowserInitialized() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimIsBrowserInitializedChangedEventArgs.AllInstances.IsBrowserInitializedSetBoolean">
            <summary>设置 IsBrowserInitializedChangedEventArgs.set_IsBrowserInitialized(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimIsBrowserInitializedChangedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimIsBrowserInitializedChangedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimIsBrowserInitializedChangedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimIsBrowserInitializedChangedEventArgs.ConstructorBoolean">
            <summary>设置 IsBrowserInitializedChangedEventArgs.IsBrowserInitializedChangedEventArgs(Boolean isBrowserInitialized) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimIsBrowserInitializedChangedEventArgs.IsBrowserInitializedGet">
            <summary>设置 IsBrowserInitializedChangedEventArgs.get_IsBrowserInitialized() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimIsBrowserInitializedChangedEventArgs.IsBrowserInitializedSetBoolean">
            <summary>设置 IsBrowserInitializedChangedEventArgs.set_IsBrowserInitialized(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimJavascriptBindingExtensions">
            <summary>CefSharp.JavascriptBindingExtensions 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptBindingExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptBindingExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptBindingExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptBindingExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptBindingExtensions.EnsureObjectBoundAsyncIWebBrowserStringArray">
            <summary>设置 JavascriptBindingExtensions.EnsureObjectBoundAsync(IWebBrowser browser, String[] names) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimJavascriptException">
            <summary>CefSharp.JavascriptException 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptException.#ctor(CefSharp.JavascriptException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimJavascriptException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptException.AllInstances.MessageGet">
            <summary>设置 JavascriptException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptException.AllInstances.MessageSetString">
            <summary>设置 JavascriptException.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptException.AllInstances.StackTraceGet">
            <summary>设置 JavascriptException.get_StackTrace() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptException.AllInstances.StackTraceSetJavascriptStackFrameArray">
            <summary>设置 JavascriptException.set_StackTrace(JavascriptStackFrame[] value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptException.Constructor">
            <summary>设置 JavascriptException.JavascriptException() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptException.MessageGet">
            <summary>设置 JavascriptException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptException.MessageSetString">
            <summary>设置 JavascriptException.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptException.StackTraceGet">
            <summary>设置 JavascriptException.get_StackTrace() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptException.StackTraceSetJavascriptStackFrameArray">
            <summary>设置 JavascriptException.set_StackTrace(JavascriptStackFrame[] value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimJavascriptIgnoreAttribute">
            <summary>CefSharp.JavascriptIgnoreAttribute 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptIgnoreAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptIgnoreAttribute.#ctor(CefSharp.JavascriptIgnoreAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimJavascriptIgnoreAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptIgnoreAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptIgnoreAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptIgnoreAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptIgnoreAttribute.Constructor">
            <summary>设置 JavascriptIgnoreAttribute.JavascriptIgnoreAttribute() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimJavascriptResponse">
            <summary>CefSharp.JavascriptResponse 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptResponse.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptResponse.#ctor(CefSharp.JavascriptResponse)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimJavascriptResponse.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptResponse.AllInstances.MessageGet">
            <summary>设置 JavascriptResponse.get_Message() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptResponse.AllInstances.MessageSetString">
            <summary>设置 JavascriptResponse.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptResponse.AllInstances.ResultGet">
            <summary>设置 JavascriptResponse.get_Result() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptResponse.AllInstances.ResultSetObject">
            <summary>设置 JavascriptResponse.set_Result(Object value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptResponse.AllInstances.SuccessGet">
            <summary>设置 JavascriptResponse.get_Success() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptResponse.AllInstances.SuccessSetBoolean">
            <summary>设置 JavascriptResponse.set_Success(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptResponse.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptResponse.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptResponse.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptResponse.Constructor">
            <summary>设置 JavascriptResponse.JavascriptResponse() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptResponse.MessageGet">
            <summary>设置 JavascriptResponse.get_Message() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptResponse.MessageSetString">
            <summary>设置 JavascriptResponse.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptResponse.ResultGet">
            <summary>设置 JavascriptResponse.get_Result() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptResponse.ResultSetObject">
            <summary>设置 JavascriptResponse.set_Result(Object value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptResponse.SuccessGet">
            <summary>设置 JavascriptResponse.get_Success() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptResponse.SuccessSetBoolean">
            <summary>设置 JavascriptResponse.set_Success(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimJavascriptStackFrame">
            <summary>CefSharp.JavascriptStackFrame 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptStackFrame.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptStackFrame.#ctor(CefSharp.JavascriptStackFrame)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimJavascriptStackFrame.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.AllInstances.ColumnNumberGet">
            <summary>设置 JavascriptStackFrame.get_ColumnNumber() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.AllInstances.ColumnNumberSetInt32">
            <summary>设置 JavascriptStackFrame.set_ColumnNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.AllInstances.FunctionNameGet">
            <summary>设置 JavascriptStackFrame.get_FunctionName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.AllInstances.FunctionNameSetString">
            <summary>设置 JavascriptStackFrame.set_FunctionName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.AllInstances.LineNumberGet">
            <summary>设置 JavascriptStackFrame.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.AllInstances.LineNumberSetInt32">
            <summary>设置 JavascriptStackFrame.set_LineNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.AllInstances.SourceNameGet">
            <summary>设置 JavascriptStackFrame.get_SourceName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.AllInstances.SourceNameSetString">
            <summary>设置 JavascriptStackFrame.set_SourceName(String value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptStackFrame.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimJavascriptStackFrame.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.ColumnNumberGet">
            <summary>设置 JavascriptStackFrame.get_ColumnNumber() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.ColumnNumberSetInt32">
            <summary>设置 JavascriptStackFrame.set_ColumnNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.Constructor">
            <summary>设置 JavascriptStackFrame.JavascriptStackFrame() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.FunctionNameGet">
            <summary>设置 JavascriptStackFrame.get_FunctionName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.FunctionNameSetString">
            <summary>设置 JavascriptStackFrame.set_FunctionName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.LineNumberGet">
            <summary>设置 JavascriptStackFrame.get_LineNumber() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.LineNumberSetInt32">
            <summary>设置 JavascriptStackFrame.set_LineNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.SourceNameGet">
            <summary>设置 JavascriptStackFrame.get_SourceName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimJavascriptStackFrame.SourceNameSetString">
            <summary>设置 JavascriptStackFrame.set_SourceName(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimKeyEvent">
            <summary>CefSharp.KeyEvent 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimKeyEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimKeyEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimKeyEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimKeyEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimKeyEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimLoadErrorEventArgs">
            <summary>CefSharp.LoadErrorEventArgs 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimLoadErrorEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimLoadErrorEventArgs.#ctor(CefSharp.LoadErrorEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimLoadErrorEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.AllInstances.BrowserGet">
            <summary>设置 LoadErrorEventArgs.get_Browser() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.AllInstances.BrowserSetIBrowser">
            <summary>设置 LoadErrorEventArgs.set_Browser(IBrowser value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.AllInstances.ErrorCodeGet">
            <summary>设置 LoadErrorEventArgs.get_ErrorCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.AllInstances.ErrorCodeSetCefErrorCode">
            <summary>设置 LoadErrorEventArgs.set_ErrorCode(CefErrorCode value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.AllInstances.ErrorTextGet">
            <summary>设置 LoadErrorEventArgs.get_ErrorText() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.AllInstances.ErrorTextSetString">
            <summary>设置 LoadErrorEventArgs.set_ErrorText(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.AllInstances.FailedUrlGet">
            <summary>设置 LoadErrorEventArgs.get_FailedUrl() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.AllInstances.FailedUrlSetString">
            <summary>设置 LoadErrorEventArgs.set_FailedUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.AllInstances.FrameGet">
            <summary>设置 LoadErrorEventArgs.get_Frame() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.AllInstances.FrameSetIFrame">
            <summary>设置 LoadErrorEventArgs.set_Frame(IFrame value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimLoadErrorEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimLoadErrorEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.BrowserGet">
            <summary>设置 LoadErrorEventArgs.get_Browser() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.BrowserSetIBrowser">
            <summary>设置 LoadErrorEventArgs.set_Browser(IBrowser value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.ConstructorIBrowserIFrameCefErrorCodeStringString">
            <summary>设置 LoadErrorEventArgs.LoadErrorEventArgs(IBrowser browser, IFrame frame, CefErrorCode errorCode, String errorText, String failedUrl) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.ErrorCodeGet">
            <summary>设置 LoadErrorEventArgs.get_ErrorCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.ErrorCodeSetCefErrorCode">
            <summary>设置 LoadErrorEventArgs.set_ErrorCode(CefErrorCode value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.ErrorTextGet">
            <summary>设置 LoadErrorEventArgs.get_ErrorText() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.ErrorTextSetString">
            <summary>设置 LoadErrorEventArgs.set_ErrorText(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.FailedUrlGet">
            <summary>设置 LoadErrorEventArgs.get_FailedUrl() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.FailedUrlSetString">
            <summary>设置 LoadErrorEventArgs.set_FailedUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.FrameGet">
            <summary>设置 LoadErrorEventArgs.get_Frame() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadErrorEventArgs.FrameSetIFrame">
            <summary>设置 LoadErrorEventArgs.set_Frame(IFrame value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimLoadingStateChangedEventArgs">
            <summary>CefSharp.LoadingStateChangedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.#ctor(CefSharp.LoadingStateChangedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.AllInstances.BrowserGet">
            <summary>设置 LoadingStateChangedEventArgs.get_Browser() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.AllInstances.BrowserSetIBrowser">
            <summary>设置 LoadingStateChangedEventArgs.set_Browser(IBrowser value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.AllInstances.CanGoBackGet">
            <summary>设置 LoadingStateChangedEventArgs.get_CanGoBack() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.AllInstances.CanGoBackSetBoolean">
            <summary>设置 LoadingStateChangedEventArgs.set_CanGoBack(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.AllInstances.CanGoForwardGet">
            <summary>设置 LoadingStateChangedEventArgs.get_CanGoForward() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.AllInstances.CanGoForwardSetBoolean">
            <summary>设置 LoadingStateChangedEventArgs.set_CanGoForward(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.AllInstances.CanReloadGet">
            <summary>设置 LoadingStateChangedEventArgs.get_CanReload() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.AllInstances.CanReloadSetBoolean">
            <summary>设置 LoadingStateChangedEventArgs.set_CanReload(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.AllInstances.IsLoadingGet">
            <summary>设置 LoadingStateChangedEventArgs.get_IsLoading() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.AllInstances.IsLoadingSetBoolean">
            <summary>设置 LoadingStateChangedEventArgs.set_IsLoading(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.BrowserGet">
            <summary>设置 LoadingStateChangedEventArgs.get_Browser() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.BrowserSetIBrowser">
            <summary>设置 LoadingStateChangedEventArgs.set_Browser(IBrowser value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.CanGoBackGet">
            <summary>设置 LoadingStateChangedEventArgs.get_CanGoBack() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.CanGoBackSetBoolean">
            <summary>设置 LoadingStateChangedEventArgs.set_CanGoBack(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.CanGoForwardGet">
            <summary>设置 LoadingStateChangedEventArgs.get_CanGoForward() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.CanGoForwardSetBoolean">
            <summary>设置 LoadingStateChangedEventArgs.set_CanGoForward(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.CanReloadGet">
            <summary>设置 LoadingStateChangedEventArgs.get_CanReload() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.CanReloadSetBoolean">
            <summary>设置 LoadingStateChangedEventArgs.set_CanReload(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.ConstructorIBrowserBooleanBooleanBoolean">
            <summary>设置 LoadingStateChangedEventArgs.LoadingStateChangedEventArgs(IBrowser browser, Boolean canGoBack, Boolean canGoForward, Boolean isLoading) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.IsLoadingGet">
            <summary>设置 LoadingStateChangedEventArgs.get_IsLoading() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimLoadingStateChangedEventArgs.IsLoadingSetBoolean">
            <summary>设置 LoadingStateChangedEventArgs.set_IsLoading(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimMouseEvent">
            <summary>CefSharp.MouseEvent 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimMouseEvent.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimMouseEvent.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimMouseEvent.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimMouseEvent.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimMouseEvent.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimNavigationEntry">
            <summary>CefSharp.NavigationEntry 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimNavigationEntry.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimNavigationEntry.#ctor(CefSharp.NavigationEntry)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimNavigationEntry.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.CompletionTimeGet">
            <summary>设置 NavigationEntry.get_CompletionTime() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.CompletionTimeSetDateTime">
            <summary>设置 NavigationEntry.set_CompletionTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.DisplayUrlGet">
            <summary>设置 NavigationEntry.get_DisplayUrl() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.DisplayUrlSetString">
            <summary>设置 NavigationEntry.set_DisplayUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.HasPostDataGet">
            <summary>设置 NavigationEntry.get_HasPostData() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.HasPostDataSetBoolean">
            <summary>设置 NavigationEntry.set_HasPostData(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.HttpStatusCodeGet">
            <summary>设置 NavigationEntry.get_HttpStatusCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.HttpStatusCodeSetInt32">
            <summary>设置 NavigationEntry.set_HttpStatusCode(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.IsCurrentGet">
            <summary>设置 NavigationEntry.get_IsCurrent() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.IsCurrentSetBoolean">
            <summary>设置 NavigationEntry.set_IsCurrent(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.IsValidGet">
            <summary>设置 NavigationEntry.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.IsValidSetBoolean">
            <summary>设置 NavigationEntry.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.OriginalUrlGet">
            <summary>设置 NavigationEntry.get_OriginalUrl() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.OriginalUrlSetString">
            <summary>设置 NavigationEntry.set_OriginalUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.SslStatusGet">
            <summary>设置 NavigationEntry.get_SslStatus() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.SslStatusSetSslStatus">
            <summary>设置 NavigationEntry.set_SslStatus(SslStatus value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.TitleGet">
            <summary>设置 NavigationEntry.get_Title() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.TitleSetString">
            <summary>设置 NavigationEntry.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.TransitionTypeGet">
            <summary>设置 NavigationEntry.get_TransitionType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.TransitionTypeSetTransitionType">
            <summary>设置 NavigationEntry.set_TransitionType(TransitionType value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.UrlGet">
            <summary>设置 NavigationEntry.get_Url() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.AllInstances.UrlSetString">
            <summary>设置 NavigationEntry.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimNavigationEntry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimNavigationEntry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.CompletionTimeGet">
            <summary>设置 NavigationEntry.get_CompletionTime() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.CompletionTimeSetDateTime">
            <summary>设置 NavigationEntry.set_CompletionTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.ConstructorBooleanDateTimeStringInt32StringStringTransitionTypeStringBooleanBooleanSslStatus">
            <summary>设置 NavigationEntry.NavigationEntry(Boolean isCurrent, DateTime completionTime, String displayUrl, Int32 httpStatusCode, String originalUrl, String title, TransitionType transitionType, String url, Boolean hasPostData, Boolean isValid, SslStatus sslStatus) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.DisplayUrlGet">
            <summary>设置 NavigationEntry.get_DisplayUrl() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.DisplayUrlSetString">
            <summary>设置 NavigationEntry.set_DisplayUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.HasPostDataGet">
            <summary>设置 NavigationEntry.get_HasPostData() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.HasPostDataSetBoolean">
            <summary>设置 NavigationEntry.set_HasPostData(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.HttpStatusCodeGet">
            <summary>设置 NavigationEntry.get_HttpStatusCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.HttpStatusCodeSetInt32">
            <summary>设置 NavigationEntry.set_HttpStatusCode(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.IsCurrentGet">
            <summary>设置 NavigationEntry.get_IsCurrent() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.IsCurrentSetBoolean">
            <summary>设置 NavigationEntry.set_IsCurrent(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.IsValidGet">
            <summary>设置 NavigationEntry.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.IsValidSetBoolean">
            <summary>设置 NavigationEntry.set_IsValid(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.OriginalUrlGet">
            <summary>设置 NavigationEntry.get_OriginalUrl() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.OriginalUrlSetString">
            <summary>设置 NavigationEntry.set_OriginalUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.SslStatusGet">
            <summary>设置 NavigationEntry.get_SslStatus() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.SslStatusSetSslStatus">
            <summary>设置 NavigationEntry.set_SslStatus(SslStatus value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.TitleGet">
            <summary>设置 NavigationEntry.get_Title() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.TitleSetString">
            <summary>设置 NavigationEntry.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.TransitionTypeGet">
            <summary>设置 NavigationEntry.get_TransitionType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.TransitionTypeSetTransitionType">
            <summary>设置 NavigationEntry.set_TransitionType(TransitionType value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.UrlGet">
            <summary>设置 NavigationEntry.get_Url() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimNavigationEntry.UrlSetString">
            <summary>设置 NavigationEntry.set_Url(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimPdfPrintSettings">
            <summary>CefSharp.PdfPrintSettings 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimPdfPrintSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimPdfPrintSettings.#ctor(CefSharp.PdfPrintSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.BackgroundsEnabledGet">
            <summary>设置 PdfPrintSettings.get_BackgroundsEnabled() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.BackgroundsEnabledSetBoolean">
            <summary>设置 PdfPrintSettings.set_BackgroundsEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.HeaderFooterEnabledGet">
            <summary>设置 PdfPrintSettings.get_HeaderFooterEnabled() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.HeaderFooterEnabledSetBoolean">
            <summary>设置 PdfPrintSettings.set_HeaderFooterEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.HeaderFooterTitleGet">
            <summary>设置 PdfPrintSettings.get_HeaderFooterTitle() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.HeaderFooterTitleSetString">
            <summary>设置 PdfPrintSettings.set_HeaderFooterTitle(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.HeaderFooterUrlGet">
            <summary>设置 PdfPrintSettings.get_HeaderFooterUrl() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.HeaderFooterUrlSetString">
            <summary>设置 PdfPrintSettings.set_HeaderFooterUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.LandscapeGet">
            <summary>设置 PdfPrintSettings.get_Landscape() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.LandscapeSetBoolean">
            <summary>设置 PdfPrintSettings.set_Landscape(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.MarginBottomGet">
            <summary>设置 PdfPrintSettings.get_MarginBottom() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.MarginBottomSetDouble">
            <summary>设置 PdfPrintSettings.set_MarginBottom(Double value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.MarginLeftGet">
            <summary>设置 PdfPrintSettings.get_MarginLeft() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.MarginLeftSetDouble">
            <summary>设置 PdfPrintSettings.set_MarginLeft(Double value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.MarginRightGet">
            <summary>设置 PdfPrintSettings.get_MarginRight() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.MarginRightSetDouble">
            <summary>设置 PdfPrintSettings.set_MarginRight(Double value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.MarginTopGet">
            <summary>设置 PdfPrintSettings.get_MarginTop() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.MarginTopSetDouble">
            <summary>设置 PdfPrintSettings.set_MarginTop(Double value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.MarginTypeGet">
            <summary>设置 PdfPrintSettings.get_MarginType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.MarginTypeSetCefPdfPrintMarginType">
            <summary>设置 PdfPrintSettings.set_MarginType(CefPdfPrintMarginType value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.PageHeightGet">
            <summary>设置 PdfPrintSettings.get_PageHeight() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.PageHeightSetInt32">
            <summary>设置 PdfPrintSettings.set_PageHeight(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.PageWidthGet">
            <summary>设置 PdfPrintSettings.get_PageWidth() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.PageWidthSetInt32">
            <summary>设置 PdfPrintSettings.set_PageWidth(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.ScaleFactorGet">
            <summary>设置 PdfPrintSettings.get_ScaleFactor() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.ScaleFactorSetInt32">
            <summary>设置 PdfPrintSettings.set_ScaleFactor(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.SelectionOnlyGet">
            <summary>设置 PdfPrintSettings.get_SelectionOnly() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.AllInstances.SelectionOnlySetBoolean">
            <summary>设置 PdfPrintSettings.set_SelectionOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.BackgroundsEnabledGet">
            <summary>设置 PdfPrintSettings.get_BackgroundsEnabled() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.BackgroundsEnabledSetBoolean">
            <summary>设置 PdfPrintSettings.set_BackgroundsEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimPdfPrintSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimPdfPrintSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.Constructor">
            <summary>设置 PdfPrintSettings.PdfPrintSettings() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.HeaderFooterEnabledGet">
            <summary>设置 PdfPrintSettings.get_HeaderFooterEnabled() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.HeaderFooterEnabledSetBoolean">
            <summary>设置 PdfPrintSettings.set_HeaderFooterEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.HeaderFooterTitleGet">
            <summary>设置 PdfPrintSettings.get_HeaderFooterTitle() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.HeaderFooterTitleSetString">
            <summary>设置 PdfPrintSettings.set_HeaderFooterTitle(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.HeaderFooterUrlGet">
            <summary>设置 PdfPrintSettings.get_HeaderFooterUrl() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.HeaderFooterUrlSetString">
            <summary>设置 PdfPrintSettings.set_HeaderFooterUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.LandscapeGet">
            <summary>设置 PdfPrintSettings.get_Landscape() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.LandscapeSetBoolean">
            <summary>设置 PdfPrintSettings.set_Landscape(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.MarginBottomGet">
            <summary>设置 PdfPrintSettings.get_MarginBottom() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.MarginBottomSetDouble">
            <summary>设置 PdfPrintSettings.set_MarginBottom(Double value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.MarginLeftGet">
            <summary>设置 PdfPrintSettings.get_MarginLeft() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.MarginLeftSetDouble">
            <summary>设置 PdfPrintSettings.set_MarginLeft(Double value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.MarginRightGet">
            <summary>设置 PdfPrintSettings.get_MarginRight() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.MarginRightSetDouble">
            <summary>设置 PdfPrintSettings.set_MarginRight(Double value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.MarginTopGet">
            <summary>设置 PdfPrintSettings.get_MarginTop() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.MarginTopSetDouble">
            <summary>设置 PdfPrintSettings.set_MarginTop(Double value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.MarginTypeGet">
            <summary>设置 PdfPrintSettings.get_MarginType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.MarginTypeSetCefPdfPrintMarginType">
            <summary>设置 PdfPrintSettings.set_MarginType(CefPdfPrintMarginType value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.PageHeightGet">
            <summary>设置 PdfPrintSettings.get_PageHeight() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.PageHeightSetInt32">
            <summary>设置 PdfPrintSettings.set_PageHeight(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.PageWidthGet">
            <summary>设置 PdfPrintSettings.get_PageWidth() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.PageWidthSetInt32">
            <summary>设置 PdfPrintSettings.set_PageWidth(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.ScaleFactorGet">
            <summary>设置 PdfPrintSettings.get_ScaleFactor() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.ScaleFactorSetInt32">
            <summary>设置 PdfPrintSettings.set_ScaleFactor(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.SelectionOnlyGet">
            <summary>设置 PdfPrintSettings.get_SelectionOnly() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPdfPrintSettings.SelectionOnlySetBoolean">
            <summary>设置 PdfPrintSettings.set_SelectionOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimPostDataExtensions">
            <summary>CefSharp.PostDataExtensions 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimPostDataExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPostDataExtensions.AddDataIPostDataByteArray">
            <summary>设置 PostDataExtensions.AddData(IPostData postData, Byte[] bytes) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPostDataExtensions.AddDataIPostDataStringEncoding">
            <summary>设置 PostDataExtensions.AddData(IPostData postData, String data, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPostDataExtensions.AddFileIPostDataString">
            <summary>设置 PostDataExtensions.AddFile(IPostData postData, String fileName) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimPostDataExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimPostDataExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPostDataExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPostDataExtensions.GetBodyIPostDataElementString">
            <summary>设置 PostDataExtensions.GetBody(IPostDataElement postDataElement, String charSet) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimPostDataExtensions.GetCharSetIRequest">
            <summary>设置 PostDataExtensions.GetCharSet(IRequest request) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimProxyOptions">
            <summary>CefSharp.ProxyOptions 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimProxyOptions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimProxyOptions.#ctor(CefSharp.ProxyOptions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimProxyOptions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.AllInstances.BypassListGet">
            <summary>设置 ProxyOptions.get_BypassList() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.AllInstances.BypassListSetString">
            <summary>设置 ProxyOptions.set_BypassList(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.AllInstances.HasUsernameAndPassword">
            <summary>设置 ProxyOptions.HasUsernameAndPassword() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.AllInstances.IPGet">
            <summary>设置 ProxyOptions.get_IP() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.AllInstances.IPSetString">
            <summary>设置 ProxyOptions.set_IP(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.AllInstances.PasswordGet">
            <summary>设置 ProxyOptions.get_Password() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.AllInstances.PasswordSetString">
            <summary>设置 ProxyOptions.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.AllInstances.PortGet">
            <summary>设置 ProxyOptions.get_Port() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.AllInstances.PortSetString">
            <summary>设置 ProxyOptions.set_Port(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.AllInstances.UsernameGet">
            <summary>设置 ProxyOptions.get_Username() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.AllInstances.UsernameSetString">
            <summary>设置 ProxyOptions.set_Username(String value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimProxyOptions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimProxyOptions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.BypassListGet">
            <summary>设置 ProxyOptions.get_BypassList() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.BypassListSetString">
            <summary>设置 ProxyOptions.set_BypassList(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.ConstructorStringStringStringStringString">
            <summary>设置 ProxyOptions.ProxyOptions(String ip, String port, String username, String password, String bypassList) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.HasUsernameAndPassword">
            <summary>设置 ProxyOptions.HasUsernameAndPassword() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.IPGet">
            <summary>设置 ProxyOptions.get_IP() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.IPSetString">
            <summary>设置 ProxyOptions.set_IP(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.PasswordGet">
            <summary>设置 ProxyOptions.get_Password() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.PasswordSetString">
            <summary>设置 ProxyOptions.set_Password(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.PortGet">
            <summary>设置 ProxyOptions.get_Port() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.PortSetString">
            <summary>设置 ProxyOptions.set_Port(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.UsernameGet">
            <summary>设置 ProxyOptions.get_Username() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimProxyOptions.UsernameSetString">
            <summary>设置 ProxyOptions.set_Username(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimResolveCallbackResult">
            <summary>CefSharp.ResolveCallbackResult 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimResolveCallbackResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimResolveCallbackResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimResolveCallbackResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimResolveCallbackResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResolveCallbackResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimResourceHandler">
            <summary>CefSharp.ResourceHandler 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimResourceHandler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimResourceHandler.#ctor(CefSharp.ResourceHandler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimResourceHandler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.AutoDisposeStreamGet">
            <summary>设置 ResourceHandler.get_AutoDisposeStream() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.AutoDisposeStreamSetBoolean">
            <summary>设置 ResourceHandler.set_AutoDisposeStream(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.Cancel">
            <summary>设置 ResourceHandler.Cancel() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.CefSharpIResourceHandlerCanGetCookieCookie">
            <summary>设置 ResourceHandler.CefSharp.IResourceHandler.CanGetCookie(Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.CefSharpIResourceHandlerCanSetCookieCookie">
            <summary>设置 ResourceHandler.CefSharp.IResourceHandler.CanSetCookie(Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.CefSharpIResourceHandlerCancel">
            <summary>设置 ResourceHandler.CefSharp.IResourceHandler.Cancel() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.CefSharpIResourceHandlerGetResponseHeadersIResponseInt64OutStringOut">
            <summary>设置 ResourceHandler.CefSharp.IResourceHandler.GetResponseHeaders(IResponse response, Int64&amp; responseLength, String&amp; redirectUrl) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.CefSharpIResourceHandlerProcessRequestIRequestICallback">
            <summary>设置 ResourceHandler.CefSharp.IResourceHandler.ProcessRequest(IRequest request, ICallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.CefSharpIResourceHandlerReadResponseStreamInt32OutICallback">
            <summary>设置 ResourceHandler.CefSharp.IResourceHandler.ReadResponse(Stream dataOut, Int32&amp; bytesRead, ICallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.Dispose">
            <summary>设置 ResourceHandler.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.ErrorCodeGet">
            <summary>设置 ResourceHandler.get_ErrorCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.ErrorCodeSetNullableOfCefErrorCode">
            <summary>设置 ResourceHandler.set_ErrorCode(Nullable`1&lt;CefErrorCode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.GetResponseIResponseInt64OutStringOut">
            <summary>设置 ResourceHandler.GetResponse(IResponse response, Int64&amp; responseLength, String&amp; redirectUrl) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.HeadersGet">
            <summary>设置 ResourceHandler.get_Headers() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.HeadersSetNameValueCollection">
            <summary>设置 ResourceHandler.set_Headers(NameValueCollection value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.MimeTypeGet">
            <summary>设置 ResourceHandler.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.MimeTypeSetString">
            <summary>设置 ResourceHandler.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.ProcessRequestAsyncIRequestICallback">
            <summary>设置 ResourceHandler.ProcessRequestAsync(IRequest request, ICallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.ResponseLengthGet">
            <summary>设置 ResourceHandler.get_ResponseLength() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.ResponseLengthSetNullableOfInt64">
            <summary>设置 ResourceHandler.set_ResponseLength(Nullable`1&lt;Int64&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.StatusCodeGet">
            <summary>设置 ResourceHandler.get_StatusCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.StatusCodeSetInt32">
            <summary>设置 ResourceHandler.set_StatusCode(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.StatusTextGet">
            <summary>设置 ResourceHandler.get_StatusText() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.StatusTextSetString">
            <summary>设置 ResourceHandler.set_StatusText(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.StreamGet">
            <summary>设置 ResourceHandler.get_Stream() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AllInstances.StreamSetStream">
            <summary>设置 ResourceHandler.set_Stream(Stream value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AutoDisposeStreamGet">
            <summary>设置 ResourceHandler.get_AutoDisposeStream() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.AutoDisposeStreamSetBoolean">
            <summary>设置 ResourceHandler.set_AutoDisposeStream(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimResourceHandler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimResourceHandler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimResourceHandler.Bind(CefSharp.IResourceHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimResourceHandler.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.Cancel">
            <summary>设置 ResourceHandler.Cancel() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.CefSharpIResourceHandlerCanGetCookieCookie">
            <summary>设置 ResourceHandler.CefSharp.IResourceHandler.CanGetCookie(Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.CefSharpIResourceHandlerCanSetCookieCookie">
            <summary>设置 ResourceHandler.CefSharp.IResourceHandler.CanSetCookie(Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.CefSharpIResourceHandlerCancel">
            <summary>设置 ResourceHandler.CefSharp.IResourceHandler.Cancel() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.CefSharpIResourceHandlerGetResponseHeadersIResponseInt64OutStringOut">
            <summary>设置 ResourceHandler.CefSharp.IResourceHandler.GetResponseHeaders(IResponse response, Int64&amp; responseLength, String&amp; redirectUrl) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.CefSharpIResourceHandlerProcessRequestIRequestICallback">
            <summary>设置 ResourceHandler.CefSharp.IResourceHandler.ProcessRequest(IRequest request, ICallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.ConstructorStringStreamBoolean">
            <summary>设置 ResourceHandler.ResourceHandler(String mimeType, Stream stream, Boolean autoDisposeStream) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.Dispose">
            <summary>设置 ResourceHandler.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.ErrorCodeGet">
            <summary>设置 ResourceHandler.get_ErrorCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.ErrorCodeSetNullableOfCefErrorCode">
            <summary>设置 ResourceHandler.set_ErrorCode(Nullable`1&lt;CefErrorCode&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.ForErrorMessageStringHttpStatusCode">
            <summary>设置 ResourceHandler.ForErrorMessage(String errorMessage, HttpStatusCode statusCode) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.FromByteArrayByteArrayString">
            <summary>设置 ResourceHandler.FromByteArray(Byte[] data, String mimeType) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.FromFilePathStringStringBoolean">
            <summary>设置 ResourceHandler.FromFilePath(String filePath, String mimeType, Boolean autoDisposeStream) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.FromStreamStreamStringBoolean">
            <summary>设置 ResourceHandler.FromStream(Stream stream, String mimeType, Boolean autoDisposeStream) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.FromStringStringEncodingBooleanString">
            <summary>设置 ResourceHandler.FromString(String text, Encoding encoding, Boolean includePreamble, String mimeType) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.FromStringStringString">
            <summary>设置 ResourceHandler.FromString(String text, String fileExtension) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.GetByteArrayStringEncodingBoolean">
            <summary>设置 ResourceHandler.GetByteArray(String text, Encoding encoding, Boolean includePreamble) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.GetMemoryStreamStringEncodingBoolean">
            <summary>设置 ResourceHandler.GetMemoryStream(String text, Encoding encoding, Boolean includePreamble) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.GetMimeTypeString">
            <summary>设置 ResourceHandler.GetMimeType(String extension) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.GetResponseIResponseInt64OutStringOut">
            <summary>设置 ResourceHandler.GetResponse(IResponse response, Int64&amp; responseLength, String&amp; redirectUrl) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.HeadersGet">
            <summary>设置 ResourceHandler.get_Headers() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.HeadersSetNameValueCollection">
            <summary>设置 ResourceHandler.set_Headers(NameValueCollection value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.MimeTypeGet">
            <summary>设置 ResourceHandler.get_MimeType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.MimeTypeSetString">
            <summary>设置 ResourceHandler.set_MimeType(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.ProcessRequestAsyncIRequestICallback">
            <summary>设置 ResourceHandler.ProcessRequestAsync(IRequest request, ICallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.ResponseLengthGet">
            <summary>设置 ResourceHandler.get_ResponseLength() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.ResponseLengthSetNullableOfInt64">
            <summary>设置 ResourceHandler.set_ResponseLength(Nullable`1&lt;Int64&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.StaticConstructor">
            <summary>设置 ResourceHandler.ResourceHandler() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.StatusCodeGet">
            <summary>设置 ResourceHandler.get_StatusCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.StatusCodeSetInt32">
            <summary>设置 ResourceHandler.set_StatusCode(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.StatusTextGet">
            <summary>设置 ResourceHandler.get_StatusText() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.StatusTextSetString">
            <summary>设置 ResourceHandler.set_StatusText(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.StreamGet">
            <summary>设置 ResourceHandler.get_Stream() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimResourceHandler.StreamSetStream">
            <summary>设置 ResourceHandler.set_Stream(Stream value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimSslStatus">
            <summary>CefSharp.SslStatus 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimSslStatus.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimSslStatus.#ctor(CefSharp.SslStatus)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimSslStatus.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.AllInstances.CertStatusGet">
            <summary>设置 SslStatus.get_CertStatus() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.AllInstances.CertStatusSetCertStatus">
            <summary>设置 SslStatus.set_CertStatus(CertStatus value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.AllInstances.ContentStatusGet">
            <summary>设置 SslStatus.get_ContentStatus() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.AllInstances.ContentStatusSetSslContentStatus">
            <summary>设置 SslStatus.set_ContentStatus(SslContentStatus value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.AllInstances.IsSecureConnectionGet">
            <summary>设置 SslStatus.get_IsSecureConnection() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.AllInstances.IsSecureConnectionSetBoolean">
            <summary>设置 SslStatus.set_IsSecureConnection(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.AllInstances.SslVersionGet">
            <summary>设置 SslStatus.get_SslVersion() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.AllInstances.SslVersionSetSslVersion">
            <summary>设置 SslStatus.set_SslVersion(SslVersion value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.AllInstances.X509CertificateGet">
            <summary>设置 SslStatus.get_X509Certificate() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.AllInstances.X509CertificateSetX509Certificate2">
            <summary>设置 SslStatus.set_X509Certificate(X509Certificate2 value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimSslStatus.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimSslStatus.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.CertStatusGet">
            <summary>设置 SslStatus.get_CertStatus() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.CertStatusSetCertStatus">
            <summary>设置 SslStatus.set_CertStatus(CertStatus value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.ConstructorBooleanCertStatusSslVersionSslContentStatusX509Certificate2">
            <summary>设置 SslStatus.SslStatus(Boolean isSecureConnection, CertStatus certStatus, SslVersion sslVersion, SslContentStatus contentStatus, X509Certificate2 certificate) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.ContentStatusGet">
            <summary>设置 SslStatus.get_ContentStatus() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.ContentStatusSetSslContentStatus">
            <summary>设置 SslStatus.set_ContentStatus(SslContentStatus value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.IsSecureConnectionGet">
            <summary>设置 SslStatus.get_IsSecureConnection() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.IsSecureConnectionSetBoolean">
            <summary>设置 SslStatus.set_IsSecureConnection(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.SslVersionGet">
            <summary>设置 SslStatus.get_SslVersion() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.SslVersionSetSslVersion">
            <summary>设置 SslStatus.set_SslVersion(SslVersion value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.X509CertificateGet">
            <summary>设置 SslStatus.get_X509Certificate() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimSslStatus.X509CertificateSetX509Certificate2">
            <summary>设置 SslStatus.set_X509Certificate(X509Certificate2 value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimStatusMessageEventArgs">
            <summary>CefSharp.StatusMessageEventArgs 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimStatusMessageEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimStatusMessageEventArgs.#ctor(CefSharp.StatusMessageEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimStatusMessageEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimStatusMessageEventArgs.AllInstances.BrowserGet">
            <summary>设置 StatusMessageEventArgs.get_Browser() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimStatusMessageEventArgs.AllInstances.BrowserSetIBrowser">
            <summary>设置 StatusMessageEventArgs.set_Browser(IBrowser value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimStatusMessageEventArgs.AllInstances.ValueGet">
            <summary>设置 StatusMessageEventArgs.get_Value() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimStatusMessageEventArgs.AllInstances.ValueSetString">
            <summary>设置 StatusMessageEventArgs.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimStatusMessageEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimStatusMessageEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimStatusMessageEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimStatusMessageEventArgs.BrowserGet">
            <summary>设置 StatusMessageEventArgs.get_Browser() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimStatusMessageEventArgs.BrowserSetIBrowser">
            <summary>设置 StatusMessageEventArgs.set_Browser(IBrowser value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimStatusMessageEventArgs.ConstructorIBrowserString">
            <summary>设置 StatusMessageEventArgs.StatusMessageEventArgs(IBrowser browser, String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimStatusMessageEventArgs.ValueGet">
            <summary>设置 StatusMessageEventArgs.get_Value() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimStatusMessageEventArgs.ValueSetString">
            <summary>设置 StatusMessageEventArgs.set_Value(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskCompletionCallback">
            <summary>CefSharp.TaskCompletionCallback 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskCompletionCallback.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskCompletionCallback.#ctor(CefSharp.TaskCompletionCallback)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskCompletionCallback.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCompletionCallback.AllInstances.CefSharpICompletionCallbackOnComplete">
            <summary>设置 TaskCompletionCallback.CefSharp.ICompletionCallback.OnComplete() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCompletionCallback.AllInstances.IsDisposedCefSharpICompletionCallbackget">
            <summary>设置 TaskCompletionCallback.CefSharp.ICompletionCallback.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCompletionCallback.AllInstances.SystemIDisposableDispose">
            <summary>设置 TaskCompletionCallback.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCompletionCallback.AllInstances.TaskGet">
            <summary>设置 TaskCompletionCallback.get_Task() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskCompletionCallback.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskCompletionCallback.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCompletionCallback.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskCompletionCallback.Bind(CefSharp.ICompletionCallback)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskCompletionCallback.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCompletionCallback.CefSharpICompletionCallbackOnComplete">
            <summary>设置 TaskCompletionCallback.CefSharp.ICompletionCallback.OnComplete() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCompletionCallback.Constructor">
            <summary>设置 TaskCompletionCallback.TaskCompletionCallback() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCompletionCallback.IsDisposedCefSharpICompletionCallbackget">
            <summary>设置 TaskCompletionCallback.CefSharp.ICompletionCallback.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCompletionCallback.SystemIDisposableDispose">
            <summary>设置 TaskCompletionCallback.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCompletionCallback.TaskGet">
            <summary>设置 TaskCompletionCallback.get_Task() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskCookieVisitor">
            <summary>CefSharp.TaskCookieVisitor 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskCookieVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskCookieVisitor.#ctor(CefSharp.TaskCookieVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskCookieVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCookieVisitor.AllInstances.CefSharpICookieVisitorVisitCookieInt32Int32BooleanRef">
            <summary>设置 TaskCookieVisitor.CefSharp.ICookieVisitor.Visit(Cookie cookie, Int32 count, Int32 total, Boolean&amp; deleteCookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCookieVisitor.AllInstances.SystemIDisposableDispose">
            <summary>设置 TaskCookieVisitor.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCookieVisitor.AllInstances.TaskGet">
            <summary>设置 TaskCookieVisitor.get_Task() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskCookieVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskCookieVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCookieVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskCookieVisitor.Bind(CefSharp.ICookieVisitor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskCookieVisitor.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCookieVisitor.CefSharpICookieVisitorVisitCookieInt32Int32BooleanRef">
            <summary>设置 TaskCookieVisitor.CefSharp.ICookieVisitor.Visit(Cookie cookie, Int32 count, Int32 total, Boolean&amp; deleteCookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCookieVisitor.Constructor">
            <summary>设置 TaskCookieVisitor.TaskCookieVisitor() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCookieVisitor.SystemIDisposableDispose">
            <summary>设置 TaskCookieVisitor.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskCookieVisitor.TaskGet">
            <summary>设置 TaskCookieVisitor.get_Task() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskDeleteCookiesCallback">
            <summary>CefSharp.TaskDeleteCookiesCallback 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.#ctor(CefSharp.TaskDeleteCookiesCallback)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.AllInstances.CefSharpIDeleteCookiesCallbackOnCompleteInt32">
            <summary>设置 TaskDeleteCookiesCallback.CefSharp.IDeleteCookiesCallback.OnComplete(Int32 numDeleted) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.AllInstances.IsDisposedCefSharpIDeleteCookiesCallbackget">
            <summary>设置 TaskDeleteCookiesCallback.CefSharp.IDeleteCookiesCallback.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.AllInstances.SystemIDisposableDispose">
            <summary>设置 TaskDeleteCookiesCallback.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.AllInstances.TaskGet">
            <summary>设置 TaskDeleteCookiesCallback.get_Task() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.Bind(CefSharp.IDeleteCookiesCallback)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.CefSharpIDeleteCookiesCallbackOnCompleteInt32">
            <summary>设置 TaskDeleteCookiesCallback.CefSharp.IDeleteCookiesCallback.OnComplete(Int32 numDeleted) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.Constructor">
            <summary>设置 TaskDeleteCookiesCallback.TaskDeleteCookiesCallback() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.IsDisposedCefSharpIDeleteCookiesCallbackget">
            <summary>设置 TaskDeleteCookiesCallback.CefSharp.IDeleteCookiesCallback.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.SystemIDisposableDispose">
            <summary>设置 TaskDeleteCookiesCallback.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskDeleteCookiesCallback.TaskGet">
            <summary>设置 TaskDeleteCookiesCallback.get_Task() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskNavigationEntryVisitor">
            <summary>CefSharp.TaskNavigationEntryVisitor 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.#ctor(CefSharp.TaskNavigationEntryVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.AllInstances.CefSharpINavigationEntryVisitorVisitNavigationEntryBooleanInt32Int32">
            <summary>设置 TaskNavigationEntryVisitor.CefSharp.INavigationEntryVisitor.Visit(NavigationEntry entry, Boolean current, Int32 index, Int32 total) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.AllInstances.SystemIDisposableDispose">
            <summary>设置 TaskNavigationEntryVisitor.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.AllInstances.TaskGet">
            <summary>设置 TaskNavigationEntryVisitor.get_Task() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.Bind(CefSharp.INavigationEntryVisitor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.CefSharpINavigationEntryVisitorVisitNavigationEntryBooleanInt32Int32">
            <summary>设置 TaskNavigationEntryVisitor.CefSharp.INavigationEntryVisitor.Visit(NavigationEntry entry, Boolean current, Int32 index, Int32 total) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.Constructor">
            <summary>设置 TaskNavigationEntryVisitor.TaskNavigationEntryVisitor() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.SystemIDisposableDispose">
            <summary>设置 TaskNavigationEntryVisitor.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskNavigationEntryVisitor.TaskGet">
            <summary>设置 TaskNavigationEntryVisitor.get_Task() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskPrintToPdfCallback">
            <summary>CefSharp.TaskPrintToPdfCallback 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskPrintToPdfCallback.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskPrintToPdfCallback.#ctor(CefSharp.TaskPrintToPdfCallback)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskPrintToPdfCallback.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskPrintToPdfCallback.AllInstances.CefSharpIPrintToPdfCallbackOnPdfPrintFinishedStringBoolean">
            <summary>设置 TaskPrintToPdfCallback.CefSharp.IPrintToPdfCallback.OnPdfPrintFinished(String path, Boolean ok) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskPrintToPdfCallback.AllInstances.IsDisposedCefSharpIPrintToPdfCallbackget">
            <summary>设置 TaskPrintToPdfCallback.CefSharp.IPrintToPdfCallback.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskPrintToPdfCallback.AllInstances.SystemIDisposableDispose">
            <summary>设置 TaskPrintToPdfCallback.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskPrintToPdfCallback.AllInstances.TaskGet">
            <summary>设置 TaskPrintToPdfCallback.get_Task() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskPrintToPdfCallback.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskPrintToPdfCallback.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskPrintToPdfCallback.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskPrintToPdfCallback.Bind(CefSharp.IPrintToPdfCallback)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskPrintToPdfCallback.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskPrintToPdfCallback.CefSharpIPrintToPdfCallbackOnPdfPrintFinishedStringBoolean">
            <summary>设置 TaskPrintToPdfCallback.CefSharp.IPrintToPdfCallback.OnPdfPrintFinished(String path, Boolean ok) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskPrintToPdfCallback.Constructor">
            <summary>设置 TaskPrintToPdfCallback.TaskPrintToPdfCallback() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskPrintToPdfCallback.IsDisposedCefSharpIPrintToPdfCallbackget">
            <summary>设置 TaskPrintToPdfCallback.CefSharp.IPrintToPdfCallback.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskPrintToPdfCallback.SystemIDisposableDispose">
            <summary>设置 TaskPrintToPdfCallback.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskPrintToPdfCallback.TaskGet">
            <summary>设置 TaskPrintToPdfCallback.get_Task() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskRegisterCdmCallback">
            <summary>CefSharp.TaskRegisterCdmCallback 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskRegisterCdmCallback.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskRegisterCdmCallback.#ctor(CefSharp.TaskRegisterCdmCallback)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskRegisterCdmCallback.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskRegisterCdmCallback.AllInstances.CefSharpIRegisterCdmCallbackOnRegistrationCompleteCdmRegistration">
            <summary>设置 TaskRegisterCdmCallback.CefSharp.IRegisterCdmCallback.OnRegistrationComplete(CdmRegistration registration) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskRegisterCdmCallback.AllInstances.IsDisposedCefSharpIRegisterCdmCallbackget">
            <summary>设置 TaskRegisterCdmCallback.CefSharp.IRegisterCdmCallback.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskRegisterCdmCallback.AllInstances.SystemIDisposableDispose">
            <summary>设置 TaskRegisterCdmCallback.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskRegisterCdmCallback.AllInstances.TaskGet">
            <summary>设置 TaskRegisterCdmCallback.get_Task() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskRegisterCdmCallback.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskRegisterCdmCallback.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskRegisterCdmCallback.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskRegisterCdmCallback.Bind(CefSharp.IRegisterCdmCallback)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskRegisterCdmCallback.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskRegisterCdmCallback.CefSharpIRegisterCdmCallbackOnRegistrationCompleteCdmRegistration">
            <summary>设置 TaskRegisterCdmCallback.CefSharp.IRegisterCdmCallback.OnRegistrationComplete(CdmRegistration registration) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskRegisterCdmCallback.Constructor">
            <summary>设置 TaskRegisterCdmCallback.TaskRegisterCdmCallback() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskRegisterCdmCallback.IsDisposedCefSharpIRegisterCdmCallbackget">
            <summary>设置 TaskRegisterCdmCallback.CefSharp.IRegisterCdmCallback.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskRegisterCdmCallback.SystemIDisposableDispose">
            <summary>设置 TaskRegisterCdmCallback.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskRegisterCdmCallback.TaskGet">
            <summary>设置 TaskRegisterCdmCallback.get_Task() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskResolveCallback">
            <summary>CefSharp.TaskResolveCallback 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskResolveCallback.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskResolveCallback.#ctor(CefSharp.TaskResolveCallback)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskResolveCallback.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskResolveCallback.AllInstances.CefSharpIResolveCallbackOnResolveCompletedCefErrorCodeIListOfString">
            <summary>设置 TaskResolveCallback.CefSharp.IResolveCallback.OnResolveCompleted(CefErrorCode result, IList`1&lt;String&gt; resolvedIpAddresses) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskResolveCallback.AllInstances.IsDisposedCefSharpIResolveCallbackget">
            <summary>设置 TaskResolveCallback.CefSharp.IResolveCallback.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskResolveCallback.AllInstances.SystemIDisposableDispose">
            <summary>设置 TaskResolveCallback.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskResolveCallback.AllInstances.TaskGet">
            <summary>设置 TaskResolveCallback.get_Task() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskResolveCallback.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskResolveCallback.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskResolveCallback.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskResolveCallback.Bind(CefSharp.IResolveCallback)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskResolveCallback.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskResolveCallback.CefSharpIResolveCallbackOnResolveCompletedCefErrorCodeIListOfString">
            <summary>设置 TaskResolveCallback.CefSharp.IResolveCallback.OnResolveCompleted(CefErrorCode result, IList`1&lt;String&gt; resolvedIpAddresses) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskResolveCallback.Constructor">
            <summary>设置 TaskResolveCallback.TaskResolveCallback() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskResolveCallback.IsDisposedCefSharpIResolveCallbackget">
            <summary>设置 TaskResolveCallback.CefSharp.IResolveCallback.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskResolveCallback.SystemIDisposableDispose">
            <summary>设置 TaskResolveCallback.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskResolveCallback.TaskGet">
            <summary>设置 TaskResolveCallback.get_Task() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskSetCookieCallback">
            <summary>CefSharp.TaskSetCookieCallback 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskSetCookieCallback.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskSetCookieCallback.#ctor(CefSharp.TaskSetCookieCallback)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskSetCookieCallback.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskSetCookieCallback.AllInstances.CefSharpISetCookieCallbackOnCompleteBoolean">
            <summary>设置 TaskSetCookieCallback.CefSharp.ISetCookieCallback.OnComplete(Boolean success) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskSetCookieCallback.AllInstances.IsDisposedCefSharpISetCookieCallbackget">
            <summary>设置 TaskSetCookieCallback.CefSharp.ISetCookieCallback.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskSetCookieCallback.AllInstances.SystemIDisposableDispose">
            <summary>设置 TaskSetCookieCallback.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskSetCookieCallback.AllInstances.TaskGet">
            <summary>设置 TaskSetCookieCallback.get_Task() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskSetCookieCallback.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskSetCookieCallback.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskSetCookieCallback.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskSetCookieCallback.Bind(CefSharp.ISetCookieCallback)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskSetCookieCallback.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskSetCookieCallback.CefSharpISetCookieCallbackOnCompleteBoolean">
            <summary>设置 TaskSetCookieCallback.CefSharp.ISetCookieCallback.OnComplete(Boolean success) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskSetCookieCallback.Constructor">
            <summary>设置 TaskSetCookieCallback.TaskSetCookieCallback() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskSetCookieCallback.IsDisposedCefSharpISetCookieCallbackget">
            <summary>设置 TaskSetCookieCallback.CefSharp.ISetCookieCallback.get_IsDisposed() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskSetCookieCallback.SystemIDisposableDispose">
            <summary>设置 TaskSetCookieCallback.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskSetCookieCallback.TaskGet">
            <summary>设置 TaskSetCookieCallback.get_Task() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskStringVisitor">
            <summary>CefSharp.TaskStringVisitor 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskStringVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskStringVisitor.#ctor(CefSharp.TaskStringVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskStringVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskStringVisitor.AllInstances.CefSharpIStringVisitorVisitString">
            <summary>设置 TaskStringVisitor.CefSharp.IStringVisitor.Visit(String str) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskStringVisitor.AllInstances.SystemIDisposableDispose">
            <summary>设置 TaskStringVisitor.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskStringVisitor.AllInstances.TaskGet">
            <summary>设置 TaskStringVisitor.get_Task() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskStringVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskStringVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskStringVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskStringVisitor.Bind(CefSharp.IStringVisitor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskStringVisitor.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskStringVisitor.CefSharpIStringVisitorVisitString">
            <summary>设置 TaskStringVisitor.CefSharp.IStringVisitor.Visit(String str) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskStringVisitor.Constructor">
            <summary>设置 TaskStringVisitor.TaskStringVisitor() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskStringVisitor.SystemIDisposableDispose">
            <summary>设置 TaskStringVisitor.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskStringVisitor.TaskGet">
            <summary>设置 TaskStringVisitor.get_Task() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor">
            <summary>CefSharp.TaskWebPluginInfoVisitor 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.#ctor(CefSharp.TaskWebPluginInfoVisitor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.AllInstances.CefSharpIWebPluginInfoVisitorVisitWebPluginInfoInt32Int32">
            <summary>设置 TaskWebPluginInfoVisitor.CefSharp.IWebPluginInfoVisitor.Visit(WebPluginInfo plugin, Int32 count, Int32 total) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.AllInstances.SystemIDisposableDispose">
            <summary>设置 TaskWebPluginInfoVisitor.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.AllInstances.TaskGet">
            <summary>设置 TaskWebPluginInfoVisitor.get_Task() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.Bind(CefSharp.IWebPluginInfoVisitor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.CefSharpIWebPluginInfoVisitorVisitWebPluginInfoInt32Int32">
            <summary>设置 TaskWebPluginInfoVisitor.CefSharp.IWebPluginInfoVisitor.Visit(WebPluginInfo plugin, Int32 count, Int32 total) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.Constructor">
            <summary>设置 TaskWebPluginInfoVisitor.TaskWebPluginInfoVisitor() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.SystemIDisposableDispose">
            <summary>设置 TaskWebPluginInfoVisitor.System.IDisposable.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTaskWebPluginInfoVisitor.TaskGet">
            <summary>设置 TaskWebPluginInfoVisitor.get_Task() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTitleChangedEventArgs">
            <summary>CefSharp.TitleChangedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTitleChangedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTitleChangedEventArgs.#ctor(CefSharp.TitleChangedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimTitleChangedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTitleChangedEventArgs.AllInstances.TitleGet">
            <summary>设置 TitleChangedEventArgs.get_Title() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTitleChangedEventArgs.AllInstances.TitleSetString">
            <summary>设置 TitleChangedEventArgs.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTitleChangedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimTitleChangedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTitleChangedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTitleChangedEventArgs.ConstructorString">
            <summary>设置 TitleChangedEventArgs.TitleChangedEventArgs(String title) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTitleChangedEventArgs.TitleGet">
            <summary>设置 TitleChangedEventArgs.get_Title() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimTitleChangedEventArgs.TitleSetString">
            <summary>设置 TitleChangedEventArgs.set_Title(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimWebBrowserExtensions">
            <summary>CefSharp.WebBrowserExtensions 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimWebBrowserExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.AddWordToDictionaryIBrowserString">
            <summary>设置 WebBrowserExtensions.AddWordToDictionary(IBrowser cefBrowser, String word) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.AddWordToDictionaryIWebBrowserString">
            <summary>设置 WebBrowserExtensions.AddWordToDictionary(IWebBrowser browser, String word) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.BackIWebBrowser">
            <summary>设置 WebBrowserExtensions.Back(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimWebBrowserExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimWebBrowserExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.CloseDevToolsIBrowser">
            <summary>设置 WebBrowserExtensions.CloseDevTools(IBrowser cefBrowser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.CloseDevToolsIWebBrowser">
            <summary>设置 WebBrowserExtensions.CloseDevTools(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.CopyIWebBrowser">
            <summary>设置 WebBrowserExtensions.Copy(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.CutIWebBrowser">
            <summary>设置 WebBrowserExtensions.Cut(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.DeleteIWebBrowser">
            <summary>设置 WebBrowserExtensions.Delete(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.EncodeScriptParamGet">
            <summary>设置 WebBrowserExtensions.get_EncodeScriptParam() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.EncodeScriptParamSetFuncOfStringString">
            <summary>设置 WebBrowserExtensions.set_EncodeScriptParam(Func`2&lt;String,String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.EvaluateScriptAsyncIWebBrowserNullableOfTimeSpanStringObjectArray">
            <summary>设置 WebBrowserExtensions.EvaluateScriptAsync(IWebBrowser browser, Nullable`1&lt;TimeSpan&gt; timeout, String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.EvaluateScriptAsyncIWebBrowserStringNullableOfTimeSpan">
            <summary>设置 WebBrowserExtensions.EvaluateScriptAsync(IWebBrowser browser, String script, Nullable`1&lt;TimeSpan&gt; timeout) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.EvaluateScriptAsyncIWebBrowserStringObjectArray">
            <summary>设置 WebBrowserExtensions.EvaluateScriptAsync(IWebBrowser browser, String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ExecuteScriptAsyncIWebBrowserString">
            <summary>设置 WebBrowserExtensions.ExecuteScriptAsync(IWebBrowser browser, String script) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ExecuteScriptAsyncIWebBrowserStringObjectArray">
            <summary>设置 WebBrowserExtensions.ExecuteScriptAsync(IWebBrowser browser, String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.FindIBrowserInt32StringBooleanBooleanBoolean">
            <summary>设置 WebBrowserExtensions.Find(IBrowser cefBrowser, Int32 identifier, String searchText, Boolean forward, Boolean matchCase, Boolean findNext) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.FindIWebBrowserInt32StringBooleanBooleanBoolean">
            <summary>设置 WebBrowserExtensions.Find(IWebBrowser browser, Int32 identifier, String searchText, Boolean forward, Boolean matchCase, Boolean findNext) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ForwardIWebBrowser">
            <summary>设置 WebBrowserExtensions.Forward(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.GetBrowserHostIWebBrowser">
            <summary>设置 WebBrowserExtensions.GetBrowserHost(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.GetCookieManagerIWebBrowserICompletionCallback">
            <summary>设置 WebBrowserExtensions.GetCookieManager(IWebBrowser browser, ICompletionCallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.GetFocusedFrameIWebBrowser">
            <summary>设置 WebBrowserExtensions.GetFocusedFrame(IWebBrowser webBrowser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.GetMainFrameIWebBrowser">
            <summary>设置 WebBrowserExtensions.GetMainFrame(IWebBrowser webBrowser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.GetScriptStringObjectArray">
            <summary>设置 WebBrowserExtensions.GetScript(String methodName, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.GetSourceAsyncIWebBrowser">
            <summary>设置 WebBrowserExtensions.GetSourceAsync(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.GetTextAsyncIWebBrowser">
            <summary>设置 WebBrowserExtensions.GetTextAsync(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.GetZoomLevelAsyncIBrowser">
            <summary>设置 WebBrowserExtensions.GetZoomLevelAsync(IBrowser cefBrowser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.GetZoomLevelAsyncIWebBrowser">
            <summary>设置 WebBrowserExtensions.GetZoomLevelAsync(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.LoadHtmlIWebBrowserStringBoolean">
            <summary>设置 WebBrowserExtensions.LoadHtml(IWebBrowser browser, String html, Boolean base64Encode) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.LoadHtmlIWebBrowserStringString">
            <summary>设置 WebBrowserExtensions.LoadHtml(IWebBrowser browser, String html, String url) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.LoadHtmlIWebBrowserStringStringEncodingBoolean">
            <summary>设置 WebBrowserExtensions.LoadHtml(IWebBrowser browser, String html, String url, Encoding encoding, Boolean oneTimeUse) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.LoadStringIWebBrowserStringString">
            <summary>设置 WebBrowserExtensions.LoadString(IWebBrowser browser, String html, String url) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.LoadUrlWithPostDataIWebBrowserStringByteArrayString">
            <summary>设置 WebBrowserExtensions.LoadUrlWithPostData(IWebBrowser browser, String url, Byte[] postDataBytes, String contentType) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.PasteIWebBrowser">
            <summary>设置 WebBrowserExtensions.Paste(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.PrintIBrowser">
            <summary>设置 WebBrowserExtensions.Print(IBrowser cefBrowser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.PrintIWebBrowser">
            <summary>设置 WebBrowserExtensions.Print(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.PrintToPdfAsyncIBrowserStringPdfPrintSettings">
            <summary>设置 WebBrowserExtensions.PrintToPdfAsync(IBrowser cefBrowser, String path, PdfPrintSettings settings) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.PrintToPdfAsyncIWebBrowserStringPdfPrintSettings">
            <summary>设置 WebBrowserExtensions.PrintToPdfAsync(IWebBrowser browser, String path, PdfPrintSettings settings) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.RedoIWebBrowser">
            <summary>设置 WebBrowserExtensions.Redo(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.RegisterResourceHandlerIWebBrowserStringStreamStringBoolean">
            <summary>设置 WebBrowserExtensions.RegisterResourceHandler(IWebBrowser browser, String url, Stream stream, String mimeType, Boolean oneTimeUse) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ReloadIWebBrowser">
            <summary>设置 WebBrowserExtensions.Reload(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ReloadIWebBrowserBoolean">
            <summary>设置 WebBrowserExtensions.Reload(IWebBrowser browser, Boolean ignoreCache) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ReplaceMisspellingIBrowserString">
            <summary>设置 WebBrowserExtensions.ReplaceMisspelling(IBrowser cefBrowser, String word) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ReplaceMisspellingIWebBrowserString">
            <summary>设置 WebBrowserExtensions.ReplaceMisspelling(IWebBrowser browser, String word) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.SelectAllIWebBrowser">
            <summary>设置 WebBrowserExtensions.SelectAll(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.SendMouseClickEventIBrowserHostInt32Int32MouseButtonTypeBooleanInt32CefEventFlags">
            <summary>设置 WebBrowserExtensions.SendMouseClickEvent(IBrowserHost host, Int32 x, Int32 y, MouseButtonType mouseButtonType, Boolean mouseUp, Int32 clickCount, CefEventFlags modifiers) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.SendMouseMoveEventIBrowserHostInt32Int32BooleanCefEventFlags">
            <summary>设置 WebBrowserExtensions.SendMouseMoveEvent(IBrowserHost host, Int32 x, Int32 y, Boolean mouseLeave, CefEventFlags modifiers) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.SendMouseWheelEventIBrowserHostInt32Int32Int32Int32CefEventFlags">
            <summary>设置 WebBrowserExtensions.SendMouseWheelEvent(IBrowserHost host, Int32 x, Int32 y, Int32 deltaX, Int32 deltaY, CefEventFlags modifiers) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.SendMouseWheelEventIBrowserInt32Int32Int32Int32CefEventFlags">
            <summary>设置 WebBrowserExtensions.SendMouseWheelEvent(IBrowser browser, Int32 x, Int32 y, Int32 deltaX, Int32 deltaY, CefEventFlags modifiers) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.SendMouseWheelEventIWebBrowserInt32Int32Int32Int32CefEventFlags">
            <summary>设置 WebBrowserExtensions.SendMouseWheelEvent(IWebBrowser browser, Int32 x, Int32 y, Int32 deltaX, Int32 deltaY, CefEventFlags modifiers) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.SetAsPopupIWebBrowser">
            <summary>设置 WebBrowserExtensions.SetAsPopup(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.SetZoomLevelIBrowserDouble">
            <summary>设置 WebBrowserExtensions.SetZoomLevel(IBrowser cefBrowser, Double zoomLevel) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.SetZoomLevelIWebBrowserDouble">
            <summary>设置 WebBrowserExtensions.SetZoomLevel(IWebBrowser browser, Double zoomLevel) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ShowDevToolsIBrowser">
            <summary>设置 WebBrowserExtensions.ShowDevTools(IBrowser cefBrowser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ShowDevToolsIWebBrowser">
            <summary>设置 WebBrowserExtensions.ShowDevTools(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.StaticConstructor">
            <summary>设置 WebBrowserExtensions.WebBrowserExtensions() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.StopFindingIBrowserBoolean">
            <summary>设置 WebBrowserExtensions.StopFinding(IBrowser cefBrowser, Boolean clearSelection) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.StopFindingIWebBrowserBoolean">
            <summary>设置 WebBrowserExtensions.StopFinding(IWebBrowser browser, Boolean clearSelection) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.StopIWebBrowser">
            <summary>设置 WebBrowserExtensions.Stop(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ThrowExceptionIfBrowserHostNullIBrowserHost">
            <summary>设置 WebBrowserExtensions.ThrowExceptionIfBrowserHostNull(IBrowserHost browserHost) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ThrowExceptionIfBrowserNotInitializedIWebBrowser">
            <summary>设置 WebBrowserExtensions.ThrowExceptionIfBrowserNotInitialized(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ThrowExceptionIfBrowserNullIBrowser">
            <summary>设置 WebBrowserExtensions.ThrowExceptionIfBrowserNull(IBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ThrowExceptionIfCanExecuteJavascriptInMainFrameFalse">
            <summary>设置 WebBrowserExtensions.ThrowExceptionIfCanExecuteJavascriptInMainFrameFalse() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ThrowExceptionIfFrameNullIFrame">
            <summary>设置 WebBrowserExtensions.ThrowExceptionIfFrameNull(IFrame frame) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.UnRegisterResourceHandlerIWebBrowserString">
            <summary>设置 WebBrowserExtensions.UnRegisterResourceHandler(IWebBrowser browser, String url) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.UndoIWebBrowser">
            <summary>设置 WebBrowserExtensions.Undo(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebBrowserExtensions.ViewSourceIWebBrowser">
            <summary>设置 WebBrowserExtensions.ViewSource(IWebBrowser browser) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimWebPluginInfo">
            <summary>CefSharp.WebPluginInfo 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimWebPluginInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimWebPluginInfo.#ctor(CefSharp.WebPluginInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.ShimWebPluginInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.AllInstances.DescriptionGet">
            <summary>设置 WebPluginInfo.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.AllInstances.DescriptionSetString">
            <summary>设置 WebPluginInfo.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.AllInstances.NameGet">
            <summary>设置 WebPluginInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.AllInstances.NameSetString">
            <summary>设置 WebPluginInfo.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.AllInstances.PathGet">
            <summary>设置 WebPluginInfo.get_Path() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.AllInstances.PathSetString">
            <summary>设置 WebPluginInfo.set_Path(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.AllInstances.VersionGet">
            <summary>设置 WebPluginInfo.get_Version() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.AllInstances.VersionSetString">
            <summary>设置 WebPluginInfo.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimWebPluginInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.ShimWebPluginInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.ConstructorStringStringStringString">
            <summary>设置 WebPluginInfo.WebPluginInfo(String name, String description, String path, String version) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.DescriptionGet">
            <summary>设置 WebPluginInfo.get_Description() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.DescriptionSetString">
            <summary>设置 WebPluginInfo.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.NameGet">
            <summary>设置 WebPluginInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.NameSetString">
            <summary>设置 WebPluginInfo.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.PathGet">
            <summary>设置 WebPluginInfo.get_Path() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.PathSetString">
            <summary>设置 WebPluginInfo.set_Path(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.VersionGet">
            <summary>设置 WebPluginInfo.get_Version() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Fakes.ShimWebPluginInfo.VersionSetString">
            <summary>设置 WebPluginInfo.set_Version(String value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubAddressChangedEventArgs">
            <summary>CefSharp.AddressChangedEventArgs 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubAddressChangedEventArgs.#ctor(CefSharp.IBrowser,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubAddressChangedEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubAddressChangedEventArgs.InitializeStub">
            <summary>初始化 type StubAddressChangedEventArgs 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubAddressChangedEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubAddressChangedEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubBindingOptions">
            <summary>CefSharp.BindingOptions 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubBindingOptions.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubBindingOptions.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubBindingOptions.InitializeStub">
            <summary>初始化 type StubBindingOptions 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubBindingOptions.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubBindingOptions.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubByteArrayResourceHandler">
            <summary>CefSharp.ByteArrayResourceHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubByteArrayResourceHandler.#ctor(System.String,System.Byte[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubByteArrayResourceHandler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubByteArrayResourceHandler.InitializeStub">
            <summary>初始化 type StubByteArrayResourceHandler 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubByteArrayResourceHandler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubByteArrayResourceHandler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubCefLibraryHandle">
            <summary>CefSharp.CefLibraryHandle 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubCefLibraryHandle.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubCefLibraryHandle.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubCefLibraryHandle.Dispose(System.Boolean)">
            <summary>设置 SafeHandle.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubCefLibraryHandle.DisposeBoolean">
            <summary>设置 SafeHandle.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubCefLibraryHandle.InitializeStub">
            <summary>初始化 type StubCefLibraryHandle 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubCefLibraryHandle.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubCefLibraryHandle.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubCefLibraryHandle.IsInvalid">
            <summary>设置 CefLibraryHandle.get_IsInvalid() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubCefLibraryHandle.IsInvalidGet">
            <summary>设置 CefLibraryHandle.get_IsInvalid() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubCefLibraryHandle.ReleaseHandle">
            <summary>设置 CefLibraryHandle.ReleaseHandle() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubCefLibraryHandle.ReleaseHandle01">
            <summary>设置 CefLibraryHandle.ReleaseHandle() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubConsoleMessageEventArgs">
            <summary>CefSharp.ConsoleMessageEventArgs 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubConsoleMessageEventArgs.#ctor(CefSharp.LogSeverity,System.String,System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubConsoleMessageEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubConsoleMessageEventArgs.InitializeStub">
            <summary>初始化 type StubConsoleMessageEventArgs 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubConsoleMessageEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubConsoleMessageEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubDefaultResourceHandlerFactory">
            <summary>CefSharp.DefaultResourceHandlerFactory 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubDefaultResourceHandlerFactory.#ctor(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubDefaultResourceHandlerFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubDefaultResourceHandlerFactory.GetResourceHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
            <summary>设置 DefaultResourceHandlerFactory.GetResourceHandler(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubDefaultResourceHandlerFactory.GetResourceHandlerIWebBrowserIBrowserIFrameIRequest">
            <summary>设置 DefaultResourceHandlerFactory.GetResourceHandler(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubDefaultResourceHandlerFactory.InitializeStub">
            <summary>初始化 type StubDefaultResourceHandlerFactory 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubDefaultResourceHandlerFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubDefaultResourceHandlerFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubDefaultResourceHandlerFactory.RegisterHandler(System.String,CefSharp.IResourceHandler,System.Boolean)">
            <summary>设置 DefaultResourceHandlerFactory.RegisterHandler(String url, IResourceHandler handler, Boolean oneTimeUse) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubDefaultResourceHandlerFactory.RegisterHandlerStringIResourceHandlerBoolean">
            <summary>设置 DefaultResourceHandlerFactory.RegisterHandler(String url, IResourceHandler handler, Boolean oneTimeUse) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubDefaultResourceHandlerFactory.UnregisterHandler(System.String)">
            <summary>设置 DefaultResourceHandlerFactory.UnregisterHandler(String url) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubDefaultResourceHandlerFactory.UnregisterHandlerString">
            <summary>设置 DefaultResourceHandlerFactory.UnregisterHandler(String url) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubDefaultResourceHandlerFactoryItem">
            <summary>CefSharp.DefaultResourceHandlerFactoryItem 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubDefaultResourceHandlerFactoryItem.#ctor(CefSharp.IResourceHandler,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubDefaultResourceHandlerFactoryItem.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubDefaultResourceHandlerFactoryItem.InitializeStub">
            <summary>初始化 type StubDefaultResourceHandlerFactoryItem 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubDefaultResourceHandlerFactoryItem.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubDefaultResourceHandlerFactoryItem.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubDomNode">
            <summary>CefSharp.DomNode 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubDomNode.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubDomNode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubDomNode.InitializeStub">
            <summary>初始化 type StubDomNode 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubDomNode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubDomNode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubDomNode.ToString">
            <summary>设置 DomNode.ToString() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubDomNode.ToString01">
            <summary>设置 DomNode.ToString() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubFileResourceHandler">
            <summary>CefSharp.FileResourceHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubFileResourceHandler.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubFileResourceHandler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubFileResourceHandler.InitializeStub">
            <summary>初始化 type StubFileResourceHandler 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubFileResourceHandler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubFileResourceHandler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubFrameLoadEndEventArgs">
            <summary>CefSharp.FrameLoadEndEventArgs 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubFrameLoadEndEventArgs.#ctor(CefSharp.IBrowser,CefSharp.IFrame,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubFrameLoadEndEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubFrameLoadEndEventArgs.InitializeStub">
            <summary>初始化 type StubFrameLoadEndEventArgs 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubFrameLoadEndEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubFrameLoadEndEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubFrameLoadStartEventArgs">
            <summary>CefSharp.FrameLoadStartEventArgs 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubFrameLoadStartEventArgs.#ctor(CefSharp.IBrowser,CefSharp.IFrame,CefSharp.TransitionType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubFrameLoadStartEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubFrameLoadStartEventArgs.InitializeStub">
            <summary>初始化 type StubFrameLoadStartEventArgs 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubFrameLoadStartEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubFrameLoadStartEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIAccessibilityHandler">
            <summary>CefSharp.IAccessibilityHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIAccessibilityHandler.#ctor">
            <summary>初始化 type StubIAccessibilityHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIAccessibilityHandler.CefSharp#IAccessibilityHandler#OnAccessibilityLocationChange(CefSharp.IValue)">
            <summary>设置 IAccessibilityHandler.OnAccessibilityLocationChange(IValue value) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIAccessibilityHandler.CefSharp#IAccessibilityHandler#OnAccessibilityTreeChange(CefSharp.IValue)">
            <summary>设置 IAccessibilityHandler.OnAccessibilityTreeChange(IValue value) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIAccessibilityHandler.OnAccessibilityLocationChangeIValue">
            <summary>设置 IAccessibilityHandler.OnAccessibilityLocationChange(IValue value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIAccessibilityHandler.OnAccessibilityTreeChangeIValue">
            <summary>设置 IAccessibilityHandler.OnAccessibilityTreeChange(IValue value) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIAuthCallback">
            <summary>CefSharp.IAuthCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIAuthCallback.#ctor">
            <summary>初始化 type StubIAuthCallback 的新实例</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIAuthCallback.Cancel">
            <summary>设置 IAuthCallback.Cancel() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIAuthCallback.CefSharp#IAuthCallback#Cancel">
            <summary>设置 IAuthCallback.Cancel() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIAuthCallback.CefSharp#IAuthCallback#Continue(System.String,System.String)">
            <summary>设置 IAuthCallback.Continue(String username, String password) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIAuthCallback.ContinueStringString">
            <summary>设置 IAuthCallback.Continue(String username, String password) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIAuthCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIAuthCallback.CefSharp#IAuthCallback#IsDisposed">
            <summary>设置 IAuthCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIAuthCallback.IsDisposedGet">
            <summary>设置 IAuthCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIAuthCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIBeforeDownloadCallback">
            <summary>CefSharp.IBeforeDownloadCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBeforeDownloadCallback.#ctor">
            <summary>初始化 type StubIBeforeDownloadCallback 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBeforeDownloadCallback.CefSharp#IBeforeDownloadCallback#Continue(System.String,System.Boolean)">
            <summary>设置 IBeforeDownloadCallback.Continue(String downloadPath, Boolean showDialog) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBeforeDownloadCallback.ContinueStringBoolean">
            <summary>设置 IBeforeDownloadCallback.Continue(String downloadPath, Boolean showDialog) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBeforeDownloadCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBeforeDownloadCallback.CefSharp#IBeforeDownloadCallback#IsDisposed">
            <summary>设置 IBeforeDownloadCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBeforeDownloadCallback.IsDisposedGet">
            <summary>设置 IBeforeDownloadCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBeforeDownloadCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIBrowser">
            <summary>CefSharp.IBrowser 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowser.#ctor">
            <summary>初始化 type StubIBrowser 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#CanGoBack">
            <summary>设置 IBrowser.get_CanGoBack() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.CanGoBackGet">
            <summary>设置 IBrowser.get_CanGoBack() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#CanGoForward">
            <summary>设置 IBrowser.get_CanGoForward() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.CanGoForwardGet">
            <summary>设置 IBrowser.get_CanGoForward() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#CloseBrowser(System.Boolean)">
            <summary>设置 IBrowser.CloseBrowser(Boolean forceClose) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#GetFrame(System.Int64)">
            <summary>设置 IBrowser.GetFrame(Int64 identifier) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#GetFrame(System.String)">
            <summary>设置 IBrowser.GetFrame(String name) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#GetFrameCount">
            <summary>设置 IBrowser.GetFrameCount() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#GetFrameIdentifiers">
            <summary>设置 IBrowser.GetFrameIdentifiers() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#GetFrameNames">
            <summary>设置 IBrowser.GetFrameNames() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#GetHost">
            <summary>设置 IBrowser.GetHost() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#GoBack">
            <summary>设置 IBrowser.GoBack() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#GoForward">
            <summary>设置 IBrowser.GoForward() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#IsSame(CefSharp.IBrowser)">
            <summary>设置 IBrowser.IsSame(IBrowser that) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#Reload(System.Boolean)">
            <summary>设置 IBrowser.Reload(Boolean ignoreCache) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#StopLoad">
            <summary>设置 IBrowser.StopLoad() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.CloseBrowserBoolean">
            <summary>设置 IBrowser.CloseBrowser(Boolean forceClose) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#FocusedFrame">
            <summary>设置 IBrowser.get_FocusedFrame() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.FocusedFrameGet">
            <summary>设置 IBrowser.get_FocusedFrame() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.GetFrameCount">
            <summary>设置 IBrowser.GetFrameCount() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.GetFrameIdentifiers">
            <summary>设置 IBrowser.GetFrameIdentifiers() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.GetFrameInt64">
            <summary>设置 IBrowser.GetFrame(Int64 identifier) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.GetFrameNames">
            <summary>设置 IBrowser.GetFrameNames() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.GetFrameString">
            <summary>设置 IBrowser.GetFrame(String name) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.GetHost">
            <summary>设置 IBrowser.GetHost() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.GoBack">
            <summary>设置 IBrowser.GoBack() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.GoForward">
            <summary>设置 IBrowser.GoForward() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#HasDocument">
            <summary>设置 IBrowser.get_HasDocument() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.HasDocumentGet">
            <summary>设置 IBrowser.get_HasDocument() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#Identifier">
            <summary>设置 IBrowser.get_Identifier() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.IdentifierGet">
            <summary>设置 IBrowser.get_Identifier() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#IsDisposed">
            <summary>设置 IBrowser.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.IsDisposedGet">
            <summary>设置 IBrowser.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#IsLoading">
            <summary>设置 IBrowser.get_IsLoading() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.IsLoadingGet">
            <summary>设置 IBrowser.get_IsLoading() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#IsPopup">
            <summary>设置 IBrowser.get_IsPopup() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.IsPopupGet">
            <summary>设置 IBrowser.get_IsPopup() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.IsSameIBrowser">
            <summary>设置 IBrowser.IsSame(IBrowser that) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowser.CefSharp#IBrowser#MainFrame">
            <summary>设置 IBrowser.get_MainFrame() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.MainFrameGet">
            <summary>设置 IBrowser.get_MainFrame() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.ReloadBoolean">
            <summary>设置 IBrowser.Reload(Boolean ignoreCache) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowser.StopLoad">
            <summary>设置 IBrowser.StopLoad() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowser.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIBrowserHost">
            <summary>CefSharp.IBrowserHost 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.#ctor">
            <summary>初始化 type StubIBrowserHost 的新实例</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.AddWordToDictionaryString">
            <summary>设置 IBrowserHost.AddWordToDictionary(String word) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.AttachBackingFieldToMouseCursorChangeDisabled">
            <summary>附加委托以将 StubIBrowserHost.MouseCursorChangeDisabled 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.AttachBackingFieldToWindowlessFrameRate">
            <summary>附加委托以将 StubIBrowserHost.WindowlessFrameRate 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#AddWordToDictionary(System.String)">
            <summary>设置 IBrowserHost.AddWordToDictionary(String word) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#CloseBrowser(System.Boolean)">
            <summary>设置 IBrowserHost.CloseBrowser(Boolean forceClose) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#CloseDevTools">
            <summary>设置 IBrowserHost.CloseDevTools() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#DragSourceEndedAt(System.Int32,System.Int32,CefSharp.Enums.DragOperationsMask)">
            <summary>设置 IBrowserHost.DragSourceEndedAt(Int32 x, Int32 y, DragOperationsMask op) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#DragSourceSystemDragEnded">
            <summary>设置 IBrowserHost.DragSourceSystemDragEnded() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#DragTargetDragDrop(CefSharp.MouseEvent)">
            <summary>设置 IBrowserHost.DragTargetDragDrop(MouseEvent mouseEvent) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#DragTargetDragEnter(CefSharp.IDragData,CefSharp.MouseEvent,CefSharp.Enums.DragOperationsMask)">
            <summary>设置 IBrowserHost.DragTargetDragEnter(IDragData dragData, MouseEvent mouseEvent, DragOperationsMask allowedOperations) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#DragTargetDragLeave">
            <summary>设置 IBrowserHost.DragTargetDragLeave() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#DragTargetDragOver(CefSharp.MouseEvent,CefSharp.Enums.DragOperationsMask)">
            <summary>设置 IBrowserHost.DragTargetDragOver(MouseEvent mouseEvent, DragOperationsMask allowedOperations) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#Find(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>设置 IBrowserHost.Find(Int32 identifier, String searchText, Boolean forward, Boolean matchCase, Boolean findNext) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#GetNavigationEntries(CefSharp.INavigationEntryVisitor,System.Boolean)">
            <summary>设置 IBrowserHost.GetNavigationEntries(INavigationEntryVisitor visitor, Boolean currentOnly) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#GetOpenerWindowHandle">
            <summary>设置 IBrowserHost.GetOpenerWindowHandle() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#GetVisibleNavigationEntry">
            <summary>设置 IBrowserHost.GetVisibleNavigationEntry() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#GetWindowHandle">
            <summary>设置 IBrowserHost.GetWindowHandle() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#GetZoomLevelAsync">
            <summary>设置 IBrowserHost.GetZoomLevelAsync() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#ImeCancelComposition">
            <summary>设置 IBrowserHost.ImeCancelComposition() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#ImeCommitText(System.String)">
            <summary>设置 IBrowserHost.ImeCommitText(String text) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#ImeFinishComposingText(System.Boolean)">
            <summary>设置 IBrowserHost.ImeFinishComposingText(Boolean keepSelection) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#ImeSetComposition(System.String,CefSharp.Structs.CompositionUnderline[],System.Nullable{CefSharp.Structs.Range})">
            <summary>设置 IBrowserHost.ImeSetComposition(String text, CompositionUnderline[] underlines, Nullable`1&lt;Range&gt; selectionRange) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#Invalidate(CefSharp.PaintElementType)">
            <summary>设置 IBrowserHost.Invalidate(PaintElementType type) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#NotifyMoveOrResizeStarted">
            <summary>设置 IBrowserHost.NotifyMoveOrResizeStarted() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#NotifyScreenInfoChanged">
            <summary>设置 IBrowserHost.NotifyScreenInfoChanged() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#Print">
            <summary>设置 IBrowserHost.Print() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#PrintToPdf(System.String,CefSharp.PdfPrintSettings,CefSharp.IPrintToPdfCallback)">
            <summary>设置 IBrowserHost.PrintToPdf(String path, PdfPrintSettings settings, IPrintToPdfCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#ReplaceMisspelling(System.String)">
            <summary>设置 IBrowserHost.ReplaceMisspelling(String word) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#SendCaptureLostEvent">
            <summary>设置 IBrowserHost.SendCaptureLostEvent() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#SendFocusEvent(System.Boolean)">
            <summary>设置 IBrowserHost.SendFocusEvent(Boolean setFocus) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#SendKeyEvent(CefSharp.KeyEvent)">
            <summary>设置 IBrowserHost.SendKeyEvent(KeyEvent keyEvent) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#SendKeyEvent(System.Int32,System.Int32,System.Int32)">
            <summary>设置 IBrowserHost.SendKeyEvent(Int32 message, Int32 wParam, Int32 lParam) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#SendMouseClickEvent(CefSharp.MouseEvent,CefSharp.MouseButtonType,System.Boolean,System.Int32)">
            <summary>设置 IBrowserHost.SendMouseClickEvent(MouseEvent mouseEvent, MouseButtonType mouseButtonType, Boolean mouseUp, Int32 clickCount) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#SendMouseMoveEvent(CefSharp.MouseEvent,System.Boolean)">
            <summary>设置 IBrowserHost.SendMouseMoveEvent(MouseEvent mouseEvent, Boolean mouseLeave) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#SendMouseWheelEvent(CefSharp.MouseEvent,System.Int32,System.Int32)">
            <summary>设置 IBrowserHost.SendMouseWheelEvent(MouseEvent mouseEvent, Int32 deltaX, Int32 deltaY) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#SetAccessibilityState(CefSharp.CefState)">
            <summary>设置 IBrowserHost.SetAccessibilityState(CefState accessibilityState) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#SetAutoResizeEnabled(System.Boolean,CefSharp.Structs.Size,CefSharp.Structs.Size)">
            <summary>设置 IBrowserHost.SetAutoResizeEnabled(Boolean enabled, Size minSize, Size maxSize) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#SetFocus(System.Boolean)">
            <summary>设置 IBrowserHost.SetFocus(Boolean focus) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#SetZoomLevel(System.Double)">
            <summary>设置 IBrowserHost.SetZoomLevel(Double zoomLevel) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#ShowDevTools(CefSharp.IWindowInfo,System.Int32,System.Int32)">
            <summary>设置 IBrowserHost.ShowDevTools(IWindowInfo windowInfo, Int32 inspectElementAtX, Int32 inspectElementAtY) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#StartDownload(System.String)">
            <summary>设置 IBrowserHost.StartDownload(String url) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#StopFinding(System.Boolean)">
            <summary>设置 IBrowserHost.StopFinding(Boolean clearSelection) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#WasHidden(System.Boolean)">
            <summary>设置 IBrowserHost.WasHidden(Boolean hidden) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#WasResized">
            <summary>设置 IBrowserHost.WasResized() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.CloseBrowserBoolean">
            <summary>设置 IBrowserHost.CloseBrowser(Boolean forceClose) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.CloseDevTools">
            <summary>设置 IBrowserHost.CloseDevTools() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.DragSourceEndedAtInt32Int32DragOperationsMask">
            <summary>设置 IBrowserHost.DragSourceEndedAt(Int32 x, Int32 y, DragOperationsMask op) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.DragSourceSystemDragEnded">
            <summary>设置 IBrowserHost.DragSourceSystemDragEnded() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.DragTargetDragDropMouseEvent">
            <summary>设置 IBrowserHost.DragTargetDragDrop(MouseEvent mouseEvent) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.DragTargetDragEnterIDragDataMouseEventDragOperationsMask">
            <summary>设置 IBrowserHost.DragTargetDragEnter(IDragData dragData, MouseEvent mouseEvent, DragOperationsMask allowedOperations) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.DragTargetDragLeave">
            <summary>设置 IBrowserHost.DragTargetDragLeave() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.DragTargetDragOverMouseEventDragOperationsMask">
            <summary>设置 IBrowserHost.DragTargetDragOver(MouseEvent mouseEvent, DragOperationsMask allowedOperations) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.FindInt32StringBooleanBooleanBoolean">
            <summary>设置 IBrowserHost.Find(Int32 identifier, String searchText, Boolean forward, Boolean matchCase, Boolean findNext) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.GetNavigationEntriesINavigationEntryVisitorBoolean">
            <summary>设置 IBrowserHost.GetNavigationEntries(INavigationEntryVisitor visitor, Boolean currentOnly) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.GetOpenerWindowHandle">
            <summary>设置 IBrowserHost.GetOpenerWindowHandle() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.GetVisibleNavigationEntry">
            <summary>设置 IBrowserHost.GetVisibleNavigationEntry() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.GetWindowHandle">
            <summary>设置 IBrowserHost.GetWindowHandle() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.GetZoomLevelAsync">
            <summary>设置 IBrowserHost.GetZoomLevelAsync() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#HasDevTools">
            <summary>设置 IBrowserHost.get_HasDevTools() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.HasDevToolsGet">
            <summary>设置 IBrowserHost.get_HasDevTools() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.ImeCancelComposition">
            <summary>设置 IBrowserHost.ImeCancelComposition() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.ImeCommitTextString">
            <summary>设置 IBrowserHost.ImeCommitText(String text) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.ImeFinishComposingTextBoolean">
            <summary>设置 IBrowserHost.ImeFinishComposingText(Boolean keepSelection) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.ImeSetCompositionStringCompositionUnderlineArrayNullableOfRange">
            <summary>设置 IBrowserHost.ImeSetComposition(String text, CompositionUnderline[] underlines, Nullable`1&lt;Range&gt; selectionRange) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.InvalidatePaintElementType">
            <summary>设置 IBrowserHost.Invalidate(PaintElementType type) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#IsDisposed">
            <summary>设置 IBrowserHost.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.IsDisposedGet">
            <summary>设置 IBrowserHost.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#MouseCursorChangeDisabled">
            <summary>设置 IBrowserHost.get_MouseCursorChangeDisabled() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.MouseCursorChangeDisabledGet">
            <summary>设置 IBrowserHost.get_MouseCursorChangeDisabled() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.MouseCursorChangeDisabledSetBoolean">
            <summary>设置 IBrowserHost.set_MouseCursorChangeDisabled(Boolean value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.NotifyMoveOrResizeStarted">
            <summary>设置 IBrowserHost.NotifyMoveOrResizeStarted() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.NotifyScreenInfoChanged">
            <summary>设置 IBrowserHost.NotifyScreenInfoChanged() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.Print">
            <summary>设置 IBrowserHost.Print() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.PrintToPdfStringPdfPrintSettingsIPrintToPdfCallback">
            <summary>设置 IBrowserHost.PrintToPdf(String path, PdfPrintSettings settings, IPrintToPdfCallback callback) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.ReplaceMisspellingString">
            <summary>设置 IBrowserHost.ReplaceMisspelling(String word) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#RequestContext">
            <summary>设置 IBrowserHost.get_RequestContext() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.RequestContextGet">
            <summary>设置 IBrowserHost.get_RequestContext() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.SendCaptureLostEvent">
            <summary>设置 IBrowserHost.SendCaptureLostEvent() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.SendFocusEventBoolean">
            <summary>设置 IBrowserHost.SendFocusEvent(Boolean setFocus) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.SendKeyEventInt32Int32Int32">
            <summary>设置 IBrowserHost.SendKeyEvent(Int32 message, Int32 wParam, Int32 lParam) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.SendKeyEventKeyEvent">
            <summary>设置 IBrowserHost.SendKeyEvent(KeyEvent keyEvent) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.SendMouseClickEventMouseEventMouseButtonTypeBooleanInt32">
            <summary>设置 IBrowserHost.SendMouseClickEvent(MouseEvent mouseEvent, MouseButtonType mouseButtonType, Boolean mouseUp, Int32 clickCount) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.SendMouseMoveEventMouseEventBoolean">
            <summary>设置 IBrowserHost.SendMouseMoveEvent(MouseEvent mouseEvent, Boolean mouseLeave) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.SendMouseWheelEventMouseEventInt32Int32">
            <summary>设置 IBrowserHost.SendMouseWheelEvent(MouseEvent mouseEvent, Int32 deltaX, Int32 deltaY) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.SetAccessibilityStateCefState">
            <summary>设置 IBrowserHost.SetAccessibilityState(CefState accessibilityState) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.SetAutoResizeEnabledBooleanSizeSize">
            <summary>设置 IBrowserHost.SetAutoResizeEnabled(Boolean enabled, Size minSize, Size maxSize) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.SetFocusBoolean">
            <summary>设置 IBrowserHost.SetFocus(Boolean focus) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.SetZoomLevelDouble">
            <summary>设置 IBrowserHost.SetZoomLevel(Double zoomLevel) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.ShowDevToolsIWindowInfoInt32Int32">
            <summary>设置 IBrowserHost.ShowDevTools(IWindowInfo windowInfo, Int32 inspectElementAtX, Int32 inspectElementAtY) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.StartDownloadString">
            <summary>设置 IBrowserHost.StartDownload(String url) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.StopFindingBoolean">
            <summary>设置 IBrowserHost.StopFinding(Boolean clearSelection) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserHost.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.WasHiddenBoolean">
            <summary>设置 IBrowserHost.WasHidden(Boolean hidden) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.WasResized">
            <summary>设置 IBrowserHost.WasResized() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#WindowRenderingDisabled">
            <summary>设置 IBrowserHost.get_WindowRenderingDisabled() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.WindowRenderingDisabledGet">
            <summary>设置 IBrowserHost.get_WindowRenderingDisabled() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserHost.CefSharp#IBrowserHost#WindowlessFrameRate">
            <summary>设置 IBrowserHost.get_WindowlessFrameRate() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.WindowlessFrameRateGet">
            <summary>设置 IBrowserHost.get_WindowlessFrameRate() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserHost.WindowlessFrameRateSetInt32">
            <summary>设置 IBrowserHost.set_WindowlessFrameRate(Int32 value) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIBrowserProcessHandler">
            <summary>CefSharp.IBrowserProcessHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserProcessHandler.#ctor">
            <summary>初始化 type StubIBrowserProcessHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserProcessHandler.CefSharp#IBrowserProcessHandler#OnContextInitialized">
            <summary>设置 IBrowserProcessHandler.OnContextInitialized() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserProcessHandler.CefSharp#IBrowserProcessHandler#OnScheduleMessagePumpWork(System.Int64)">
            <summary>设置 IBrowserProcessHandler.OnScheduleMessagePumpWork(Int64 delay) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserProcessHandler.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserProcessHandler.OnContextInitialized">
            <summary>设置 IBrowserProcessHandler.OnContextInitialized() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserProcessHandler.OnScheduleMessagePumpWorkInt64">
            <summary>设置 IBrowserProcessHandler.OnScheduleMessagePumpWork(Int64 delay) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserProcessHandler.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIBrowserSettings">
            <summary>CefSharp.IBrowserSettings 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.#ctor">
            <summary>初始化 type StubIBrowserSettings 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#AcceptLanguageList">
            <summary>设置 IBrowserSettings.get_AcceptLanguageList() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.AcceptLanguageListGet">
            <summary>设置 IBrowserSettings.get_AcceptLanguageList() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.AcceptLanguageListSetString">
            <summary>设置 IBrowserSettings.set_AcceptLanguageList(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#ApplicationCache">
            <summary>设置 IBrowserSettings.get_ApplicationCache() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.ApplicationCacheGet">
            <summary>设置 IBrowserSettings.get_ApplicationCache() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.ApplicationCacheSetCefState">
            <summary>设置 IBrowserSettings.set_ApplicationCache(CefState value) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToAcceptLanguageList">
            <summary>附加委托以将 StubIBrowserSettings.AcceptLanguageList 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToApplicationCache">
            <summary>附加委托以将 StubIBrowserSettings.ApplicationCache 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToBackgroundColor">
            <summary>附加委托以将 StubIBrowserSettings.BackgroundColor 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToCursiveFontFamily">
            <summary>附加委托以将 StubIBrowserSettings.CursiveFontFamily 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToDatabases">
            <summary>附加委托以将 StubIBrowserSettings.Databases 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToDefaultEncoding">
            <summary>附加委托以将 StubIBrowserSettings.DefaultEncoding 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToDefaultFixedFontSize">
            <summary>附加委托以将 StubIBrowserSettings.DefaultFixedFontSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToDefaultFontSize">
            <summary>附加委托以将 StubIBrowserSettings.DefaultFontSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToFantasyFontFamily">
            <summary>附加委托以将 StubIBrowserSettings.FantasyFontFamily 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToFileAccessFromFileUrls">
            <summary>附加委托以将 StubIBrowserSettings.FileAccessFromFileUrls 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToFixedFontFamily">
            <summary>附加委托以将 StubIBrowserSettings.FixedFontFamily 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToImageLoading">
            <summary>附加委托以将 StubIBrowserSettings.ImageLoading 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToImageShrinkStandaloneToFit">
            <summary>附加委托以将 StubIBrowserSettings.ImageShrinkStandaloneToFit 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToJavascript">
            <summary>附加委托以将 StubIBrowserSettings.Javascript 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToJavascriptAccessClipboard">
            <summary>附加委托以将 StubIBrowserSettings.JavascriptAccessClipboard 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToJavascriptCloseWindows">
            <summary>附加委托以将 StubIBrowserSettings.JavascriptCloseWindows 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToJavascriptDomPaste">
            <summary>附加委托以将 StubIBrowserSettings.JavascriptDomPaste 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToLocalStorage">
            <summary>附加委托以将 StubIBrowserSettings.LocalStorage 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToMinimumFontSize">
            <summary>附加委托以将 StubIBrowserSettings.MinimumFontSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToMinimumLogicalFontSize">
            <summary>附加委托以将 StubIBrowserSettings.MinimumLogicalFontSize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToPlugins">
            <summary>附加委托以将 StubIBrowserSettings.Plugins 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToRemoteFonts">
            <summary>附加委托以将 StubIBrowserSettings.RemoteFonts 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToSansSerifFontFamily">
            <summary>附加委托以将 StubIBrowserSettings.SansSerifFontFamily 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToSerifFontFamily">
            <summary>附加委托以将 StubIBrowserSettings.SerifFontFamily 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToStandardFontFamily">
            <summary>附加委托以将 StubIBrowserSettings.StandardFontFamily 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToTabToLinks">
            <summary>附加委托以将 StubIBrowserSettings.TabToLinks 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToTextAreaResize">
            <summary>附加委托以将 StubIBrowserSettings.TextAreaResize 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToUniversalAccessFromFileUrls">
            <summary>附加委托以将 StubIBrowserSettings.UniversalAccessFromFileUrls 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToWebGl">
            <summary>附加委托以将 StubIBrowserSettings.WebGl 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToWebSecurity">
            <summary>附加委托以将 StubIBrowserSettings.WebSecurity 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIBrowserSettings.AttachBackingFieldToWindowlessFrameRate">
            <summary>附加委托以将 StubIBrowserSettings.WindowlessFrameRate 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#BackgroundColor">
            <summary>设置 IBrowserSettings.get_BackgroundColor() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.BackgroundColorGet">
            <summary>设置 IBrowserSettings.get_BackgroundColor() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.BackgroundColorSetUInt32">
            <summary>设置 IBrowserSettings.set_BackgroundColor(UInt32 value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#CursiveFontFamily">
            <summary>设置 IBrowserSettings.get_CursiveFontFamily() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.CursiveFontFamilyGet">
            <summary>设置 IBrowserSettings.get_CursiveFontFamily() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.CursiveFontFamilySetString">
            <summary>设置 IBrowserSettings.set_CursiveFontFamily(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#Databases">
            <summary>设置 IBrowserSettings.get_Databases() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.DatabasesGet">
            <summary>设置 IBrowserSettings.get_Databases() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.DatabasesSetCefState">
            <summary>设置 IBrowserSettings.set_Databases(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#DefaultEncoding">
            <summary>设置 IBrowserSettings.get_DefaultEncoding() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.DefaultEncodingGet">
            <summary>设置 IBrowserSettings.get_DefaultEncoding() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.DefaultEncodingSetString">
            <summary>设置 IBrowserSettings.set_DefaultEncoding(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#DefaultFixedFontSize">
            <summary>设置 IBrowserSettings.get_DefaultFixedFontSize() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.DefaultFixedFontSizeGet">
            <summary>设置 IBrowserSettings.get_DefaultFixedFontSize() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.DefaultFixedFontSizeSetInt32">
            <summary>设置 IBrowserSettings.set_DefaultFixedFontSize(Int32 value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#DefaultFontSize">
            <summary>设置 IBrowserSettings.get_DefaultFontSize() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.DefaultFontSizeGet">
            <summary>设置 IBrowserSettings.get_DefaultFontSize() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.DefaultFontSizeSetInt32">
            <summary>设置 IBrowserSettings.set_DefaultFontSize(Int32 value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#FantasyFontFamily">
            <summary>设置 IBrowserSettings.get_FantasyFontFamily() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.FantasyFontFamilyGet">
            <summary>设置 IBrowserSettings.get_FantasyFontFamily() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.FantasyFontFamilySetString">
            <summary>设置 IBrowserSettings.set_FantasyFontFamily(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#FileAccessFromFileUrls">
            <summary>设置 IBrowserSettings.get_FileAccessFromFileUrls() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.FileAccessFromFileUrlsGet">
            <summary>设置 IBrowserSettings.get_FileAccessFromFileUrls() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.FileAccessFromFileUrlsSetCefState">
            <summary>设置 IBrowserSettings.set_FileAccessFromFileUrls(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#FixedFontFamily">
            <summary>设置 IBrowserSettings.get_FixedFontFamily() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.FixedFontFamilyGet">
            <summary>设置 IBrowserSettings.get_FixedFontFamily() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.FixedFontFamilySetString">
            <summary>设置 IBrowserSettings.set_FixedFontFamily(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#ImageLoading">
            <summary>设置 IBrowserSettings.get_ImageLoading() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.ImageLoadingGet">
            <summary>设置 IBrowserSettings.get_ImageLoading() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.ImageLoadingSetCefState">
            <summary>设置 IBrowserSettings.set_ImageLoading(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#ImageShrinkStandaloneToFit">
            <summary>设置 IBrowserSettings.get_ImageShrinkStandaloneToFit() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.ImageShrinkStandaloneToFitGet">
            <summary>设置 IBrowserSettings.get_ImageShrinkStandaloneToFit() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.ImageShrinkStandaloneToFitSetCefState">
            <summary>设置 IBrowserSettings.set_ImageShrinkStandaloneToFit(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#Javascript">
            <summary>设置 IBrowserSettings.get_Javascript() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#JavascriptAccessClipboard">
            <summary>设置 IBrowserSettings.get_JavascriptAccessClipboard() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.JavascriptAccessClipboardGet">
            <summary>设置 IBrowserSettings.get_JavascriptAccessClipboard() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.JavascriptAccessClipboardSetCefState">
            <summary>设置 IBrowserSettings.set_JavascriptAccessClipboard(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#JavascriptCloseWindows">
            <summary>设置 IBrowserSettings.get_JavascriptCloseWindows() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.JavascriptCloseWindowsGet">
            <summary>设置 IBrowserSettings.get_JavascriptCloseWindows() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.JavascriptCloseWindowsSetCefState">
            <summary>设置 IBrowserSettings.set_JavascriptCloseWindows(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#JavascriptDomPaste">
            <summary>设置 IBrowserSettings.get_JavascriptDomPaste() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.JavascriptDomPasteGet">
            <summary>设置 IBrowserSettings.get_JavascriptDomPaste() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.JavascriptDomPasteSetCefState">
            <summary>设置 IBrowserSettings.set_JavascriptDomPaste(CefState value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.JavascriptGet">
            <summary>设置 IBrowserSettings.get_Javascript() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.JavascriptSetCefState">
            <summary>设置 IBrowserSettings.set_Javascript(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#LocalStorage">
            <summary>设置 IBrowserSettings.get_LocalStorage() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.LocalStorageGet">
            <summary>设置 IBrowserSettings.get_LocalStorage() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.LocalStorageSetCefState">
            <summary>设置 IBrowserSettings.set_LocalStorage(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#MinimumFontSize">
            <summary>设置 IBrowserSettings.get_MinimumFontSize() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.MinimumFontSizeGet">
            <summary>设置 IBrowserSettings.get_MinimumFontSize() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.MinimumFontSizeSetInt32">
            <summary>设置 IBrowserSettings.set_MinimumFontSize(Int32 value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#MinimumLogicalFontSize">
            <summary>设置 IBrowserSettings.get_MinimumLogicalFontSize() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.MinimumLogicalFontSizeGet">
            <summary>设置 IBrowserSettings.get_MinimumLogicalFontSize() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.MinimumLogicalFontSizeSetInt32">
            <summary>设置 IBrowserSettings.set_MinimumLogicalFontSize(Int32 value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#Plugins">
            <summary>设置 IBrowserSettings.get_Plugins() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.PluginsGet">
            <summary>设置 IBrowserSettings.get_Plugins() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.PluginsSetCefState">
            <summary>设置 IBrowserSettings.set_Plugins(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#RemoteFonts">
            <summary>设置 IBrowserSettings.get_RemoteFonts() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.RemoteFontsGet">
            <summary>设置 IBrowserSettings.get_RemoteFonts() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.RemoteFontsSetCefState">
            <summary>设置 IBrowserSettings.set_RemoteFonts(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#SansSerifFontFamily">
            <summary>设置 IBrowserSettings.get_SansSerifFontFamily() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.SansSerifFontFamilyGet">
            <summary>设置 IBrowserSettings.get_SansSerifFontFamily() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.SansSerifFontFamilySetString">
            <summary>设置 IBrowserSettings.set_SansSerifFontFamily(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#SerifFontFamily">
            <summary>设置 IBrowserSettings.get_SerifFontFamily() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.SerifFontFamilyGet">
            <summary>设置 IBrowserSettings.get_SerifFontFamily() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.SerifFontFamilySetString">
            <summary>设置 IBrowserSettings.set_SerifFontFamily(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#StandardFontFamily">
            <summary>设置 IBrowserSettings.get_StandardFontFamily() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.StandardFontFamilyGet">
            <summary>设置 IBrowserSettings.get_StandardFontFamily() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.StandardFontFamilySetString">
            <summary>设置 IBrowserSettings.set_StandardFontFamily(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#TabToLinks">
            <summary>设置 IBrowserSettings.get_TabToLinks() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.TabToLinksGet">
            <summary>设置 IBrowserSettings.get_TabToLinks() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.TabToLinksSetCefState">
            <summary>设置 IBrowserSettings.set_TabToLinks(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#TextAreaResize">
            <summary>设置 IBrowserSettings.get_TextAreaResize() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.TextAreaResizeGet">
            <summary>设置 IBrowserSettings.get_TextAreaResize() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.TextAreaResizeSetCefState">
            <summary>设置 IBrowserSettings.set_TextAreaResize(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#UniversalAccessFromFileUrls">
            <summary>设置 IBrowserSettings.get_UniversalAccessFromFileUrls() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.UniversalAccessFromFileUrlsGet">
            <summary>设置 IBrowserSettings.get_UniversalAccessFromFileUrls() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.UniversalAccessFromFileUrlsSetCefState">
            <summary>设置 IBrowserSettings.set_UniversalAccessFromFileUrls(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#WebGl">
            <summary>设置 IBrowserSettings.get_WebGl() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.WebGlGet">
            <summary>设置 IBrowserSettings.get_WebGl() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.WebGlSetCefState">
            <summary>设置 IBrowserSettings.set_WebGl(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#WebSecurity">
            <summary>设置 IBrowserSettings.get_WebSecurity() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.WebSecurityGet">
            <summary>设置 IBrowserSettings.get_WebSecurity() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.WebSecuritySetCefState">
            <summary>设置 IBrowserSettings.set_WebSecurity(CefState value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIBrowserSettings.CefSharp#IBrowserSettings#WindowlessFrameRate">
            <summary>设置 IBrowserSettings.get_WindowlessFrameRate() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.WindowlessFrameRateGet">
            <summary>设置 IBrowserSettings.get_WindowlessFrameRate() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIBrowserSettings.WindowlessFrameRateSetInt32">
            <summary>设置 IBrowserSettings.set_WindowlessFrameRate(Int32 value) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubICallback">
            <summary>CefSharp.ICallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICallback.#ctor">
            <summary>初始化 type StubICallback 的新实例</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICallback.Cancel">
            <summary>设置 ICallback.Cancel() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICallback.CefSharp#ICallback#Cancel">
            <summary>设置 ICallback.Cancel() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICallback.CefSharp#ICallback#Continue">
            <summary>设置 ICallback.Continue() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICallback.Continue">
            <summary>设置 ICallback.Continue() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubICallback.CefSharp#ICallback#IsDisposed">
            <summary>设置 ICallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICallback.IsDisposedGet">
            <summary>设置 ICallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubICompletionCallback">
            <summary>CefSharp.ICompletionCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICompletionCallback.#ctor">
            <summary>初始化 type StubICompletionCallback 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICompletionCallback.CefSharp#ICompletionCallback#OnComplete">
            <summary>设置 ICompletionCallback.OnComplete() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICompletionCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubICompletionCallback.CefSharp#ICompletionCallback#IsDisposed">
            <summary>设置 ICompletionCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICompletionCallback.IsDisposedGet">
            <summary>设置 ICompletionCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICompletionCallback.OnComplete">
            <summary>设置 ICompletionCallback.OnComplete() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICompletionCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIContextMenuHandler">
            <summary>CefSharp.IContextMenuHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIContextMenuHandler.#ctor">
            <summary>初始化 type StubIContextMenuHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIContextMenuHandler.CefSharp#IContextMenuHandler#OnBeforeContextMenu(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IContextMenuParams,CefSharp.IMenuModel)">
            <summary>设置 IContextMenuHandler.OnBeforeContextMenu(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IContextMenuParams parameters, IMenuModel model) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIContextMenuHandler.CefSharp#IContextMenuHandler#OnContextMenuCommand(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IContextMenuParams,CefSharp.CefMenuCommand,CefSharp.CefEventFlags)">
            <summary>设置 IContextMenuHandler.OnContextMenuCommand(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IContextMenuParams parameters, CefMenuCommand commandId, CefEventFlags eventFlags) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIContextMenuHandler.CefSharp#IContextMenuHandler#OnContextMenuDismissed(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame)">
            <summary>设置 IContextMenuHandler.OnContextMenuDismissed(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIContextMenuHandler.CefSharp#IContextMenuHandler#RunContextMenu(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IContextMenuParams,CefSharp.IMenuModel,CefSharp.IRunContextMenuCallback)">
            <summary>设置 IContextMenuHandler.RunContextMenu(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IContextMenuParams parameters, IMenuModel model, IRunContextMenuCallback callback) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuHandler.OnBeforeContextMenuIWebBrowserIBrowserIFrameIContextMenuParamsIMenuModel">
            <summary>设置 IContextMenuHandler.OnBeforeContextMenu(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IContextMenuParams parameters, IMenuModel model) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuHandler.OnContextMenuCommandIWebBrowserIBrowserIFrameIContextMenuParamsCefMenuCommandCefEventFlags">
            <summary>设置 IContextMenuHandler.OnContextMenuCommand(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IContextMenuParams parameters, CefMenuCommand commandId, CefEventFlags eventFlags) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuHandler.OnContextMenuDismissedIWebBrowserIBrowserIFrame">
            <summary>设置 IContextMenuHandler.OnContextMenuDismissed(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuHandler.RunContextMenuIWebBrowserIBrowserIFrameIContextMenuParamsIMenuModelIRunContextMenuCallback">
            <summary>设置 IContextMenuHandler.RunContextMenu(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IContextMenuParams parameters, IMenuModel model, IRunContextMenuCallback callback) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIContextMenuParams">
            <summary>CefSharp.IContextMenuParams 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIContextMenuParams.#ctor">
            <summary>初始化 type StubIContextMenuParams 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#DictionarySuggestions">
            <summary>设置 IContextMenuParams.get_DictionarySuggestions() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.DictionarySuggestionsGet">
            <summary>设置 IContextMenuParams.get_DictionarySuggestions() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#EditStateFlags">
            <summary>设置 IContextMenuParams.get_EditStateFlags() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.EditStateFlagsGet">
            <summary>设置 IContextMenuParams.get_EditStateFlags() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#FrameCharset">
            <summary>设置 IContextMenuParams.get_FrameCharset() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.FrameCharsetGet">
            <summary>设置 IContextMenuParams.get_FrameCharset() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#FrameUrl">
            <summary>设置 IContextMenuParams.get_FrameUrl() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.FrameUrlGet">
            <summary>设置 IContextMenuParams.get_FrameUrl() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#HasImageContents">
            <summary>设置 IContextMenuParams.get_HasImageContents() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.HasImageContentsGet">
            <summary>设置 IContextMenuParams.get_HasImageContents() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#IsCustomMenu">
            <summary>设置 IContextMenuParams.get_IsCustomMenu() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.IsCustomMenuGet">
            <summary>设置 IContextMenuParams.get_IsCustomMenu() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#IsDisposed">
            <summary>设置 IContextMenuParams.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.IsDisposedGet">
            <summary>设置 IContextMenuParams.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#IsEditable">
            <summary>设置 IContextMenuParams.get_IsEditable() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.IsEditableGet">
            <summary>设置 IContextMenuParams.get_IsEditable() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#IsPepperMenu">
            <summary>设置 IContextMenuParams.get_IsPepperMenu() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.IsPepperMenuGet">
            <summary>设置 IContextMenuParams.get_IsPepperMenu() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#IsSpellCheckEnabled">
            <summary>设置 IContextMenuParams.get_IsSpellCheckEnabled() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.IsSpellCheckEnabledGet">
            <summary>设置 IContextMenuParams.get_IsSpellCheckEnabled() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#LinkUrl">
            <summary>设置 IContextMenuParams.get_LinkUrl() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.LinkUrlGet">
            <summary>设置 IContextMenuParams.get_LinkUrl() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#MediaStateFlags">
            <summary>设置 IContextMenuParams.get_MediaStateFlags() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.MediaStateFlagsGet">
            <summary>设置 IContextMenuParams.get_MediaStateFlags() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#MediaType">
            <summary>设置 IContextMenuParams.get_MediaType() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.MediaTypeGet">
            <summary>设置 IContextMenuParams.get_MediaType() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#MisspelledWord">
            <summary>设置 IContextMenuParams.get_MisspelledWord() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.MisspelledWordGet">
            <summary>设置 IContextMenuParams.get_MisspelledWord() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#PageUrl">
            <summary>设置 IContextMenuParams.get_PageUrl() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.PageUrlGet">
            <summary>设置 IContextMenuParams.get_PageUrl() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#SelectionText">
            <summary>设置 IContextMenuParams.get_SelectionText() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.SelectionTextGet">
            <summary>设置 IContextMenuParams.get_SelectionText() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#SourceUrl">
            <summary>设置 IContextMenuParams.get_SourceUrl() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.SourceUrlGet">
            <summary>设置 IContextMenuParams.get_SourceUrl() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIContextMenuParams.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#TypeFlags">
            <summary>设置 IContextMenuParams.get_TypeFlags() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.TypeFlagsGet">
            <summary>设置 IContextMenuParams.get_TypeFlags() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#UnfilteredLinkUrl">
            <summary>设置 IContextMenuParams.get_UnfilteredLinkUrl() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.UnfilteredLinkUrlGet">
            <summary>设置 IContextMenuParams.get_UnfilteredLinkUrl() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#XCoord">
            <summary>设置 IContextMenuParams.get_XCoord() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.XCoordGet">
            <summary>设置 IContextMenuParams.get_XCoord() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIContextMenuParams.CefSharp#IContextMenuParams#YCoord">
            <summary>设置 IContextMenuParams.get_YCoord() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIContextMenuParams.YCoordGet">
            <summary>设置 IContextMenuParams.get_YCoord() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubICookieManager">
            <summary>CefSharp.ICookieManager 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICookieManager.#ctor">
            <summary>初始化 type StubICookieManager 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICookieManager.CefSharp#ICookieManager#DeleteCookies(System.String,System.String,CefSharp.IDeleteCookiesCallback)">
            <summary>设置 ICookieManager.DeleteCookies(String url, String name, IDeleteCookiesCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICookieManager.CefSharp#ICookieManager#FlushStore(CefSharp.ICompletionCallback)">
            <summary>设置 ICookieManager.FlushStore(ICompletionCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICookieManager.CefSharp#ICookieManager#SetCookie(System.String,CefSharp.Cookie,CefSharp.ISetCookieCallback)">
            <summary>设置 ICookieManager.SetCookie(String url, Cookie cookie, ISetCookieCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICookieManager.CefSharp#ICookieManager#SetStoragePath(System.String,System.Boolean,CefSharp.ICompletionCallback)">
            <summary>设置 ICookieManager.SetStoragePath(String path, Boolean persistSessionCookies, ICompletionCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICookieManager.CefSharp#ICookieManager#SetSupportedSchemes(System.String[],CefSharp.ICompletionCallback)">
            <summary>设置 ICookieManager.SetSupportedSchemes(String[] schemes, ICompletionCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICookieManager.CefSharp#ICookieManager#VisitAllCookies(CefSharp.ICookieVisitor)">
            <summary>设置 ICookieManager.VisitAllCookies(ICookieVisitor visitor) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICookieManager.CefSharp#ICookieManager#VisitUrlCookies(System.String,System.Boolean,CefSharp.ICookieVisitor)">
            <summary>设置 ICookieManager.VisitUrlCookies(String url, Boolean includeHttpOnly, ICookieVisitor visitor) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICookieManager.DeleteCookiesStringStringIDeleteCookiesCallback">
            <summary>设置 ICookieManager.DeleteCookies(String url, String name, IDeleteCookiesCallback callback) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICookieManager.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICookieManager.FlushStoreICompletionCallback">
            <summary>设置 ICookieManager.FlushStore(ICompletionCallback callback) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubICookieManager.CefSharp#ICookieManager#IsDisposed">
            <summary>设置 ICookieManager.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICookieManager.IsDisposedGet">
            <summary>设置 ICookieManager.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICookieManager.SetCookieStringCookieISetCookieCallback">
            <summary>设置 ICookieManager.SetCookie(String url, Cookie cookie, ISetCookieCallback callback) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICookieManager.SetStoragePathStringBooleanICompletionCallback">
            <summary>设置 ICookieManager.SetStoragePath(String path, Boolean persistSessionCookies, ICompletionCallback callback) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICookieManager.SetSupportedSchemesStringArrayICompletionCallback">
            <summary>设置 ICookieManager.SetSupportedSchemes(String[] schemes, ICompletionCallback callback) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICookieManager.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICookieManager.VisitAllCookiesICookieVisitor">
            <summary>设置 ICookieManager.VisitAllCookies(ICookieVisitor visitor) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICookieManager.VisitUrlCookiesStringBooleanICookieVisitor">
            <summary>设置 ICookieManager.VisitUrlCookies(String url, Boolean includeHttpOnly, ICookieVisitor visitor) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubICookieVisitor">
            <summary>CefSharp.ICookieVisitor 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICookieVisitor.#ctor">
            <summary>初始化 type StubICookieVisitor 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICookieVisitor.CefSharp#ICookieVisitor#Visit(CefSharp.Cookie,System.Int32,System.Int32,System.Boolean@)">
            <summary>设置 ICookieVisitor.Visit(Cookie cookie, Int32 count, Int32 total, Boolean&amp; deleteCookie) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICookieVisitor.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubICookieVisitor.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubICookieVisitor.VisitCookieInt32Int32BooleanRef">
            <summary>设置 ICookieVisitor.Visit(Cookie cookie, Int32 count, Int32 total, Boolean&amp; deleteCookie) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIDeleteCookiesCallback">
            <summary>CefSharp.IDeleteCookiesCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDeleteCookiesCallback.#ctor">
            <summary>初始化 type StubIDeleteCookiesCallback 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDeleteCookiesCallback.CefSharp#IDeleteCookiesCallback#OnComplete(System.Int32)">
            <summary>设置 IDeleteCookiesCallback.OnComplete(Int32 numDeleted) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDeleteCookiesCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDeleteCookiesCallback.CefSharp#IDeleteCookiesCallback#IsDisposed">
            <summary>设置 IDeleteCookiesCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDeleteCookiesCallback.IsDisposedGet">
            <summary>设置 IDeleteCookiesCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDeleteCookiesCallback.OnCompleteInt32">
            <summary>设置 IDeleteCookiesCallback.OnComplete(Int32 numDeleted) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDeleteCookiesCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIDialogHandler">
            <summary>CefSharp.IDialogHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDialogHandler.#ctor">
            <summary>初始化 type StubIDialogHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDialogHandler.CefSharp#IDialogHandler#OnFileDialog(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefFileDialogMode,CefSharp.CefFileDialogFlags,System.String,System.String,System.Collections.Generic.List{System.String},System.Int32,CefSharp.IFileDialogCallback)">
            <summary>设置 IDialogHandler.OnFileDialog(IWebBrowser chromiumWebBrowser, IBrowser browser, CefFileDialogMode mode, CefFileDialogFlags flags, String title, String defaultFilePath, List`1&lt;String&gt; acceptFilters, Int32 selectedAcceptFilter, IFileDialogCallback callback) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDialogHandler.OnFileDialogIWebBrowserIBrowserCefFileDialogModeCefFileDialogFlagsStringStringListOfStringInt32IFileDialogCallback">
            <summary>设置 IDialogHandler.OnFileDialog(IWebBrowser chromiumWebBrowser, IBrowser browser, CefFileDialogMode mode, CefFileDialogFlags flags, String title, String defaultFilePath, List`1&lt;String&gt; acceptFilters, Int32 selectedAcceptFilter, IFileDialogCallback callback) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIDisplayHandler">
            <summary>CefSharp.IDisplayHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDisplayHandler.#ctor">
            <summary>初始化 type StubIDisplayHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDisplayHandler.CefSharp#IDisplayHandler#OnAddressChanged(CefSharp.IWebBrowser,CefSharp.AddressChangedEventArgs)">
            <summary>设置 IDisplayHandler.OnAddressChanged(IWebBrowser chromiumWebBrowser, AddressChangedEventArgs addressChangedArgs) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDisplayHandler.CefSharp#IDisplayHandler#OnAutoResize(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.Structs.Size)">
            <summary>设置 IDisplayHandler.OnAutoResize(IWebBrowser chromiumWebBrowser, IBrowser browser, Size newSize) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDisplayHandler.CefSharp#IDisplayHandler#OnConsoleMessage(CefSharp.IWebBrowser,CefSharp.ConsoleMessageEventArgs)">
            <summary>设置 IDisplayHandler.OnConsoleMessage(IWebBrowser chromiumWebBrowser, ConsoleMessageEventArgs consoleMessageArgs) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDisplayHandler.CefSharp#IDisplayHandler#OnFaviconUrlChange(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Collections.Generic.IList{System.String})">
            <summary>设置 IDisplayHandler.OnFaviconUrlChange(IWebBrowser chromiumWebBrowser, IBrowser browser, IList`1&lt;String&gt; urls) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDisplayHandler.CefSharp#IDisplayHandler#OnFullscreenModeChange(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Boolean)">
            <summary>设置 IDisplayHandler.OnFullscreenModeChange(IWebBrowser chromiumWebBrowser, IBrowser browser, Boolean fullscreen) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDisplayHandler.CefSharp#IDisplayHandler#OnStatusMessage(CefSharp.IWebBrowser,CefSharp.StatusMessageEventArgs)">
            <summary>设置 IDisplayHandler.OnStatusMessage(IWebBrowser chromiumWebBrowser, StatusMessageEventArgs statusMessageArgs) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDisplayHandler.CefSharp#IDisplayHandler#OnTitleChanged(CefSharp.IWebBrowser,CefSharp.TitleChangedEventArgs)">
            <summary>设置 IDisplayHandler.OnTitleChanged(IWebBrowser chromiumWebBrowser, TitleChangedEventArgs titleChangedArgs) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDisplayHandler.CefSharp#IDisplayHandler#OnTooltipChanged(CefSharp.IWebBrowser,System.String@)">
            <summary>设置 IDisplayHandler.OnTooltipChanged(IWebBrowser chromiumWebBrowser, String&amp; text) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDisplayHandler.OnAddressChangedIWebBrowserAddressChangedEventArgs">
            <summary>设置 IDisplayHandler.OnAddressChanged(IWebBrowser chromiumWebBrowser, AddressChangedEventArgs addressChangedArgs) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDisplayHandler.OnAutoResizeIWebBrowserIBrowserSize">
            <summary>设置 IDisplayHandler.OnAutoResize(IWebBrowser chromiumWebBrowser, IBrowser browser, Size newSize) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDisplayHandler.OnConsoleMessageIWebBrowserConsoleMessageEventArgs">
            <summary>设置 IDisplayHandler.OnConsoleMessage(IWebBrowser chromiumWebBrowser, ConsoleMessageEventArgs consoleMessageArgs) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDisplayHandler.OnFaviconUrlChangeIWebBrowserIBrowserIListOfString">
            <summary>设置 IDisplayHandler.OnFaviconUrlChange(IWebBrowser chromiumWebBrowser, IBrowser browser, IList`1&lt;String&gt; urls) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDisplayHandler.OnFullscreenModeChangeIWebBrowserIBrowserBoolean">
            <summary>设置 IDisplayHandler.OnFullscreenModeChange(IWebBrowser chromiumWebBrowser, IBrowser browser, Boolean fullscreen) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDisplayHandler.OnStatusMessageIWebBrowserStatusMessageEventArgs">
            <summary>设置 IDisplayHandler.OnStatusMessage(IWebBrowser chromiumWebBrowser, StatusMessageEventArgs statusMessageArgs) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDisplayHandler.OnTitleChangedIWebBrowserTitleChangedEventArgs">
            <summary>设置 IDisplayHandler.OnTitleChanged(IWebBrowser chromiumWebBrowser, TitleChangedEventArgs titleChangedArgs) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDisplayHandler.OnTooltipChangedIWebBrowserStringRef">
            <summary>设置 IDisplayHandler.OnTooltipChanged(IWebBrowser chromiumWebBrowser, String&amp; text) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIDomNode">
            <summary>CefSharp.IDomNode 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDomNode.#ctor">
            <summary>初始化 type StubIDomNode 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDomNode.CefSharp#IDomNode#AttributeNames">
            <summary>设置 IDomNode.get_AttributeNames() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDomNode.AttributeNamesGet">
            <summary>设置 IDomNode.get_AttributeNames() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDomNode.CefSharp#IDomNode#HasAttribute(System.String)">
            <summary>设置 IDomNode.HasAttribute(String attributeName) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDomNode.GetEnumerator">
            <summary>设置 IEnumerable`1.GetEnumerator() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDomNode.GetEnumerator01">
            <summary>设置 IEnumerable.GetEnumerator() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDomNode.HasAttributeString">
            <summary>设置 IDomNode.HasAttribute(String attributeName) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDomNode.CefSharp#IDomNode#Item(System.String)">
            <summary>设置 IDomNode.get_Item(String attributeName) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDomNode.ItemGetString">
            <summary>设置 IDomNode.get_Item(String attributeName) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDomNode.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#String}}#GetEnumerator">
            <summary>设置 IEnumerable`1.GetEnumerator() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDomNode.System#Collections#IEnumerable#GetEnumerator">
            <summary>设置 IEnumerable.GetEnumerator() 的 存根</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDomNode.CefSharp#IDomNode#TagName">
            <summary>设置 IDomNode.get_TagName() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDomNode.TagNameGet">
            <summary>设置 IDomNode.get_TagName() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIDownloadHandler">
            <summary>CefSharp.IDownloadHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDownloadHandler.#ctor">
            <summary>初始化 type StubIDownloadHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDownloadHandler.CefSharp#IDownloadHandler#OnBeforeDownload(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.DownloadItem,CefSharp.IBeforeDownloadCallback)">
            <summary>设置 IDownloadHandler.OnBeforeDownload(IWebBrowser chromiumWebBrowser, IBrowser browser, DownloadItem downloadItem, IBeforeDownloadCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDownloadHandler.CefSharp#IDownloadHandler#OnDownloadUpdated(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.DownloadItem,CefSharp.IDownloadItemCallback)">
            <summary>设置 IDownloadHandler.OnDownloadUpdated(IWebBrowser chromiumWebBrowser, IBrowser browser, DownloadItem downloadItem, IDownloadItemCallback callback) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDownloadHandler.OnBeforeDownloadIWebBrowserIBrowserDownloadItemIBeforeDownloadCallback">
            <summary>设置 IDownloadHandler.OnBeforeDownload(IWebBrowser chromiumWebBrowser, IBrowser browser, DownloadItem downloadItem, IBeforeDownloadCallback callback) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDownloadHandler.OnDownloadUpdatedIWebBrowserIBrowserDownloadItemIDownloadItemCallback">
            <summary>设置 IDownloadHandler.OnDownloadUpdated(IWebBrowser chromiumWebBrowser, IBrowser browser, DownloadItem downloadItem, IDownloadItemCallback callback) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIDownloadItemCallback">
            <summary>CefSharp.IDownloadItemCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDownloadItemCallback.#ctor">
            <summary>初始化 type StubIDownloadItemCallback 的新实例</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDownloadItemCallback.Cancel">
            <summary>设置 IDownloadItemCallback.Cancel() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDownloadItemCallback.CefSharp#IDownloadItemCallback#Cancel">
            <summary>设置 IDownloadItemCallback.Cancel() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDownloadItemCallback.CefSharp#IDownloadItemCallback#Pause">
            <summary>设置 IDownloadItemCallback.Pause() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDownloadItemCallback.CefSharp#IDownloadItemCallback#Resume">
            <summary>设置 IDownloadItemCallback.Resume() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDownloadItemCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDownloadItemCallback.CefSharp#IDownloadItemCallback#IsDisposed">
            <summary>设置 IDownloadItemCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDownloadItemCallback.IsDisposedGet">
            <summary>设置 IDownloadItemCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDownloadItemCallback.Pause">
            <summary>设置 IDownloadItemCallback.Pause() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDownloadItemCallback.Resume">
            <summary>设置 IDownloadItemCallback.Resume() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDownloadItemCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIDragData">
            <summary>CefSharp.IDragData 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.#ctor">
            <summary>初始化 type StubIDragData 的新实例</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.AddFileStringString">
            <summary>设置 IDragData.AddFile(String path, String displayName) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.AttachBackingFieldToFileName">
            <summary>附加委托以将 StubIDragData.FileName 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.AttachBackingFieldToFragmentBaseUrl">
            <summary>附加委托以将 StubIDragData.FragmentBaseUrl 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.AttachBackingFieldToFragmentHtml">
            <summary>附加委托以将 StubIDragData.FragmentHtml 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.AttachBackingFieldToFragmentText">
            <summary>附加委托以将 StubIDragData.FragmentText 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.AttachBackingFieldToIsFile">
            <summary>附加委托以将 StubIDragData.IsFile 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.AttachBackingFieldToIsFragment">
            <summary>附加委托以将 StubIDragData.IsFragment 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.AttachBackingFieldToIsLink">
            <summary>附加委托以将 StubIDragData.IsLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.AttachBackingFieldToLinkMetaData">
            <summary>附加委托以将 StubIDragData.LinkMetaData 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.AttachBackingFieldToLinkTitle">
            <summary>附加委托以将 StubIDragData.LinkTitle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.AttachBackingFieldToLinkUrl">
            <summary>附加委托以将 StubIDragData.LinkUrl 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#AddFile(System.String,System.String)">
            <summary>设置 IDragData.AddFile(String path, String displayName) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#Clone">
            <summary>设置 IDragData.Clone() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#GetFileContents(System.IO.Stream)">
            <summary>设置 IDragData.GetFileContents(Stream stream) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#ResetFileContents">
            <summary>设置 IDragData.ResetFileContents() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.Clone">
            <summary>设置 IDragData.Clone() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#FileName">
            <summary>设置 IDragData.get_FileName() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.FileNameGet">
            <summary>设置 IDragData.get_FileName() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.FileNameSetString">
            <summary>设置 IDragData.set_FileName(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#FileNames">
            <summary>设置 IDragData.get_FileNames() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.FileNamesGet">
            <summary>设置 IDragData.get_FileNames() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#FragmentBaseUrl">
            <summary>设置 IDragData.get_FragmentBaseUrl() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.FragmentBaseUrlGet">
            <summary>设置 IDragData.get_FragmentBaseUrl() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.FragmentBaseUrlSetString">
            <summary>设置 IDragData.set_FragmentBaseUrl(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#FragmentHtml">
            <summary>设置 IDragData.get_FragmentHtml() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.FragmentHtmlGet">
            <summary>设置 IDragData.get_FragmentHtml() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.FragmentHtmlSetString">
            <summary>设置 IDragData.set_FragmentHtml(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#FragmentText">
            <summary>设置 IDragData.get_FragmentText() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.FragmentTextGet">
            <summary>设置 IDragData.get_FragmentText() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.FragmentTextSetString">
            <summary>设置 IDragData.set_FragmentText(String value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.GetFileContentsStream">
            <summary>设置 IDragData.GetFileContents(Stream stream) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#HasImage">
            <summary>设置 IDragData.get_HasImage() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.HasImageGet">
            <summary>设置 IDragData.get_HasImage() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#Image">
            <summary>设置 IDragData.get_Image() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.ImageGet">
            <summary>设置 IDragData.get_Image() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#ImageHotspot">
            <summary>设置 IDragData.get_ImageHotspot() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.ImageHotspotGet">
            <summary>设置 IDragData.get_ImageHotspot() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#IsDisposed">
            <summary>设置 IDragData.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.IsDisposedGet">
            <summary>设置 IDragData.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#IsFile">
            <summary>设置 IDragData.get_IsFile() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.IsFileGet">
            <summary>设置 IDragData.get_IsFile() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.IsFileSetBoolean">
            <summary>设置 IDragData.set_IsFile(Boolean value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#IsFragment">
            <summary>设置 IDragData.get_IsFragment() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.IsFragmentGet">
            <summary>设置 IDragData.get_IsFragment() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.IsFragmentSetBoolean">
            <summary>设置 IDragData.set_IsFragment(Boolean value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#IsLink">
            <summary>设置 IDragData.get_IsLink() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.IsLinkGet">
            <summary>设置 IDragData.get_IsLink() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.IsLinkSetBoolean">
            <summary>设置 IDragData.set_IsLink(Boolean value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#IsReadOnly">
            <summary>设置 IDragData.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.IsReadOnlyGet">
            <summary>设置 IDragData.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#LinkMetaData">
            <summary>设置 IDragData.get_LinkMetaData() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.LinkMetaDataGet">
            <summary>设置 IDragData.get_LinkMetaData() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.LinkMetaDataSetString">
            <summary>设置 IDragData.set_LinkMetaData(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#LinkTitle">
            <summary>设置 IDragData.get_LinkTitle() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.LinkTitleGet">
            <summary>设置 IDragData.get_LinkTitle() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.LinkTitleSetString">
            <summary>设置 IDragData.set_LinkTitle(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIDragData.CefSharp#IDragData#LinkUrl">
            <summary>设置 IDragData.get_LinkUrl() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.LinkUrlGet">
            <summary>设置 IDragData.get_LinkUrl() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.LinkUrlSetString">
            <summary>设置 IDragData.set_LinkUrl(String value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragData.ResetFileContents">
            <summary>设置 IDragData.ResetFileContents() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragData.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIDragHandler">
            <summary>CefSharp.IDragHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragHandler.#ctor">
            <summary>初始化 type StubIDragHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragHandler.CefSharp#IDragHandler#OnDragEnter(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IDragData,CefSharp.Enums.DragOperationsMask)">
            <summary>设置 IDragHandler.OnDragEnter(IWebBrowser chromiumWebBrowser, IBrowser browser, IDragData dragData, DragOperationsMask mask) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIDragHandler.CefSharp#IDragHandler#OnDraggableRegionsChanged(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Collections.Generic.IList{CefSharp.DraggableRegion})">
            <summary>设置 IDragHandler.OnDraggableRegionsChanged(IWebBrowser chromiumWebBrowser, IBrowser browser, IList`1&lt;DraggableRegion&gt; regions) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragHandler.OnDragEnterIWebBrowserIBrowserIDragDataDragOperationsMask">
            <summary>设置 IDragHandler.OnDragEnter(IWebBrowser chromiumWebBrowser, IBrowser browser, IDragData dragData, DragOperationsMask mask) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIDragHandler.OnDraggableRegionsChangedIWebBrowserIBrowserIListOfDraggableRegion">
            <summary>设置 IDragHandler.OnDraggableRegionsChanged(IWebBrowser chromiumWebBrowser, IBrowser browser, IList`1&lt;DraggableRegion&gt; regions) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIFileDialogCallback">
            <summary>CefSharp.IFileDialogCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFileDialogCallback.#ctor">
            <summary>初始化 type StubIFileDialogCallback 的新实例</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFileDialogCallback.Cancel">
            <summary>设置 IFileDialogCallback.Cancel() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFileDialogCallback.CefSharp#IFileDialogCallback#Cancel">
            <summary>设置 IFileDialogCallback.Cancel() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFileDialogCallback.CefSharp#IFileDialogCallback#Continue(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>设置 IFileDialogCallback.Continue(Int32 selectedAcceptFilter, List`1&lt;String&gt; filePaths) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFileDialogCallback.ContinueInt32ListOfString">
            <summary>设置 IFileDialogCallback.Continue(Int32 selectedAcceptFilter, List`1&lt;String&gt; filePaths) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFileDialogCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIFileDialogCallback.CefSharp#IFileDialogCallback#IsDisposed">
            <summary>设置 IFileDialogCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFileDialogCallback.IsDisposedGet">
            <summary>设置 IFileDialogCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFileDialogCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIFindHandler">
            <summary>CefSharp.IFindHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFindHandler.#ctor">
            <summary>初始化 type StubIFindHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFindHandler.CefSharp#IFindHandler#OnFindResult(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Int32,System.Int32,CefSharp.Structs.Rect,System.Int32,System.Boolean)">
            <summary>设置 IFindHandler.OnFindResult(IWebBrowser chromiumWebBrowser, IBrowser browser, Int32 identifier, Int32 count, Rect selectionRect, Int32 activeMatchOrdinal, Boolean finalUpdate) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFindHandler.OnFindResultIWebBrowserIBrowserInt32Int32RectInt32Boolean">
            <summary>设置 IFindHandler.OnFindResult(IWebBrowser chromiumWebBrowser, IBrowser browser, Int32 identifier, Int32 count, Rect selectionRect, Int32 activeMatchOrdinal, Boolean finalUpdate) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIFocusHandler">
            <summary>CefSharp.IFocusHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFocusHandler.#ctor">
            <summary>初始化 type StubIFocusHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFocusHandler.CefSharp#IFocusHandler#OnGotFocus(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>设置 IFocusHandler.OnGotFocus(IWebBrowser chromiumWebBrowser, IBrowser browser) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFocusHandler.CefSharp#IFocusHandler#OnSetFocus(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefFocusSource)">
            <summary>设置 IFocusHandler.OnSetFocus(IWebBrowser chromiumWebBrowser, IBrowser browser, CefFocusSource source) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFocusHandler.CefSharp#IFocusHandler#OnTakeFocus(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Boolean)">
            <summary>设置 IFocusHandler.OnTakeFocus(IWebBrowser chromiumWebBrowser, IBrowser browser, Boolean next) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFocusHandler.OnGotFocusIWebBrowserIBrowser">
            <summary>设置 IFocusHandler.OnGotFocus(IWebBrowser chromiumWebBrowser, IBrowser browser) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFocusHandler.OnSetFocusIWebBrowserIBrowserCefFocusSource">
            <summary>设置 IFocusHandler.OnSetFocus(IWebBrowser chromiumWebBrowser, IBrowser browser, CefFocusSource source) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFocusHandler.OnTakeFocusIWebBrowserIBrowserBoolean">
            <summary>设置 IFocusHandler.OnTakeFocus(IWebBrowser chromiumWebBrowser, IBrowser browser, Boolean next) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIFrame">
            <summary>CefSharp.IFrame 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.#ctor">
            <summary>初始化 type StubIFrame 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#Browser">
            <summary>设置 IFrame.get_Browser() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.BrowserGet">
            <summary>设置 IFrame.get_Browser() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#Copy">
            <summary>设置 IFrame.Copy() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#CreateRequest(System.Boolean)">
            <summary>设置 IFrame.CreateRequest(Boolean initializePostData) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#Cut">
            <summary>设置 IFrame.Cut() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#Delete">
            <summary>设置 IFrame.Delete() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#EvaluateScriptAsync(System.String,System.String,System.Int32,System.Nullable{System.TimeSpan})">
            <summary>设置 IFrame.EvaluateScriptAsync(String script, String scriptUrl, Int32 startLine, Nullable`1&lt;TimeSpan&gt; timeout) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#ExecuteJavaScriptAsync(System.String,System.String,System.Int32)">
            <summary>设置 IFrame.ExecuteJavaScriptAsync(String code, String scriptUrl, Int32 startLine) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#GetSource(CefSharp.IStringVisitor)">
            <summary>设置 IFrame.GetSource(IStringVisitor visitor) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#GetSourceAsync">
            <summary>设置 IFrame.GetSourceAsync() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#GetText(CefSharp.IStringVisitor)">
            <summary>设置 IFrame.GetText(IStringVisitor visitor) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#GetTextAsync">
            <summary>设置 IFrame.GetTextAsync() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#LoadRequest(CefSharp.IRequest)">
            <summary>设置 IFrame.LoadRequest(IRequest request) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#LoadStringForUrl(System.String,System.String)">
            <summary>设置 IFrame.LoadStringForUrl(String html, String url) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#LoadUrl(System.String)">
            <summary>设置 IFrame.LoadUrl(String url) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#Paste">
            <summary>设置 IFrame.Paste() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#Redo">
            <summary>设置 IFrame.Redo() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#SelectAll">
            <summary>设置 IFrame.SelectAll() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#Undo">
            <summary>设置 IFrame.Undo() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#ViewSource">
            <summary>设置 IFrame.ViewSource() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.Copy">
            <summary>设置 IFrame.Copy() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.CreateRequestBoolean">
            <summary>设置 IFrame.CreateRequest(Boolean initializePostData) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.Cut">
            <summary>设置 IFrame.Cut() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.Delete">
            <summary>设置 IFrame.Delete() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.EvaluateScriptAsyncStringStringInt32NullableOfTimeSpan">
            <summary>设置 IFrame.EvaluateScriptAsync(String script, String scriptUrl, Int32 startLine, Nullable`1&lt;TimeSpan&gt; timeout) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.ExecuteJavaScriptAsyncStringStringInt32">
            <summary>设置 IFrame.ExecuteJavaScriptAsync(String code, String scriptUrl, Int32 startLine) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.GetSourceAsync">
            <summary>设置 IFrame.GetSourceAsync() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.GetSourceIStringVisitor">
            <summary>设置 IFrame.GetSource(IStringVisitor visitor) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.GetTextAsync">
            <summary>设置 IFrame.GetTextAsync() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.GetTextIStringVisitor">
            <summary>设置 IFrame.GetText(IStringVisitor visitor) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#Identifier">
            <summary>设置 IFrame.get_Identifier() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.IdentifierGet">
            <summary>设置 IFrame.get_Identifier() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#IsDisposed">
            <summary>设置 IFrame.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.IsDisposedGet">
            <summary>设置 IFrame.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#IsFocused">
            <summary>设置 IFrame.get_IsFocused() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.IsFocusedGet">
            <summary>设置 IFrame.get_IsFocused() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#IsMain">
            <summary>设置 IFrame.get_IsMain() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.IsMainGet">
            <summary>设置 IFrame.get_IsMain() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#IsValid">
            <summary>设置 IFrame.get_IsValid() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.IsValidGet">
            <summary>设置 IFrame.get_IsValid() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.LoadRequestIRequest">
            <summary>设置 IFrame.LoadRequest(IRequest request) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.LoadStringForUrlStringString">
            <summary>设置 IFrame.LoadStringForUrl(String html, String url) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.LoadUrlString">
            <summary>设置 IFrame.LoadUrl(String url) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#Name">
            <summary>设置 IFrame.get_Name() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.NameGet">
            <summary>设置 IFrame.get_Name() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#Parent">
            <summary>设置 IFrame.get_Parent() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.ParentGet">
            <summary>设置 IFrame.get_Parent() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.Paste">
            <summary>设置 IFrame.Paste() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.Redo">
            <summary>设置 IFrame.Redo() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.SelectAll">
            <summary>设置 IFrame.SelectAll() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIFrame.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.Undo">
            <summary>设置 IFrame.Undo() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIFrame.CefSharp#IFrame#Url">
            <summary>设置 IFrame.get_Url() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.UrlGet">
            <summary>设置 IFrame.get_Url() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIFrame.ViewSource">
            <summary>设置 IFrame.ViewSource() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIImage">
            <summary>CefSharp.IImage 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIImage.#ctor">
            <summary>初始化 type StubIImage 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIImage.CefSharp#IImage#GetAsBitmap(System.Single,CefSharp.Enums.ColorType,CefSharp.Enums.AlphaType,System.Int32@,System.Int32@)">
            <summary>设置 IImage.GetAsBitmap(Single scaleFactor, ColorType colorType, AlphaType alphaType, Int32&amp; pixelWidth, Int32&amp; pixelHeight) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIImage.CefSharp#IImage#GetAsJPEG(System.Single,System.Int32,System.Int32@,System.Int32@)">
            <summary>设置 IImage.GetAsJPEG(Single scaleFactor, Int32 quality, Int32&amp; pixelWidth, Int32&amp; pixelHeight) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIImage.CefSharp#IImage#GetAsPNG(System.Single,System.Boolean,System.Int32@,System.Int32@)">
            <summary>设置 IImage.GetAsPNG(Single scaleFactor, Boolean withTransparency, Int32&amp; pixelWidth, Int32&amp; pixelHeight) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIImage.CefSharp#IImage#GetRepresentationInfo(System.Single,System.Single@,System.Int32@,System.Int32@)">
            <summary>设置 IImage.GetRepresentationInfo(Single scaleFactor, Single&amp; actualScaleFactor, Int32&amp; pixelWidth, Int32&amp; pixelHeight) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIImage.CefSharp#IImage#HasRepresentation(System.Single)">
            <summary>设置 IImage.HasRepresentation(Single scaleFactor) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIImage.CefSharp#IImage#IsSame(CefSharp.IImage)">
            <summary>设置 IImage.IsSame(IImage that) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIImage.CefSharp#IImage#RemoveRepresentation(System.Single)">
            <summary>设置 IImage.RemoveRepresentation(Single scaleFactor) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIImage.GetAsBitmapSingleColorTypeAlphaTypeInt32OutInt32Out">
            <summary>设置 IImage.GetAsBitmap(Single scaleFactor, ColorType colorType, AlphaType alphaType, Int32&amp; pixelWidth, Int32&amp; pixelHeight) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIImage.GetAsJPEGSingleInt32Int32OutInt32Out">
            <summary>设置 IImage.GetAsJPEG(Single scaleFactor, Int32 quality, Int32&amp; pixelWidth, Int32&amp; pixelHeight) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIImage.GetAsPNGSingleBooleanInt32OutInt32Out">
            <summary>设置 IImage.GetAsPNG(Single scaleFactor, Boolean withTransparency, Int32&amp; pixelWidth, Int32&amp; pixelHeight) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIImage.GetRepresentationInfoSingleSingleOutInt32OutInt32Out">
            <summary>设置 IImage.GetRepresentationInfo(Single scaleFactor, Single&amp; actualScaleFactor, Int32&amp; pixelWidth, Int32&amp; pixelHeight) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIImage.HasRepresentationSingle">
            <summary>设置 IImage.HasRepresentation(Single scaleFactor) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIImage.CefSharp#IImage#Height">
            <summary>设置 IImage.get_Height() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIImage.HeightGet">
            <summary>设置 IImage.get_Height() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIImage.CefSharp#IImage#IsEmpty">
            <summary>设置 IImage.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIImage.IsEmptyGet">
            <summary>设置 IImage.get_IsEmpty() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIImage.IsSameIImage">
            <summary>设置 IImage.IsSame(IImage that) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIImage.RemoveRepresentationSingle">
            <summary>设置 IImage.RemoveRepresentation(Single scaleFactor) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIImage.CefSharp#IImage#Width">
            <summary>设置 IImage.get_Width() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIImage.WidthGet">
            <summary>设置 IImage.get_Width() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIJavascriptCallback">
            <summary>CefSharp.IJavascriptCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJavascriptCallback.#ctor">
            <summary>初始化 type StubIJavascriptCallback 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIJavascriptCallback.CefSharp#IJavascriptCallback#CanExecute">
            <summary>设置 IJavascriptCallback.get_CanExecute() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJavascriptCallback.CanExecuteGet">
            <summary>设置 IJavascriptCallback.get_CanExecute() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJavascriptCallback.CefSharp#IJavascriptCallback#ExecuteAsync(System.Object[])">
            <summary>设置 IJavascriptCallback.ExecuteAsync(Object[] parms) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJavascriptCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJavascriptCallback.ExecuteAsyncObjectArray">
            <summary>设置 IJavascriptCallback.ExecuteAsync(Object[] parms) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIJavascriptCallback.CefSharp#IJavascriptCallback#Id">
            <summary>设置 IJavascriptCallback.get_Id() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJavascriptCallback.IdGet">
            <summary>设置 IJavascriptCallback.get_Id() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIJavascriptCallback.CefSharp#IJavascriptCallback#IsDisposed">
            <summary>设置 IJavascriptCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJavascriptCallback.IsDisposedGet">
            <summary>设置 IJavascriptCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJavascriptCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIJavascriptObjectRepository">
            <summary>CefSharp.IJavascriptObjectRepository 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJavascriptObjectRepository.#ctor">
            <summary>初始化 type StubIJavascriptObjectRepository 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJavascriptObjectRepository.CefSharp#IJavascriptObjectRepository#IsBound(System.String)">
            <summary>设置 IJavascriptObjectRepository.IsBound(String name) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJavascriptObjectRepository.CefSharp#IJavascriptObjectRepository#Register(System.String,System.Object,System.Boolean,CefSharp.BindingOptions)">
            <summary>设置 IJavascriptObjectRepository.Register(String name, Object objectToBind, Boolean isAsync, BindingOptions options) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJavascriptObjectRepository.CefSharp#IJavascriptObjectRepository#UnRegister(System.String)">
            <summary>设置 IJavascriptObjectRepository.UnRegister(String name) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJavascriptObjectRepository.CefSharp#IJavascriptObjectRepository#UnRegisterAll">
            <summary>设置 IJavascriptObjectRepository.UnRegisterAll() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJavascriptObjectRepository.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIJavascriptObjectRepository.CefSharp#IJavascriptObjectRepository#HasBoundObjects">
            <summary>设置 IJavascriptObjectRepository.get_HasBoundObjects() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJavascriptObjectRepository.HasBoundObjectsGet">
            <summary>设置 IJavascriptObjectRepository.get_HasBoundObjects() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJavascriptObjectRepository.IsBoundString">
            <summary>设置 IJavascriptObjectRepository.IsBound(String name) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJavascriptObjectRepository.RegisterStringObjectBooleanBindingOptions">
            <summary>设置 IJavascriptObjectRepository.Register(String name, Object objectToBind, Boolean isAsync, BindingOptions options) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJavascriptObjectRepository.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJavascriptObjectRepository.UnRegisterAll">
            <summary>设置 IJavascriptObjectRepository.UnRegisterAll() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJavascriptObjectRepository.UnRegisterString">
            <summary>设置 IJavascriptObjectRepository.UnRegister(String name) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIJsDialogCallback">
            <summary>CefSharp.IJsDialogCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJsDialogCallback.#ctor">
            <summary>初始化 type StubIJsDialogCallback 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJsDialogCallback.CefSharp#IJsDialogCallback#Continue(System.Boolean)">
            <summary>设置 IJsDialogCallback.Continue(Boolean success) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJsDialogCallback.CefSharp#IJsDialogCallback#Continue(System.Boolean,System.String)">
            <summary>设置 IJsDialogCallback.Continue(Boolean success, String userInput) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJsDialogCallback.ContinueBoolean">
            <summary>设置 IJsDialogCallback.Continue(Boolean success) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJsDialogCallback.ContinueBooleanString">
            <summary>设置 IJsDialogCallback.Continue(Boolean success, String userInput) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJsDialogCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIJsDialogCallback.CefSharp#IJsDialogCallback#IsDisposed">
            <summary>设置 IJsDialogCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJsDialogCallback.IsDisposedGet">
            <summary>设置 IJsDialogCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJsDialogCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIJsDialogHandler">
            <summary>CefSharp.IJsDialogHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJsDialogHandler.#ctor">
            <summary>初始化 type StubIJsDialogHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJsDialogHandler.CefSharp#IJsDialogHandler#OnDialogClosed(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>设置 IJsDialogHandler.OnDialogClosed(IWebBrowser chromiumWebBrowser, IBrowser browser) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJsDialogHandler.CefSharp#IJsDialogHandler#OnJSBeforeUnload(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Boolean,CefSharp.IJsDialogCallback)">
            <summary>设置 IJsDialogHandler.OnJSBeforeUnload(IWebBrowser chromiumWebBrowser, IBrowser browser, String message, Boolean isReload, IJsDialogCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJsDialogHandler.CefSharp#IJsDialogHandler#OnJSDialog(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,CefSharp.CefJsDialogType,System.String,System.String,CefSharp.IJsDialogCallback,System.Boolean@)">
            <summary>设置 IJsDialogHandler.OnJSDialog(IWebBrowser chromiumWebBrowser, IBrowser browser, String originUrl, CefJsDialogType dialogType, String messageText, String defaultPromptText, IJsDialogCallback callback, Boolean&amp; suppressMessage) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIJsDialogHandler.CefSharp#IJsDialogHandler#OnResetDialogState(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>设置 IJsDialogHandler.OnResetDialogState(IWebBrowser chromiumWebBrowser, IBrowser browser) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJsDialogHandler.OnDialogClosedIWebBrowserIBrowser">
            <summary>设置 IJsDialogHandler.OnDialogClosed(IWebBrowser chromiumWebBrowser, IBrowser browser) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJsDialogHandler.OnJSBeforeUnloadIWebBrowserIBrowserStringBooleanIJsDialogCallback">
            <summary>设置 IJsDialogHandler.OnJSBeforeUnload(IWebBrowser chromiumWebBrowser, IBrowser browser, String message, Boolean isReload, IJsDialogCallback callback) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJsDialogHandler.OnJSDialogIWebBrowserIBrowserStringCefJsDialogTypeStringStringIJsDialogCallbackBooleanRef">
            <summary>设置 IJsDialogHandler.OnJSDialog(IWebBrowser chromiumWebBrowser, IBrowser browser, String originUrl, CefJsDialogType dialogType, String messageText, String defaultPromptText, IJsDialogCallback callback, Boolean&amp; suppressMessage) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIJsDialogHandler.OnResetDialogStateIWebBrowserIBrowser">
            <summary>设置 IJsDialogHandler.OnResetDialogState(IWebBrowser chromiumWebBrowser, IBrowser browser) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIKeyboardHandler">
            <summary>CefSharp.IKeyboardHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIKeyboardHandler.#ctor">
            <summary>初始化 type StubIKeyboardHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIKeyboardHandler.CefSharp#IKeyboardHandler#OnKeyEvent(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.KeyType,System.Int32,System.Int32,CefSharp.CefEventFlags,System.Boolean)">
            <summary>设置 IKeyboardHandler.OnKeyEvent(IWebBrowser chromiumWebBrowser, IBrowser browser, KeyType type, Int32 windowsKeyCode, Int32 nativeKeyCode, CefEventFlags modifiers, Boolean isSystemKey) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIKeyboardHandler.CefSharp#IKeyboardHandler#OnPreKeyEvent(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.KeyType,System.Int32,System.Int32,CefSharp.CefEventFlags,System.Boolean,System.Boolean@)">
            <summary>设置 IKeyboardHandler.OnPreKeyEvent(IWebBrowser chromiumWebBrowser, IBrowser browser, KeyType type, Int32 windowsKeyCode, Int32 nativeKeyCode, CefEventFlags modifiers, Boolean isSystemKey, Boolean&amp; isKeyboardShortcut) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIKeyboardHandler.OnKeyEventIWebBrowserIBrowserKeyTypeInt32Int32CefEventFlagsBoolean">
            <summary>设置 IKeyboardHandler.OnKeyEvent(IWebBrowser chromiumWebBrowser, IBrowser browser, KeyType type, Int32 windowsKeyCode, Int32 nativeKeyCode, CefEventFlags modifiers, Boolean isSystemKey) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIKeyboardHandler.OnPreKeyEventIWebBrowserIBrowserKeyTypeInt32Int32CefEventFlagsBooleanBooleanRef">
            <summary>设置 IKeyboardHandler.OnPreKeyEvent(IWebBrowser chromiumWebBrowser, IBrowser browser, KeyType type, Int32 windowsKeyCode, Int32 nativeKeyCode, CefEventFlags modifiers, Boolean isSystemKey, Boolean&amp; isKeyboardShortcut) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubILifeSpanHandler">
            <summary>CefSharp.ILifeSpanHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubILifeSpanHandler.#ctor">
            <summary>初始化 type StubILifeSpanHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubILifeSpanHandler.CefSharp#ILifeSpanHandler#DoClose(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>设置 ILifeSpanHandler.DoClose(IWebBrowser chromiumWebBrowser, IBrowser browser) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubILifeSpanHandler.CefSharp#ILifeSpanHandler#OnAfterCreated(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>设置 ILifeSpanHandler.OnAfterCreated(IWebBrowser chromiumWebBrowser, IBrowser browser) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubILifeSpanHandler.CefSharp#ILifeSpanHandler#OnBeforeClose(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>设置 ILifeSpanHandler.OnBeforeClose(IWebBrowser chromiumWebBrowser, IBrowser browser) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubILifeSpanHandler.CefSharp#ILifeSpanHandler#OnBeforePopup(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.String,System.String,CefSharp.WindowOpenDisposition,System.Boolean,CefSharp.IPopupFeatures,CefSharp.IWindowInfo,CefSharp.IBrowserSettings,System.Boolean@,CefSharp.IWebBrowser@)">
            <summary>设置 ILifeSpanHandler.OnBeforePopup(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, String targetUrl, String targetFrameName, WindowOpenDisposition targetDisposition, Boolean userGesture, IPopupFeatures popupFeatures, IWindowInfo windowInfo, IBrowserSettings browserSettings, Boolean&amp; noJavascriptAccess, IWebBrowser&amp; newBrowser) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubILifeSpanHandler.DoCloseIWebBrowserIBrowser">
            <summary>设置 ILifeSpanHandler.DoClose(IWebBrowser chromiumWebBrowser, IBrowser browser) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubILifeSpanHandler.OnAfterCreatedIWebBrowserIBrowser">
            <summary>设置 ILifeSpanHandler.OnAfterCreated(IWebBrowser chromiumWebBrowser, IBrowser browser) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubILifeSpanHandler.OnBeforeCloseIWebBrowserIBrowser">
            <summary>设置 ILifeSpanHandler.OnBeforeClose(IWebBrowser chromiumWebBrowser, IBrowser browser) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubILifeSpanHandler.OnBeforePopupIWebBrowserIBrowserIFrameStringStringWindowOpenDispositionBooleanIPopupFeaturesIWindowInfoIBrowserSettingsBooleanRefIWebBrowserOut">
            <summary>设置 ILifeSpanHandler.OnBeforePopup(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, String targetUrl, String targetFrameName, WindowOpenDisposition targetDisposition, Boolean userGesture, IPopupFeatures popupFeatures, IWindowInfo windowInfo, IBrowserSettings browserSettings, Boolean&amp; noJavascriptAccess, IWebBrowser&amp; newBrowser) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubILoadHandler">
            <summary>CefSharp.ILoadHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubILoadHandler.#ctor">
            <summary>初始化 type StubILoadHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubILoadHandler.CefSharp#ILoadHandler#OnFrameLoadEnd(CefSharp.IWebBrowser,CefSharp.FrameLoadEndEventArgs)">
            <summary>设置 ILoadHandler.OnFrameLoadEnd(IWebBrowser chromiumWebBrowser, FrameLoadEndEventArgs frameLoadEndArgs) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubILoadHandler.CefSharp#ILoadHandler#OnFrameLoadStart(CefSharp.IWebBrowser,CefSharp.FrameLoadStartEventArgs)">
            <summary>设置 ILoadHandler.OnFrameLoadStart(IWebBrowser chromiumWebBrowser, FrameLoadStartEventArgs frameLoadStartArgs) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubILoadHandler.CefSharp#ILoadHandler#OnLoadError(CefSharp.IWebBrowser,CefSharp.LoadErrorEventArgs)">
            <summary>设置 ILoadHandler.OnLoadError(IWebBrowser chromiumWebBrowser, LoadErrorEventArgs loadErrorArgs) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubILoadHandler.CefSharp#ILoadHandler#OnLoadingStateChange(CefSharp.IWebBrowser,CefSharp.LoadingStateChangedEventArgs)">
            <summary>设置 ILoadHandler.OnLoadingStateChange(IWebBrowser chromiumWebBrowser, LoadingStateChangedEventArgs loadingStateChangedArgs) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubILoadHandler.OnFrameLoadEndIWebBrowserFrameLoadEndEventArgs">
            <summary>设置 ILoadHandler.OnFrameLoadEnd(IWebBrowser chromiumWebBrowser, FrameLoadEndEventArgs frameLoadEndArgs) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubILoadHandler.OnFrameLoadStartIWebBrowserFrameLoadStartEventArgs">
            <summary>设置 ILoadHandler.OnFrameLoadStart(IWebBrowser chromiumWebBrowser, FrameLoadStartEventArgs frameLoadStartArgs) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubILoadHandler.OnLoadErrorIWebBrowserLoadErrorEventArgs">
            <summary>设置 ILoadHandler.OnLoadError(IWebBrowser chromiumWebBrowser, LoadErrorEventArgs loadErrorArgs) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubILoadHandler.OnLoadingStateChangeIWebBrowserLoadingStateChangedEventArgs">
            <summary>设置 ILoadHandler.OnLoadingStateChange(IWebBrowser chromiumWebBrowser, LoadingStateChangedEventArgs loadingStateChangedArgs) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIMenuModel">
            <summary>CefSharp.IMenuModel 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.#ctor">
            <summary>初始化 type StubIMenuModel 的新实例</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.AddCheckItemCefMenuCommandString">
            <summary>设置 IMenuModel.AddCheckItem(CefMenuCommand commandId, String label) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.AddItemCefMenuCommandString">
            <summary>设置 IMenuModel.AddItem(CefMenuCommand commandId, String label) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.AddRadioItemCefMenuCommandStringInt32">
            <summary>设置 IMenuModel.AddRadioItem(CefMenuCommand commandId, String label, Int32 groupId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.AddSeparator">
            <summary>设置 IMenuModel.AddSeparator() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.AddSubMenuCefMenuCommandString">
            <summary>设置 IMenuModel.AddSubMenu(CefMenuCommand commandId, String label) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#AddCheckItem(CefSharp.CefMenuCommand,System.String)">
            <summary>设置 IMenuModel.AddCheckItem(CefMenuCommand commandId, String label) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#AddItem(CefSharp.CefMenuCommand,System.String)">
            <summary>设置 IMenuModel.AddItem(CefMenuCommand commandId, String label) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#AddRadioItem(CefSharp.CefMenuCommand,System.String,System.Int32)">
            <summary>设置 IMenuModel.AddRadioItem(CefMenuCommand commandId, String label, Int32 groupId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#AddSeparator">
            <summary>设置 IMenuModel.AddSeparator() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#AddSubMenu(CefSharp.CefMenuCommand,System.String)">
            <summary>设置 IMenuModel.AddSubMenu(CefMenuCommand commandId, String label) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#Clear">
            <summary>设置 IMenuModel.Clear() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#GetAccelerator(CefSharp.CefMenuCommand,System.Int32@,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>设置 IMenuModel.GetAccelerator(CefMenuCommand commandId, Int32&amp; keyCode, Boolean&amp; shiftPressed, Boolean&amp; ctrlPressed, Boolean&amp; altPressed) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#GetAcceleratorAt(System.Int32,System.Int32@,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>设置 IMenuModel.GetAcceleratorAt(Int32 index, Int32&amp; keyCode, Boolean&amp; shiftPressed, Boolean&amp; ctrlPressed, Boolean&amp; altPressed) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#GetCommandIdAt(System.Int32)">
            <summary>设置 IMenuModel.GetCommandIdAt(Int32 index) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#GetGroupId(CefSharp.CefMenuCommand)">
            <summary>设置 IMenuModel.GetGroupId(CefMenuCommand commandId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#GetGroupIdAt(System.Int32)">
            <summary>设置 IMenuModel.GetGroupIdAt(Int32 index) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#GetIndexOf(CefSharp.CefMenuCommand)">
            <summary>设置 IMenuModel.GetIndexOf(CefMenuCommand commandId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#GetLabel(CefSharp.CefMenuCommand)">
            <summary>设置 IMenuModel.GetLabel(CefMenuCommand commandId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#GetLabelAt(System.Int32)">
            <summary>设置 IMenuModel.GetLabelAt(Int32 index) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#GetSubMenu(CefSharp.CefMenuCommand)">
            <summary>设置 IMenuModel.GetSubMenu(CefMenuCommand commandId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#GetSubMenuAt(System.Int32)">
            <summary>设置 IMenuModel.GetSubMenuAt(Int32 index) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#GetType(CefSharp.CefMenuCommand)">
            <summary>设置 IMenuModel.GetType(CefMenuCommand commandId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#GetTypeAt(System.Int32)">
            <summary>设置 IMenuModel.GetTypeAt(Int32 index) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#HasAccelerator(CefSharp.CefMenuCommand)">
            <summary>设置 IMenuModel.HasAccelerator(CefMenuCommand commandId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#HasAcceleratorAt(System.Int32)">
            <summary>设置 IMenuModel.HasAcceleratorAt(Int32 index) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#InsertCheckItemAt(System.Int32,CefSharp.CefMenuCommand,System.String)">
            <summary>设置 IMenuModel.InsertCheckItemAt(Int32 index, CefMenuCommand commandId, String label) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#InsertItemAt(System.Int32,CefSharp.CefMenuCommand,System.String)">
            <summary>设置 IMenuModel.InsertItemAt(Int32 index, CefMenuCommand commandId, String label) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#InsertRadioItemAt(System.Int32,CefSharp.CefMenuCommand,System.String,System.Int32)">
            <summary>设置 IMenuModel.InsertRadioItemAt(Int32 index, CefMenuCommand commandId, String label, Int32 groupId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#InsertSeparatorAt(System.Int32)">
            <summary>设置 IMenuModel.InsertSeparatorAt(Int32 index) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#InsertSubMenuAt(System.Int32,CefSharp.CefMenuCommand,System.String)">
            <summary>设置 IMenuModel.InsertSubMenuAt(Int32 index, CefMenuCommand commandId, String label) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#IsChecked(CefSharp.CefMenuCommand)">
            <summary>设置 IMenuModel.IsChecked(CefMenuCommand commandId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#IsCheckedAt(System.Int32)">
            <summary>设置 IMenuModel.IsCheckedAt(Int32 index) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#IsEnabled(CefSharp.CefMenuCommand)">
            <summary>设置 IMenuModel.IsEnabled(CefMenuCommand commandId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#IsEnabledAt(System.Int32)">
            <summary>设置 IMenuModel.IsEnabledAt(Int32 index) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#IsVisible(CefSharp.CefMenuCommand)">
            <summary>设置 IMenuModel.IsVisible(CefMenuCommand commandId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#IsVisibleAt(System.Int32)">
            <summary>设置 IMenuModel.IsVisibleAt(Int32 index) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#Remove(CefSharp.CefMenuCommand)">
            <summary>设置 IMenuModel.Remove(CefMenuCommand commandId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#RemoveAccelerator(CefSharp.CefMenuCommand)">
            <summary>设置 IMenuModel.RemoveAccelerator(CefMenuCommand commandId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#RemoveAcceleratorAt(System.Int32)">
            <summary>设置 IMenuModel.RemoveAcceleratorAt(Int32 index) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#RemoveAt(System.Int32)">
            <summary>设置 IMenuModel.RemoveAt(Int32 index) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#SetAccelerator(CefSharp.CefMenuCommand,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>设置 IMenuModel.SetAccelerator(CefMenuCommand commandId, Int32 keyCode, Boolean shiftPressed, Boolean ctrlPressed, Boolean altPressed) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#SetAcceleratorAt(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>设置 IMenuModel.SetAcceleratorAt(Int32 index, Int32 keyCode, Boolean shiftPressed, Boolean ctrlPressed, Boolean altPressed) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#SetChecked(CefSharp.CefMenuCommand,System.Boolean)">
            <summary>设置 IMenuModel.SetChecked(CefMenuCommand commandId, Boolean isChecked) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#SetCheckedAt(System.Int32,System.Boolean)">
            <summary>设置 IMenuModel.SetCheckedAt(Int32 index, Boolean isChecked) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#SetCommandIdAt(System.Int32,CefSharp.CefMenuCommand)">
            <summary>设置 IMenuModel.SetCommandIdAt(Int32 index, CefMenuCommand commandId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#SetEnabled(CefSharp.CefMenuCommand,System.Boolean)">
            <summary>设置 IMenuModel.SetEnabled(CefMenuCommand commandId, Boolean enabled) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#SetEnabledAt(System.Int32,System.Boolean)">
            <summary>设置 IMenuModel.SetEnabledAt(Int32 index, Boolean enabled) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#SetGroupId(CefSharp.CefMenuCommand,System.Int32)">
            <summary>设置 IMenuModel.SetGroupId(CefMenuCommand commandId, Int32 groupId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#SetGroupIdAt(System.Int32,System.Int32)">
            <summary>设置 IMenuModel.SetGroupIdAt(Int32 index, Int32 groupId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#SetLabel(CefSharp.CefMenuCommand,System.String)">
            <summary>设置 IMenuModel.SetLabel(CefMenuCommand commandId, String label) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#SetLabelAt(System.Int32,System.String)">
            <summary>设置 IMenuModel.SetLabelAt(Int32 index, String label) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#SetVisible(CefSharp.CefMenuCommand,System.Boolean)">
            <summary>设置 IMenuModel.SetVisible(CefMenuCommand commandId, Boolean visible) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#SetVisibleAt(System.Int32,System.Boolean)">
            <summary>设置 IMenuModel.SetVisibleAt(Int32 index, Boolean visible) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.Clear">
            <summary>设置 IMenuModel.Clear() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIMenuModel.CefSharp#IMenuModel#Count">
            <summary>设置 IMenuModel.get_Count() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.CountGet">
            <summary>设置 IMenuModel.get_Count() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.GetAcceleratorAtInt32Int32OutBooleanOutBooleanOutBooleanOut">
            <summary>设置 IMenuModel.GetAcceleratorAt(Int32 index, Int32&amp; keyCode, Boolean&amp; shiftPressed, Boolean&amp; ctrlPressed, Boolean&amp; altPressed) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.GetAcceleratorCefMenuCommandInt32OutBooleanOutBooleanOutBooleanOut">
            <summary>设置 IMenuModel.GetAccelerator(CefMenuCommand commandId, Int32&amp; keyCode, Boolean&amp; shiftPressed, Boolean&amp; ctrlPressed, Boolean&amp; altPressed) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.GetCommandIdAtInt32">
            <summary>设置 IMenuModel.GetCommandIdAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.GetGroupIdAtInt32">
            <summary>设置 IMenuModel.GetGroupIdAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.GetGroupIdCefMenuCommand">
            <summary>设置 IMenuModel.GetGroupId(CefMenuCommand commandId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.GetIndexOfCefMenuCommand">
            <summary>设置 IMenuModel.GetIndexOf(CefMenuCommand commandId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.GetLabelAtInt32">
            <summary>设置 IMenuModel.GetLabelAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.GetLabelCefMenuCommand">
            <summary>设置 IMenuModel.GetLabel(CefMenuCommand commandId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.GetSubMenuAtInt32">
            <summary>设置 IMenuModel.GetSubMenuAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.GetSubMenuCefMenuCommand">
            <summary>设置 IMenuModel.GetSubMenu(CefMenuCommand commandId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.GetTypeAtInt32">
            <summary>设置 IMenuModel.GetTypeAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.GetTypeCefMenuCommand">
            <summary>设置 IMenuModel.GetType(CefMenuCommand commandId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.HasAcceleratorAtInt32">
            <summary>设置 IMenuModel.HasAcceleratorAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.HasAcceleratorCefMenuCommand">
            <summary>设置 IMenuModel.HasAccelerator(CefMenuCommand commandId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.InsertCheckItemAtInt32CefMenuCommandString">
            <summary>设置 IMenuModel.InsertCheckItemAt(Int32 index, CefMenuCommand commandId, String label) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.InsertItemAtInt32CefMenuCommandString">
            <summary>设置 IMenuModel.InsertItemAt(Int32 index, CefMenuCommand commandId, String label) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.InsertRadioItemAtInt32CefMenuCommandStringInt32">
            <summary>设置 IMenuModel.InsertRadioItemAt(Int32 index, CefMenuCommand commandId, String label, Int32 groupId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.InsertSeparatorAtInt32">
            <summary>设置 IMenuModel.InsertSeparatorAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.InsertSubMenuAtInt32CefMenuCommandString">
            <summary>设置 IMenuModel.InsertSubMenuAt(Int32 index, CefMenuCommand commandId, String label) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.IsCheckedAtInt32">
            <summary>设置 IMenuModel.IsCheckedAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.IsCheckedCefMenuCommand">
            <summary>设置 IMenuModel.IsChecked(CefMenuCommand commandId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.IsEnabledAtInt32">
            <summary>设置 IMenuModel.IsEnabledAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.IsEnabledCefMenuCommand">
            <summary>设置 IMenuModel.IsEnabled(CefMenuCommand commandId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.IsVisibleAtInt32">
            <summary>设置 IMenuModel.IsVisibleAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.IsVisibleCefMenuCommand">
            <summary>设置 IMenuModel.IsVisible(CefMenuCommand commandId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.RemoveAcceleratorAtInt32">
            <summary>设置 IMenuModel.RemoveAcceleratorAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.RemoveAcceleratorCefMenuCommand">
            <summary>设置 IMenuModel.RemoveAccelerator(CefMenuCommand commandId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.RemoveAtInt32">
            <summary>设置 IMenuModel.RemoveAt(Int32 index) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.RemoveCefMenuCommand">
            <summary>设置 IMenuModel.Remove(CefMenuCommand commandId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.SetAcceleratorAtInt32Int32BooleanBooleanBoolean">
            <summary>设置 IMenuModel.SetAcceleratorAt(Int32 index, Int32 keyCode, Boolean shiftPressed, Boolean ctrlPressed, Boolean altPressed) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.SetAcceleratorCefMenuCommandInt32BooleanBooleanBoolean">
            <summary>设置 IMenuModel.SetAccelerator(CefMenuCommand commandId, Int32 keyCode, Boolean shiftPressed, Boolean ctrlPressed, Boolean altPressed) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.SetCheckedAtInt32Boolean">
            <summary>设置 IMenuModel.SetCheckedAt(Int32 index, Boolean isChecked) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.SetCheckedCefMenuCommandBoolean">
            <summary>设置 IMenuModel.SetChecked(CefMenuCommand commandId, Boolean isChecked) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.SetCommandIdAtInt32CefMenuCommand">
            <summary>设置 IMenuModel.SetCommandIdAt(Int32 index, CefMenuCommand commandId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.SetEnabledAtInt32Boolean">
            <summary>设置 IMenuModel.SetEnabledAt(Int32 index, Boolean enabled) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.SetEnabledCefMenuCommandBoolean">
            <summary>设置 IMenuModel.SetEnabled(CefMenuCommand commandId, Boolean enabled) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.SetGroupIdAtInt32Int32">
            <summary>设置 IMenuModel.SetGroupIdAt(Int32 index, Int32 groupId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.SetGroupIdCefMenuCommandInt32">
            <summary>设置 IMenuModel.SetGroupId(CefMenuCommand commandId, Int32 groupId) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.SetLabelAtInt32String">
            <summary>设置 IMenuModel.SetLabelAt(Int32 index, String label) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.SetLabelCefMenuCommandString">
            <summary>设置 IMenuModel.SetLabel(CefMenuCommand commandId, String label) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.SetVisibleAtInt32Boolean">
            <summary>设置 IMenuModel.SetVisibleAt(Int32 index, Boolean visible) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIMenuModel.SetVisibleCefMenuCommandBoolean">
            <summary>设置 IMenuModel.SetVisible(CefMenuCommand commandId, Boolean visible) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubINavigationEntryVisitor">
            <summary>CefSharp.INavigationEntryVisitor 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubINavigationEntryVisitor.#ctor">
            <summary>初始化 type StubINavigationEntryVisitor 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubINavigationEntryVisitor.CefSharp#INavigationEntryVisitor#Visit(CefSharp.NavigationEntry,System.Boolean,System.Int32,System.Int32)">
            <summary>设置 INavigationEntryVisitor.Visit(NavigationEntry entry, Boolean current, Int32 index, Int32 total) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubINavigationEntryVisitor.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubINavigationEntryVisitor.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubINavigationEntryVisitor.VisitNavigationEntryBooleanInt32Int32">
            <summary>设置 INavigationEntryVisitor.Visit(NavigationEntry entry, Boolean current, Int32 index, Int32 total) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIPopupFeatures">
            <summary>CefSharp.IPopupFeatures 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPopupFeatures.#ctor">
            <summary>初始化 type StubIPopupFeatures 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPopupFeatures.CefSharp#IPopupFeatures#Height">
            <summary>设置 IPopupFeatures.get_Height() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPopupFeatures.HeightGet">
            <summary>设置 IPopupFeatures.get_Height() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPopupFeatures.CefSharp#IPopupFeatures#HeightSet">
            <summary>设置 IPopupFeatures.get_HeightSet() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPopupFeatures.HeightSetGet">
            <summary>设置 IPopupFeatures.get_HeightSet() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPopupFeatures.CefSharp#IPopupFeatures#MenuBarVisible">
            <summary>设置 IPopupFeatures.get_MenuBarVisible() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPopupFeatures.MenuBarVisibleGet">
            <summary>设置 IPopupFeatures.get_MenuBarVisible() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPopupFeatures.CefSharp#IPopupFeatures#ScrollbarsVisible">
            <summary>设置 IPopupFeatures.get_ScrollbarsVisible() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPopupFeatures.ScrollbarsVisibleGet">
            <summary>设置 IPopupFeatures.get_ScrollbarsVisible() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPopupFeatures.CefSharp#IPopupFeatures#StatusBarVisible">
            <summary>设置 IPopupFeatures.get_StatusBarVisible() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPopupFeatures.StatusBarVisibleGet">
            <summary>设置 IPopupFeatures.get_StatusBarVisible() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPopupFeatures.CefSharp#IPopupFeatures#ToolBarVisible">
            <summary>设置 IPopupFeatures.get_ToolBarVisible() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPopupFeatures.ToolBarVisibleGet">
            <summary>设置 IPopupFeatures.get_ToolBarVisible() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPopupFeatures.CefSharp#IPopupFeatures#Width">
            <summary>设置 IPopupFeatures.get_Width() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPopupFeatures.WidthGet">
            <summary>设置 IPopupFeatures.get_Width() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPopupFeatures.CefSharp#IPopupFeatures#WidthSet">
            <summary>设置 IPopupFeatures.get_WidthSet() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPopupFeatures.WidthSetGet">
            <summary>设置 IPopupFeatures.get_WidthSet() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPopupFeatures.CefSharp#IPopupFeatures#X">
            <summary>设置 IPopupFeatures.get_X() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPopupFeatures.XGet">
            <summary>设置 IPopupFeatures.get_X() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPopupFeatures.CefSharp#IPopupFeatures#XSet">
            <summary>设置 IPopupFeatures.get_XSet() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPopupFeatures.XSetGet">
            <summary>设置 IPopupFeatures.get_XSet() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPopupFeatures.CefSharp#IPopupFeatures#Y">
            <summary>设置 IPopupFeatures.get_Y() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPopupFeatures.YGet">
            <summary>设置 IPopupFeatures.get_Y() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPopupFeatures.CefSharp#IPopupFeatures#YSet">
            <summary>设置 IPopupFeatures.get_YSet() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPopupFeatures.YSetGet">
            <summary>设置 IPopupFeatures.get_YSet() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIPostData">
            <summary>CefSharp.IPostData 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPostData.#ctor">
            <summary>初始化 type StubIPostData 的新实例</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostData.AddElementIPostDataElement">
            <summary>设置 IPostData.AddElement(IPostDataElement element) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPostData.CefSharp#IPostData#AddElement(CefSharp.IPostDataElement)">
            <summary>设置 IPostData.AddElement(IPostDataElement element) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPostData.CefSharp#IPostData#CreatePostDataElement">
            <summary>设置 IPostData.CreatePostDataElement() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPostData.CefSharp#IPostData#RemoveElement(CefSharp.IPostDataElement)">
            <summary>设置 IPostData.RemoveElement(IPostDataElement element) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPostData.CefSharp#IPostData#RemoveElements">
            <summary>设置 IPostData.RemoveElements() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostData.CreatePostDataElement">
            <summary>设置 IPostData.CreatePostDataElement() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostData.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPostData.CefSharp#IPostData#Elements">
            <summary>设置 IPostData.get_Elements() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostData.ElementsGet">
            <summary>设置 IPostData.get_Elements() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPostData.CefSharp#IPostData#HasExcludedElements">
            <summary>设置 IPostData.get_HasExcludedElements() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostData.HasExcludedElementsGet">
            <summary>设置 IPostData.get_HasExcludedElements() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPostData.CefSharp#IPostData#IsDisposed">
            <summary>设置 IPostData.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostData.IsDisposedGet">
            <summary>设置 IPostData.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPostData.CefSharp#IPostData#IsReadOnly">
            <summary>设置 IPostData.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostData.IsReadOnlyGet">
            <summary>设置 IPostData.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostData.RemoveElementIPostDataElement">
            <summary>设置 IPostData.RemoveElement(IPostDataElement element) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostData.RemoveElements">
            <summary>设置 IPostData.RemoveElements() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPostData.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIPostDataElement">
            <summary>CefSharp.IPostDataElement 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPostDataElement.#ctor">
            <summary>初始化 type StubIPostDataElement 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPostDataElement.AttachBackingFieldToBytes">
            <summary>附加委托以将 StubIPostDataElement.Bytes 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPostDataElement.AttachBackingFieldToFile">
            <summary>附加委托以将 StubIPostDataElement.File 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPostDataElement.CefSharp#IPostDataElement#Bytes">
            <summary>设置 IPostDataElement.get_Bytes() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostDataElement.BytesGet">
            <summary>设置 IPostDataElement.get_Bytes() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostDataElement.BytesSetByteArray">
            <summary>设置 IPostDataElement.set_Bytes(Byte[] value) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPostDataElement.CefSharp#IPostDataElement#SetToEmpty">
            <summary>设置 IPostDataElement.SetToEmpty() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostDataElement.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPostDataElement.CefSharp#IPostDataElement#File">
            <summary>设置 IPostDataElement.get_File() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostDataElement.FileGet">
            <summary>设置 IPostDataElement.get_File() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostDataElement.FileSetString">
            <summary>设置 IPostDataElement.set_File(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPostDataElement.CefSharp#IPostDataElement#IsReadOnly">
            <summary>设置 IPostDataElement.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostDataElement.IsReadOnlyGet">
            <summary>设置 IPostDataElement.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostDataElement.SetToEmpty">
            <summary>设置 IPostDataElement.SetToEmpty() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPostDataElement.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPostDataElement.CefSharp#IPostDataElement#Type">
            <summary>设置 IPostDataElement.get_Type() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPostDataElement.TypeGet">
            <summary>设置 IPostDataElement.get_Type() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIPrintToPdfCallback">
            <summary>CefSharp.IPrintToPdfCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPrintToPdfCallback.#ctor">
            <summary>初始化 type StubIPrintToPdfCallback 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPrintToPdfCallback.CefSharp#IPrintToPdfCallback#OnPdfPrintFinished(System.String,System.Boolean)">
            <summary>设置 IPrintToPdfCallback.OnPdfPrintFinished(String path, Boolean ok) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPrintToPdfCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIPrintToPdfCallback.CefSharp#IPrintToPdfCallback#IsDisposed">
            <summary>设置 IPrintToPdfCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPrintToPdfCallback.IsDisposedGet">
            <summary>设置 IPrintToPdfCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIPrintToPdfCallback.OnPdfPrintFinishedStringBoolean">
            <summary>设置 IPrintToPdfCallback.OnPdfPrintFinished(String path, Boolean ok) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIPrintToPdfCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIRegisterCdmCallback">
            <summary>CefSharp.IRegisterCdmCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRegisterCdmCallback.#ctor">
            <summary>初始化 type StubIRegisterCdmCallback 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRegisterCdmCallback.CefSharp#IRegisterCdmCallback#OnRegistrationComplete(CefSharp.CdmRegistration)">
            <summary>设置 IRegisterCdmCallback.OnRegistrationComplete(CdmRegistration registration) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRegisterCdmCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRegisterCdmCallback.CefSharp#IRegisterCdmCallback#IsDisposed">
            <summary>设置 IRegisterCdmCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRegisterCdmCallback.IsDisposedGet">
            <summary>设置 IRegisterCdmCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRegisterCdmCallback.OnRegistrationCompleteCdmRegistration">
            <summary>设置 IRegisterCdmCallback.OnRegistrationComplete(CdmRegistration registration) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRegisterCdmCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIRenderProcessMessageHandler">
            <summary>CefSharp.IRenderProcessMessageHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRenderProcessMessageHandler.#ctor">
            <summary>初始化 type StubIRenderProcessMessageHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRenderProcessMessageHandler.CefSharp#IRenderProcessMessageHandler#OnContextCreated(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame)">
            <summary>设置 IRenderProcessMessageHandler.OnContextCreated(IWebBrowser browserControl, IBrowser browser, IFrame frame) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRenderProcessMessageHandler.CefSharp#IRenderProcessMessageHandler#OnContextReleased(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame)">
            <summary>设置 IRenderProcessMessageHandler.OnContextReleased(IWebBrowser browserControl, IBrowser browser, IFrame frame) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRenderProcessMessageHandler.CefSharp#IRenderProcessMessageHandler#OnFocusedNodeChanged(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IDomNode)">
            <summary>设置 IRenderProcessMessageHandler.OnFocusedNodeChanged(IWebBrowser browserControl, IBrowser browser, IFrame frame, IDomNode node) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRenderProcessMessageHandler.CefSharp#IRenderProcessMessageHandler#OnUncaughtException(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.JavascriptException)">
            <summary>设置 IRenderProcessMessageHandler.OnUncaughtException(IWebBrowser browserControl, IBrowser browser, IFrame frame, JavascriptException exception) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRenderProcessMessageHandler.OnContextCreatedIWebBrowserIBrowserIFrame">
            <summary>设置 IRenderProcessMessageHandler.OnContextCreated(IWebBrowser browserControl, IBrowser browser, IFrame frame) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRenderProcessMessageHandler.OnContextReleasedIWebBrowserIBrowserIFrame">
            <summary>设置 IRenderProcessMessageHandler.OnContextReleased(IWebBrowser browserControl, IBrowser browser, IFrame frame) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRenderProcessMessageHandler.OnFocusedNodeChangedIWebBrowserIBrowserIFrameIDomNode">
            <summary>设置 IRenderProcessMessageHandler.OnFocusedNodeChanged(IWebBrowser browserControl, IBrowser browser, IFrame frame, IDomNode node) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRenderProcessMessageHandler.OnUncaughtExceptionIWebBrowserIBrowserIFrameJavascriptException">
            <summary>设置 IRenderProcessMessageHandler.OnUncaughtException(IWebBrowser browserControl, IBrowser browser, IFrame frame, JavascriptException exception) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIRequest">
            <summary>CefSharp.IRequest 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequest.#ctor">
            <summary>初始化 type StubIRequest 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequest.AttachBackingFieldToFlags">
            <summary>附加委托以将 StubIRequest.Flags 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequest.AttachBackingFieldToHeaders">
            <summary>附加委托以将 StubIRequest.Headers 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequest.AttachBackingFieldToMethod">
            <summary>附加委托以将 StubIRequest.Method 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequest.AttachBackingFieldToUrl">
            <summary>附加委托以将 StubIRequest.Url 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequest.CefSharp#IRequest#InitializePostData">
            <summary>设置 IRequest.InitializePostData() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequest.CefSharp#IRequest#SetReferrer(System.String,CefSharp.ReferrerPolicy)">
            <summary>设置 IRequest.SetReferrer(String referrerUrl, ReferrerPolicy policy) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequest.CefSharp#IRequest#Flags">
            <summary>设置 IRequest.get_Flags() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.FlagsGet">
            <summary>设置 IRequest.get_Flags() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.FlagsSetUrlRequestFlags">
            <summary>设置 IRequest.set_Flags(UrlRequestFlags value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequest.CefSharp#IRequest#Headers">
            <summary>设置 IRequest.get_Headers() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.HeadersGet">
            <summary>设置 IRequest.get_Headers() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.HeadersSetNameValueCollection">
            <summary>设置 IRequest.set_Headers(NameValueCollection value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequest.CefSharp#IRequest#Identifier">
            <summary>设置 IRequest.get_Identifier() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.IdentifierGet">
            <summary>设置 IRequest.get_Identifier() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.InitializePostData">
            <summary>设置 IRequest.InitializePostData() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequest.CefSharp#IRequest#IsDisposed">
            <summary>设置 IRequest.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.IsDisposedGet">
            <summary>设置 IRequest.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequest.CefSharp#IRequest#IsReadOnly">
            <summary>设置 IRequest.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.IsReadOnlyGet">
            <summary>设置 IRequest.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequest.CefSharp#IRequest#Method">
            <summary>设置 IRequest.get_Method() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.MethodGet">
            <summary>设置 IRequest.get_Method() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.MethodSetString">
            <summary>设置 IRequest.set_Method(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequest.CefSharp#IRequest#PostData">
            <summary>设置 IRequest.get_PostData() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.PostDataGet">
            <summary>设置 IRequest.get_PostData() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequest.CefSharp#IRequest#ReferrerPolicy">
            <summary>设置 IRequest.get_ReferrerPolicy() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.ReferrerPolicyGet">
            <summary>设置 IRequest.get_ReferrerPolicy() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequest.CefSharp#IRequest#ReferrerUrl">
            <summary>设置 IRequest.get_ReferrerUrl() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.ReferrerUrlGet">
            <summary>设置 IRequest.get_ReferrerUrl() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequest.CefSharp#IRequest#ResourceType">
            <summary>设置 IRequest.get_ResourceType() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.ResourceTypeGet">
            <summary>设置 IRequest.get_ResourceType() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.SetReferrerStringReferrerPolicy">
            <summary>设置 IRequest.SetReferrer(String referrerUrl, ReferrerPolicy policy) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequest.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequest.CefSharp#IRequest#TransitionType">
            <summary>设置 IRequest.get_TransitionType() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.TransitionTypeGet">
            <summary>设置 IRequest.get_TransitionType() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequest.CefSharp#IRequest#Url">
            <summary>设置 IRequest.get_Url() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.UrlGet">
            <summary>设置 IRequest.get_Url() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequest.UrlSetString">
            <summary>设置 IRequest.set_Url(String value) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIRequestCallback">
            <summary>CefSharp.IRequestCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestCallback.#ctor">
            <summary>初始化 type StubIRequestCallback 的新实例</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestCallback.Cancel">
            <summary>设置 IRequestCallback.Cancel() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestCallback.CefSharp#IRequestCallback#Cancel">
            <summary>设置 IRequestCallback.Cancel() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestCallback.CefSharp#IRequestCallback#Continue(System.Boolean)">
            <summary>设置 IRequestCallback.Continue(Boolean allow) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestCallback.ContinueBoolean">
            <summary>设置 IRequestCallback.Continue(Boolean allow) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequestCallback.CefSharp#IRequestCallback#IsDisposed">
            <summary>设置 IRequestCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestCallback.IsDisposedGet">
            <summary>设置 IRequestCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIRequestContext">
            <summary>CefSharp.IRequestContext 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.#ctor">
            <summary>初始化 type StubIRequestContext 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#CachePath">
            <summary>设置 IRequestContext.get_CachePath() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.CachePathGet">
            <summary>设置 IRequestContext.get_CachePath() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.CanSetPreferenceString">
            <summary>设置 IRequestContext.CanSetPreference(String name) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#CanSetPreference(System.String)">
            <summary>设置 IRequestContext.CanSetPreference(String name) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#ClearCertificateExceptions(CefSharp.ICompletionCallback)">
            <summary>设置 IRequestContext.ClearCertificateExceptions(ICompletionCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#ClearSchemeHandlerFactories">
            <summary>设置 IRequestContext.ClearSchemeHandlerFactories() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#CloseAllConnections(CefSharp.ICompletionCallback)">
            <summary>设置 IRequestContext.CloseAllConnections(ICompletionCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#GetAllPreferences(System.Boolean)">
            <summary>设置 IRequestContext.GetAllPreferences(Boolean includeDefaults) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#GetDefaultCookieManager(CefSharp.ICompletionCallback)">
            <summary>设置 IRequestContext.GetDefaultCookieManager(ICompletionCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#GetPreference(System.String)">
            <summary>设置 IRequestContext.GetPreference(String name) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#HasPreference(System.String)">
            <summary>设置 IRequestContext.HasPreference(String name) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#IsSame(CefSharp.IRequestContext)">
            <summary>设置 IRequestContext.IsSame(IRequestContext context) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#IsSharingWith(CefSharp.IRequestContext)">
            <summary>设置 IRequestContext.IsSharingWith(IRequestContext context) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#PurgePluginListCache(System.Boolean)">
            <summary>设置 IRequestContext.PurgePluginListCache(Boolean reloadPages) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#RegisterSchemeHandlerFactory(System.String,System.String,CefSharp.ISchemeHandlerFactory)">
            <summary>设置 IRequestContext.RegisterSchemeHandlerFactory(String schemeName, String domainName, ISchemeHandlerFactory factory) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#ResolveHostAsync(System.Uri)">
            <summary>设置 IRequestContext.ResolveHostAsync(Uri origin) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#ResolveHostCached(System.Uri,System.Collections.Generic.IList{System.String}@)">
            <summary>设置 IRequestContext.ResolveHostCached(Uri origin, IList`1&lt;String&gt;&amp; resolvedIpAddresses) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#SetPreference(System.String,System.Object,System.String@)">
            <summary>设置 IRequestContext.SetPreference(String name, Object value, String&amp; error) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.ClearCertificateExceptionsICompletionCallback">
            <summary>设置 IRequestContext.ClearCertificateExceptions(ICompletionCallback callback) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.ClearSchemeHandlerFactories">
            <summary>设置 IRequestContext.ClearSchemeHandlerFactories() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.CloseAllConnectionsICompletionCallback">
            <summary>设置 IRequestContext.CloseAllConnections(ICompletionCallback callback) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.GetAllPreferencesBoolean">
            <summary>设置 IRequestContext.GetAllPreferences(Boolean includeDefaults) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.GetDefaultCookieManagerICompletionCallback">
            <summary>设置 IRequestContext.GetDefaultCookieManager(ICompletionCallback callback) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.GetPreferenceString">
            <summary>设置 IRequestContext.GetPreference(String name) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.HasPreferenceString">
            <summary>设置 IRequestContext.HasPreference(String name) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRequestContext.CefSharp#IRequestContext#IsGlobal">
            <summary>设置 IRequestContext.get_IsGlobal() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.IsGlobalGet">
            <summary>设置 IRequestContext.get_IsGlobal() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.IsSameIRequestContext">
            <summary>设置 IRequestContext.IsSame(IRequestContext context) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.IsSharingWithIRequestContext">
            <summary>设置 IRequestContext.IsSharingWith(IRequestContext context) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.PurgePluginListCacheBoolean">
            <summary>设置 IRequestContext.PurgePluginListCache(Boolean reloadPages) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.RegisterSchemeHandlerFactoryStringStringISchemeHandlerFactory">
            <summary>设置 IRequestContext.RegisterSchemeHandlerFactory(String schemeName, String domainName, ISchemeHandlerFactory factory) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.ResolveHostAsyncUri">
            <summary>设置 IRequestContext.ResolveHostAsync(Uri origin) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.ResolveHostCachedUriIListOfStringOut">
            <summary>设置 IRequestContext.ResolveHostCached(Uri origin, IList`1&lt;String&gt;&amp; resolvedIpAddresses) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContext.SetPreferenceStringObjectStringOut">
            <summary>设置 IRequestContext.SetPreference(String name, Object value, String&amp; error) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContext.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIRequestContextHandler">
            <summary>CefSharp.IRequestContextHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContextHandler.#ctor">
            <summary>初始化 type StubIRequestContextHandler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContextHandler.CefSharp#IRequestContextHandler#GetCookieManager">
            <summary>设置 IRequestContextHandler.GetCookieManager() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContextHandler.CefSharp#IRequestContextHandler#OnBeforePluginLoad(System.String,System.String,System.Boolean,System.String,CefSharp.WebPluginInfo,CefSharp.PluginPolicy@)">
            <summary>设置 IRequestContextHandler.OnBeforePluginLoad(String mimeType, String url, Boolean isMainFrame, String topOriginUrl, WebPluginInfo pluginInfo, PluginPolicy&amp; pluginPolicy) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestContextHandler.CefSharp#IRequestContextHandler#OnRequestContextInitialized(CefSharp.IRequestContext)">
            <summary>设置 IRequestContextHandler.OnRequestContextInitialized(IRequestContext requestContext) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContextHandler.GetCookieManager">
            <summary>设置 IRequestContextHandler.GetCookieManager() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContextHandler.OnBeforePluginLoadStringStringBooleanStringWebPluginInfoPluginPolicyRef">
            <summary>设置 IRequestContextHandler.OnBeforePluginLoad(String mimeType, String url, Boolean isMainFrame, String topOriginUrl, WebPluginInfo pluginInfo, PluginPolicy&amp; pluginPolicy) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestContextHandler.OnRequestContextInitializedIRequestContext">
            <summary>设置 IRequestContextHandler.OnRequestContextInitialized(IRequestContext requestContext) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIRequestHandler">
            <summary>CefSharp.IRequestHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.#ctor">
            <summary>初始化 type StubIRequestHandler 的新实例</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.CanGetCookiesIWebBrowserIBrowserIFrameIRequest">
            <summary>设置 IRequestHandler.CanGetCookies(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.CanSetCookieIWebBrowserIBrowserIFrameIRequestCookie">
            <summary>设置 IRequestHandler.CanSetCookie(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request, Cookie cookie) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#CanGetCookies(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
            <summary>设置 IRequestHandler.CanGetCookies(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#CanSetCookie(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.Cookie)">
            <summary>设置 IRequestHandler.CanSetCookie(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request, Cookie cookie) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#GetAuthCredentials(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.Boolean,System.String,System.Int32,System.String,System.String,CefSharp.IAuthCallback)">
            <summary>设置 IRequestHandler.GetAuthCredentials(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, Boolean isProxy, String host, Int32 port, String realm, String scheme, IAuthCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#GetResourceResponseFilter(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse)">
            <summary>设置 IRequestHandler.GetResourceResponseFilter(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request, IResponse response) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#OnBeforeBrowse(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean)">
            <summary>设置 IRequestHandler.OnBeforeBrowse(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request, Boolean userGesture, Boolean isRedirect) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#OnBeforeResourceLoad(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IRequestCallback)">
            <summary>设置 IRequestHandler.OnBeforeResourceLoad(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request, IRequestCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#OnCertificateError(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefErrorCode,System.String,CefSharp.ISslInfo,CefSharp.IRequestCallback)">
            <summary>设置 IRequestHandler.OnCertificateError(IWebBrowser chromiumWebBrowser, IBrowser browser, CefErrorCode errorCode, String requestUrl, ISslInfo sslInfo, IRequestCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#OnOpenUrlFromTab(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.String,CefSharp.WindowOpenDisposition,System.Boolean)">
            <summary>设置 IRequestHandler.OnOpenUrlFromTab(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, String targetUrl, WindowOpenDisposition targetDisposition, Boolean userGesture) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#OnPluginCrashed(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String)">
            <summary>设置 IRequestHandler.OnPluginCrashed(IWebBrowser chromiumWebBrowser, IBrowser browser, String pluginPath) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#OnProtocolExecution(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String)">
            <summary>设置 IRequestHandler.OnProtocolExecution(IWebBrowser chromiumWebBrowser, IBrowser browser, String url) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#OnQuotaRequest(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Int64,CefSharp.IRequestCallback)">
            <summary>设置 IRequestHandler.OnQuotaRequest(IWebBrowser chromiumWebBrowser, IBrowser browser, String originUrl, Int64 newSize, IRequestCallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#OnRenderProcessTerminated(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefTerminationStatus)">
            <summary>设置 IRequestHandler.OnRenderProcessTerminated(IWebBrowser chromiumWebBrowser, IBrowser browser, CefTerminationStatus status) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#OnRenderViewReady(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>设置 IRequestHandler.OnRenderViewReady(IWebBrowser chromiumWebBrowser, IBrowser browser) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#OnResourceLoadComplete(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse,CefSharp.UrlRequestStatus,System.Int64)">
            <summary>设置 IRequestHandler.OnResourceLoadComplete(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request, IResponse response, UrlRequestStatus status, Int64 receivedContentLength) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#OnResourceRedirect(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse,System.String@)">
            <summary>设置 IRequestHandler.OnResourceRedirect(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request, IResponse response, String&amp; newUrl) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#OnResourceResponse(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse)">
            <summary>设置 IRequestHandler.OnResourceResponse(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request, IResponse response) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRequestHandler.CefSharp#IRequestHandler#OnSelectClientCertificate(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Boolean,System.String,System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,CefSharp.ISelectClientCertificateCallback)">
            <summary>设置 IRequestHandler.OnSelectClientCertificate(IWebBrowser chromiumWebBrowser, IBrowser browser, Boolean isProxy, String host, Int32 port, X509Certificate2Collection certificates, ISelectClientCertificateCallback callback) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.GetAuthCredentialsIWebBrowserIBrowserIFrameBooleanStringInt32StringStringIAuthCallback">
            <summary>设置 IRequestHandler.GetAuthCredentials(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, Boolean isProxy, String host, Int32 port, String realm, String scheme, IAuthCallback callback) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.GetResourceResponseFilterIWebBrowserIBrowserIFrameIRequestIResponse">
            <summary>设置 IRequestHandler.GetResourceResponseFilter(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request, IResponse response) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.OnBeforeBrowseIWebBrowserIBrowserIFrameIRequestBooleanBoolean">
            <summary>设置 IRequestHandler.OnBeforeBrowse(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request, Boolean userGesture, Boolean isRedirect) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.OnBeforeResourceLoadIWebBrowserIBrowserIFrameIRequestIRequestCallback">
            <summary>设置 IRequestHandler.OnBeforeResourceLoad(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request, IRequestCallback callback) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.OnCertificateErrorIWebBrowserIBrowserCefErrorCodeStringISslInfoIRequestCallback">
            <summary>设置 IRequestHandler.OnCertificateError(IWebBrowser chromiumWebBrowser, IBrowser browser, CefErrorCode errorCode, String requestUrl, ISslInfo sslInfo, IRequestCallback callback) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.OnOpenUrlFromTabIWebBrowserIBrowserIFrameStringWindowOpenDispositionBoolean">
            <summary>设置 IRequestHandler.OnOpenUrlFromTab(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, String targetUrl, WindowOpenDisposition targetDisposition, Boolean userGesture) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.OnPluginCrashedIWebBrowserIBrowserString">
            <summary>设置 IRequestHandler.OnPluginCrashed(IWebBrowser chromiumWebBrowser, IBrowser browser, String pluginPath) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.OnProtocolExecutionIWebBrowserIBrowserString">
            <summary>设置 IRequestHandler.OnProtocolExecution(IWebBrowser chromiumWebBrowser, IBrowser browser, String url) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.OnQuotaRequestIWebBrowserIBrowserStringInt64IRequestCallback">
            <summary>设置 IRequestHandler.OnQuotaRequest(IWebBrowser chromiumWebBrowser, IBrowser browser, String originUrl, Int64 newSize, IRequestCallback callback) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.OnRenderProcessTerminatedIWebBrowserIBrowserCefTerminationStatus">
            <summary>设置 IRequestHandler.OnRenderProcessTerminated(IWebBrowser chromiumWebBrowser, IBrowser browser, CefTerminationStatus status) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.OnRenderViewReadyIWebBrowserIBrowser">
            <summary>设置 IRequestHandler.OnRenderViewReady(IWebBrowser chromiumWebBrowser, IBrowser browser) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.OnResourceLoadCompleteIWebBrowserIBrowserIFrameIRequestIResponseUrlRequestStatusInt64">
            <summary>设置 IRequestHandler.OnResourceLoadComplete(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request, IResponse response, UrlRequestStatus status, Int64 receivedContentLength) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.OnResourceRedirectIWebBrowserIBrowserIFrameIRequestIResponseStringRef">
            <summary>设置 IRequestHandler.OnResourceRedirect(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request, IResponse response, String&amp; newUrl) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.OnResourceResponseIWebBrowserIBrowserIFrameIRequestIResponse">
            <summary>设置 IRequestHandler.OnResourceResponse(IWebBrowser chromiumWebBrowser, IBrowser browser, IFrame frame, IRequest request, IResponse response) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRequestHandler.OnSelectClientCertificateIWebBrowserIBrowserBooleanStringInt32X509Certificate2CollectionISelectClientCertificateCallback">
            <summary>设置 IRequestHandler.OnSelectClientCertificate(IWebBrowser chromiumWebBrowser, IBrowser browser, Boolean isProxy, String host, Int32 port, X509Certificate2Collection certificates, ISelectClientCertificateCallback callback) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIResolveCallback">
            <summary>CefSharp.IResolveCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResolveCallback.#ctor">
            <summary>初始化 type StubIResolveCallback 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResolveCallback.CefSharp#IResolveCallback#OnResolveCompleted(CefSharp.CefErrorCode,System.Collections.Generic.IList{System.String})">
            <summary>设置 IResolveCallback.OnResolveCompleted(CefErrorCode result, IList`1&lt;String&gt; resolvedIpAddresses) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResolveCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIResolveCallback.CefSharp#IResolveCallback#IsDisposed">
            <summary>设置 IResolveCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResolveCallback.IsDisposedGet">
            <summary>设置 IResolveCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResolveCallback.OnResolveCompletedCefErrorCodeIListOfString">
            <summary>设置 IResolveCallback.OnResolveCompleted(CefErrorCode result, IList`1&lt;String&gt; resolvedIpAddresses) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResolveCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIResourceHandler">
            <summary>CefSharp.IResourceHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResourceHandler.#ctor">
            <summary>初始化 type StubIResourceHandler 的新实例</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResourceHandler.CanGetCookieCookie">
            <summary>设置 IResourceHandler.CanGetCookie(Cookie cookie) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResourceHandler.CanSetCookieCookie">
            <summary>设置 IResourceHandler.CanSetCookie(Cookie cookie) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResourceHandler.Cancel">
            <summary>设置 IResourceHandler.Cancel() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResourceHandler.CefSharp#IResourceHandler#CanGetCookie(CefSharp.Cookie)">
            <summary>设置 IResourceHandler.CanGetCookie(Cookie cookie) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResourceHandler.CefSharp#IResourceHandler#CanSetCookie(CefSharp.Cookie)">
            <summary>设置 IResourceHandler.CanSetCookie(Cookie cookie) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResourceHandler.CefSharp#IResourceHandler#Cancel">
            <summary>设置 IResourceHandler.Cancel() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResourceHandler.CefSharp#IResourceHandler#GetResponseHeaders(CefSharp.IResponse,System.Int64@,System.String@)">
            <summary>设置 IResourceHandler.GetResponseHeaders(IResponse response, Int64&amp; responseLength, String&amp; redirectUrl) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResourceHandler.CefSharp#IResourceHandler#ProcessRequest(CefSharp.IRequest,CefSharp.ICallback)">
            <summary>设置 IResourceHandler.ProcessRequest(IRequest request, ICallback callback) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResourceHandler.CefSharp#IResourceHandler#ReadResponse(System.IO.Stream,System.Int32@,CefSharp.ICallback)">
            <summary>设置 IResourceHandler.ReadResponse(Stream dataOut, Int32&amp; bytesRead, ICallback callback) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResourceHandler.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResourceHandler.GetResponseHeadersIResponseInt64OutStringOut">
            <summary>设置 IResourceHandler.GetResponseHeaders(IResponse response, Int64&amp; responseLength, String&amp; redirectUrl) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResourceHandler.ProcessRequestIRequestICallback">
            <summary>设置 IResourceHandler.ProcessRequest(IRequest request, ICallback callback) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResourceHandler.ReadResponseStreamInt32OutICallback">
            <summary>设置 IResourceHandler.ReadResponse(Stream dataOut, Int32&amp; bytesRead, ICallback callback) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResourceHandler.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIResourceHandlerFactory">
            <summary>CefSharp.IResourceHandlerFactory 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResourceHandlerFactory.#ctor">
            <summary>初始化 type StubIResourceHandlerFactory 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResourceHandlerFactory.CefSharp#IResourceHandlerFactory#GetResourceHandler(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
            <summary>设置 IResourceHandlerFactory.GetResourceHandler(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResourceHandlerFactory.GetResourceHandlerIWebBrowserIBrowserIFrameIRequest">
            <summary>设置 IResourceHandlerFactory.GetResourceHandler(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIResourceHandlerFactory.CefSharp#IResourceHandlerFactory#HasHandlers">
            <summary>设置 IResourceHandlerFactory.get_HasHandlers() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResourceHandlerFactory.HasHandlersGet">
            <summary>设置 IResourceHandlerFactory.get_HasHandlers() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIResponse">
            <summary>CefSharp.IResponse 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResponse.#ctor">
            <summary>初始化 type StubIResponse 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResponse.AttachBackingFieldToErrorCode">
            <summary>附加委托以将 StubIResponse.ErrorCode 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResponse.AttachBackingFieldToMimeType">
            <summary>附加委托以将 StubIResponse.MimeType 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResponse.AttachBackingFieldToResponseHeaders">
            <summary>附加委托以将 StubIResponse.ResponseHeaders 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResponse.AttachBackingFieldToStatusCode">
            <summary>附加委托以将 StubIResponse.StatusCode 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResponse.AttachBackingFieldToStatusText">
            <summary>附加委托以将 StubIResponse.StatusText 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponse.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIResponse.CefSharp#IResponse#ErrorCode">
            <summary>设置 IResponse.get_ErrorCode() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponse.ErrorCodeGet">
            <summary>设置 IResponse.get_ErrorCode() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponse.ErrorCodeSetCefErrorCode">
            <summary>设置 IResponse.set_ErrorCode(CefErrorCode value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIResponse.CefSharp#IResponse#IsReadOnly">
            <summary>设置 IResponse.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponse.IsReadOnlyGet">
            <summary>设置 IResponse.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIResponse.CefSharp#IResponse#MimeType">
            <summary>设置 IResponse.get_MimeType() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponse.MimeTypeGet">
            <summary>设置 IResponse.get_MimeType() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponse.MimeTypeSetString">
            <summary>设置 IResponse.set_MimeType(String value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIResponse.CefSharp#IResponse#ResponseHeaders">
            <summary>设置 IResponse.get_ResponseHeaders() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponse.ResponseHeadersGet">
            <summary>设置 IResponse.get_ResponseHeaders() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponse.ResponseHeadersSetNameValueCollection">
            <summary>设置 IResponse.set_ResponseHeaders(NameValueCollection value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIResponse.CefSharp#IResponse#StatusCode">
            <summary>设置 IResponse.get_StatusCode() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponse.StatusCodeGet">
            <summary>设置 IResponse.get_StatusCode() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponse.StatusCodeSetInt32">
            <summary>设置 IResponse.set_StatusCode(Int32 value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIResponse.CefSharp#IResponse#StatusText">
            <summary>设置 IResponse.get_StatusText() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponse.StatusTextGet">
            <summary>设置 IResponse.get_StatusText() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponse.StatusTextSetString">
            <summary>设置 IResponse.set_StatusText(String value) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResponse.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIResponseFilter">
            <summary>CefSharp.IResponseFilter 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResponseFilter.#ctor">
            <summary>初始化 type StubIResponseFilter 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResponseFilter.CefSharp#IResponseFilter#Filter(System.IO.Stream,System.Int64@,System.IO.Stream,System.Int64@)">
            <summary>设置 IResponseFilter.Filter(Stream dataIn, Int64&amp; dataInRead, Stream dataOut, Int64&amp; dataOutWritten) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResponseFilter.CefSharp#IResponseFilter#InitFilter">
            <summary>设置 IResponseFilter.InitFilter() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponseFilter.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponseFilter.FilterStreamInt64OutStreamInt64Out">
            <summary>设置 IResponseFilter.Filter(Stream dataIn, Int64&amp; dataInRead, Stream dataOut, Int64&amp; dataOutWritten) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIResponseFilter.InitFilter">
            <summary>设置 IResponseFilter.InitFilter() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIResponseFilter.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIRunContextMenuCallback">
            <summary>CefSharp.IRunContextMenuCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRunContextMenuCallback.#ctor">
            <summary>初始化 type StubIRunContextMenuCallback 的新实例</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRunContextMenuCallback.Cancel">
            <summary>设置 IRunContextMenuCallback.Cancel() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRunContextMenuCallback.CefSharp#IRunContextMenuCallback#Cancel">
            <summary>设置 IRunContextMenuCallback.Cancel() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRunContextMenuCallback.CefSharp#IRunContextMenuCallback#Continue(CefSharp.CefMenuCommand,CefSharp.CefEventFlags)">
            <summary>设置 IRunContextMenuCallback.Continue(CefMenuCommand commandId, CefEventFlags eventFlags) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRunContextMenuCallback.ContinueCefMenuCommandCefEventFlags">
            <summary>设置 IRunContextMenuCallback.Continue(CefMenuCommand commandId, CefEventFlags eventFlags) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRunContextMenuCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIRunContextMenuCallback.CefSharp#IRunContextMenuCallback#IsDisposed">
            <summary>设置 IRunContextMenuCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIRunContextMenuCallback.IsDisposedGet">
            <summary>设置 IRunContextMenuCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIRunContextMenuCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubISchemeHandlerFactory">
            <summary>CefSharp.ISchemeHandlerFactory 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubISchemeHandlerFactory.#ctor">
            <summary>初始化 type StubISchemeHandlerFactory 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubISchemeHandlerFactory.CefSharp#ISchemeHandlerFactory#Create(CefSharp.IBrowser,CefSharp.IFrame,System.String,CefSharp.IRequest)">
            <summary>设置 ISchemeHandlerFactory.Create(IBrowser browser, IFrame frame, String schemeName, IRequest request) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubISchemeHandlerFactory.CreateIBrowserIFrameStringIRequest">
            <summary>设置 ISchemeHandlerFactory.Create(IBrowser browser, IFrame frame, String schemeName, IRequest request) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubISelectClientCertificateCallback">
            <summary>CefSharp.ISelectClientCertificateCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubISelectClientCertificateCallback.#ctor">
            <summary>初始化 type StubISelectClientCertificateCallback 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubISelectClientCertificateCallback.CefSharp#ISelectClientCertificateCallback#Select(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>设置 ISelectClientCertificateCallback.Select(X509Certificate2 selectedCert) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubISelectClientCertificateCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubISelectClientCertificateCallback.CefSharp#ISelectClientCertificateCallback#IsDisposed">
            <summary>设置 ISelectClientCertificateCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubISelectClientCertificateCallback.IsDisposedGet">
            <summary>设置 ISelectClientCertificateCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubISelectClientCertificateCallback.SelectX509Certificate2">
            <summary>设置 ISelectClientCertificateCallback.Select(X509Certificate2 selectedCert) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubISelectClientCertificateCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubISetCookieCallback">
            <summary>CefSharp.ISetCookieCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubISetCookieCallback.#ctor">
            <summary>初始化 type StubISetCookieCallback 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubISetCookieCallback.CefSharp#ISetCookieCallback#OnComplete(System.Boolean)">
            <summary>设置 ISetCookieCallback.OnComplete(Boolean success) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubISetCookieCallback.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubISetCookieCallback.CefSharp#ISetCookieCallback#IsDisposed">
            <summary>设置 ISetCookieCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubISetCookieCallback.IsDisposedGet">
            <summary>设置 ISetCookieCallback.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubISetCookieCallback.OnCompleteBoolean">
            <summary>设置 ISetCookieCallback.OnComplete(Boolean success) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubISetCookieCallback.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubISslInfo">
            <summary>CefSharp.ISslInfo 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubISslInfo.#ctor">
            <summary>初始化 type StubISslInfo 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubISslInfo.CefSharp#ISslInfo#CertStatus">
            <summary>设置 ISslInfo.get_CertStatus() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubISslInfo.CertStatusGet">
            <summary>设置 ISslInfo.get_CertStatus() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubISslInfo.CefSharp#ISslInfo#X509Certificate">
            <summary>设置 ISslInfo.get_X509Certificate() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubISslInfo.X509CertificateGet">
            <summary>设置 ISslInfo.get_X509Certificate() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIStringVisitor">
            <summary>CefSharp.IStringVisitor 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIStringVisitor.#ctor">
            <summary>初始化 type StubIStringVisitor 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIStringVisitor.CefSharp#IStringVisitor#Visit(System.String)">
            <summary>设置 IStringVisitor.Visit(String str) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIStringVisitor.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIStringVisitor.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIStringVisitor.VisitString">
            <summary>设置 IStringVisitor.Visit(String str) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIValue">
            <summary>CefSharp.IValue 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIValue.#ctor">
            <summary>初始化 type StubIValue 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIValue.CefSharp#IValue#GetBool">
            <summary>设置 IValue.GetBool() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIValue.CefSharp#IValue#GetDictionary">
            <summary>设置 IValue.GetDictionary() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIValue.CefSharp#IValue#GetDouble">
            <summary>设置 IValue.GetDouble() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIValue.CefSharp#IValue#GetInt">
            <summary>设置 IValue.GetInt() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIValue.CefSharp#IValue#GetList">
            <summary>设置 IValue.GetList() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIValue.CefSharp#IValue#GetObject">
            <summary>设置 IValue.GetObject() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIValue.CefSharp#IValue#GetString">
            <summary>设置 IValue.GetString() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIValue.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIValue.GetBool">
            <summary>设置 IValue.GetBool() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIValue.GetDictionary">
            <summary>设置 IValue.GetDictionary() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIValue.GetDouble">
            <summary>设置 IValue.GetDouble() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIValue.GetInt">
            <summary>设置 IValue.GetInt() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIValue.GetList">
            <summary>设置 IValue.GetList() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIValue.GetObject">
            <summary>设置 IValue.GetObject() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIValue.GetString">
            <summary>设置 IValue.GetString() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIValue.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIValue.CefSharp#IValue#Type">
            <summary>设置 IValue.get_Type() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIValue.TypeGet">
            <summary>设置 IValue.get_Type() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIWebBrowser">
            <summary>CefSharp.IWebBrowser 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.#ctor">
            <summary>初始化 type StubIWebBrowser 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#Address">
            <summary>设置 IWebBrowser.get_Address() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.AddressGet">
            <summary>设置 IWebBrowser.get_Address() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.AttachBackingFieldToDialogHandler">
            <summary>附加委托以将 StubIWebBrowser.DialogHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.AttachBackingFieldToDisplayHandler">
            <summary>附加委托以将 StubIWebBrowser.DisplayHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.AttachBackingFieldToDownloadHandler">
            <summary>附加委托以将 StubIWebBrowser.DownloadHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.AttachBackingFieldToDragHandler">
            <summary>附加委托以将 StubIWebBrowser.DragHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.AttachBackingFieldToFindHandler">
            <summary>附加委托以将 StubIWebBrowser.FindHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.AttachBackingFieldToFocusHandler">
            <summary>附加委托以将 StubIWebBrowser.FocusHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.AttachBackingFieldToJsDialogHandler">
            <summary>附加委托以将 StubIWebBrowser.JsDialogHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.AttachBackingFieldToKeyboardHandler">
            <summary>附加委托以将 StubIWebBrowser.KeyboardHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.AttachBackingFieldToLifeSpanHandler">
            <summary>附加委托以将 StubIWebBrowser.LifeSpanHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.AttachBackingFieldToLoadHandler">
            <summary>附加委托以将 StubIWebBrowser.LoadHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.AttachBackingFieldToMenuHandler">
            <summary>附加委托以将 StubIWebBrowser.MenuHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.AttachBackingFieldToRenderProcessMessageHandler">
            <summary>附加委托以将 StubIWebBrowser.RenderProcessMessageHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.AttachBackingFieldToRequestHandler">
            <summary>附加委托以将 StubIWebBrowser.RequestHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.AttachBackingFieldToResourceHandlerFactory">
            <summary>附加委托以将 StubIWebBrowser.ResourceHandlerFactory 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#CanExecuteJavascriptInMainFrame">
            <summary>设置 IWebBrowser.get_CanExecuteJavascriptInMainFrame() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.CanExecuteJavascriptInMainFrameGet">
            <summary>设置 IWebBrowser.get_CanExecuteJavascriptInMainFrame() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#CanGoBack">
            <summary>设置 IWebBrowser.get_CanGoBack() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.CanGoBackGet">
            <summary>设置 IWebBrowser.get_CanGoBack() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#CanGoForward">
            <summary>设置 IWebBrowser.get_CanGoForward() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.CanGoForwardGet">
            <summary>设置 IWebBrowser.get_CanGoForward() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#Focus">
            <summary>设置 IWebBrowser.Focus() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#GetBrowser">
            <summary>设置 IWebBrowser.GetBrowser() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#Load(System.String)">
            <summary>设置 IWebBrowser.Load(String url) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#RegisterAsyncJsObject(System.String,System.Object,CefSharp.BindingOptions)">
            <summary>设置 IWebBrowser.RegisterAsyncJsObject(String name, Object objectToBind, BindingOptions options) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#RegisterJsObject(System.String,System.Object,CefSharp.BindingOptions)">
            <summary>设置 IWebBrowser.RegisterJsObject(String name, Object objectToBind, BindingOptions options) 的 存根</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#DialogHandler">
            <summary>设置 IWebBrowser.get_DialogHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.DialogHandlerGet">
            <summary>设置 IWebBrowser.get_DialogHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.DialogHandlerSetIDialogHandler">
            <summary>设置 IWebBrowser.set_DialogHandler(IDialogHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#DisplayHandler">
            <summary>设置 IWebBrowser.get_DisplayHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.DisplayHandlerGet">
            <summary>设置 IWebBrowser.get_DisplayHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.DisplayHandlerSetIDisplayHandler">
            <summary>设置 IWebBrowser.set_DisplayHandler(IDisplayHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#DownloadHandler">
            <summary>设置 IWebBrowser.get_DownloadHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.DownloadHandlerGet">
            <summary>设置 IWebBrowser.get_DownloadHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.DownloadHandlerSetIDownloadHandler">
            <summary>设置 IWebBrowser.set_DownloadHandler(IDownloadHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#DragHandler">
            <summary>设置 IWebBrowser.get_DragHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.DragHandlerGet">
            <summary>设置 IWebBrowser.get_DragHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.DragHandlerSetIDragHandler">
            <summary>设置 IWebBrowser.set_DragHandler(IDragHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#FindHandler">
            <summary>设置 IWebBrowser.get_FindHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.FindHandlerGet">
            <summary>设置 IWebBrowser.get_FindHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.FindHandlerSetIFindHandler">
            <summary>设置 IWebBrowser.set_FindHandler(IFindHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.Focus">
            <summary>设置 IWebBrowser.Focus() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#FocusHandler">
            <summary>设置 IWebBrowser.get_FocusHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.FocusHandlerGet">
            <summary>设置 IWebBrowser.get_FocusHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.FocusHandlerSetIFocusHandler">
            <summary>设置 IWebBrowser.set_FocusHandler(IFocusHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.GetBrowser">
            <summary>设置 IWebBrowser.GetBrowser() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#IsBrowserInitialized">
            <summary>设置 IWebBrowser.get_IsBrowserInitialized() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.IsBrowserInitializedGet">
            <summary>设置 IWebBrowser.get_IsBrowserInitialized() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#IsLoading">
            <summary>设置 IWebBrowser.get_IsLoading() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.IsLoadingGet">
            <summary>设置 IWebBrowser.get_IsLoading() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#JavascriptObjectRepository">
            <summary>设置 IWebBrowser.get_JavascriptObjectRepository() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.JavascriptObjectRepositoryGet">
            <summary>设置 IWebBrowser.get_JavascriptObjectRepository() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#JsDialogHandler">
            <summary>设置 IWebBrowser.get_JsDialogHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.JsDialogHandlerGet">
            <summary>设置 IWebBrowser.get_JsDialogHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.JsDialogHandlerSetIJsDialogHandler">
            <summary>设置 IWebBrowser.set_JsDialogHandler(IJsDialogHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#KeyboardHandler">
            <summary>设置 IWebBrowser.get_KeyboardHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.KeyboardHandlerGet">
            <summary>设置 IWebBrowser.get_KeyboardHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.KeyboardHandlerSetIKeyboardHandler">
            <summary>设置 IWebBrowser.set_KeyboardHandler(IKeyboardHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#LifeSpanHandler">
            <summary>设置 IWebBrowser.get_LifeSpanHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.LifeSpanHandlerGet">
            <summary>设置 IWebBrowser.get_LifeSpanHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.LifeSpanHandlerSetILifeSpanHandler">
            <summary>设置 IWebBrowser.set_LifeSpanHandler(ILifeSpanHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#LoadHandler">
            <summary>设置 IWebBrowser.get_LoadHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.LoadHandlerGet">
            <summary>设置 IWebBrowser.get_LoadHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.LoadHandlerSetILoadHandler">
            <summary>设置 IWebBrowser.set_LoadHandler(ILoadHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.LoadString">
            <summary>设置 IWebBrowser.Load(String url) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#MenuHandler">
            <summary>设置 IWebBrowser.get_MenuHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.MenuHandlerGet">
            <summary>设置 IWebBrowser.get_MenuHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.MenuHandlerSetIContextMenuHandler">
            <summary>设置 IWebBrowser.set_MenuHandler(IContextMenuHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.RegisterAsyncJsObjectStringObjectBindingOptions">
            <summary>设置 IWebBrowser.RegisterAsyncJsObject(String name, Object objectToBind, BindingOptions options) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.RegisterJsObjectStringObjectBindingOptions">
            <summary>设置 IWebBrowser.RegisterJsObject(String name, Object objectToBind, BindingOptions options) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#RenderProcessMessageHandler">
            <summary>设置 IWebBrowser.get_RenderProcessMessageHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.RenderProcessMessageHandlerGet">
            <summary>设置 IWebBrowser.get_RenderProcessMessageHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.RenderProcessMessageHandlerSetIRenderProcessMessageHandler">
            <summary>设置 IWebBrowser.set_RenderProcessMessageHandler(IRenderProcessMessageHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#RequestContext">
            <summary>设置 IWebBrowser.get_RequestContext() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.RequestContextGet">
            <summary>设置 IWebBrowser.get_RequestContext() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#RequestHandler">
            <summary>设置 IWebBrowser.get_RequestHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.RequestHandlerGet">
            <summary>设置 IWebBrowser.get_RequestHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.RequestHandlerSetIRequestHandler">
            <summary>设置 IWebBrowser.set_RequestHandler(IRequestHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#ResourceHandlerFactory">
            <summary>设置 IWebBrowser.get_ResourceHandlerFactory() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.ResourceHandlerFactoryGet">
            <summary>设置 IWebBrowser.get_ResourceHandlerFactory() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.ResourceHandlerFactorySetIResourceHandlerFactory">
            <summary>设置 IWebBrowser.set_ResourceHandlerFactory(IResourceHandlerFactory value) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebBrowser.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWebBrowser.CefSharp#IWebBrowser#TooltipText">
            <summary>设置 IWebBrowser.get_TooltipText() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebBrowser.TooltipTextGet">
            <summary>设置 IWebBrowser.get_TooltipText() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIWebPluginInfoVisitor">
            <summary>CefSharp.IWebPluginInfoVisitor 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebPluginInfoVisitor.#ctor">
            <summary>初始化 type StubIWebPluginInfoVisitor 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebPluginInfoVisitor.CefSharp#IWebPluginInfoVisitor#Visit(CefSharp.WebPluginInfo,System.Int32,System.Int32)">
            <summary>设置 IWebPluginInfoVisitor.Visit(WebPluginInfo plugin, Int32 count, Int32 total) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebPluginInfoVisitor.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWebPluginInfoVisitor.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWebPluginInfoVisitor.VisitWebPluginInfoInt32Int32">
            <summary>设置 IWebPluginInfoVisitor.Visit(WebPluginInfo plugin, Int32 count, Int32 total) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIWindowInfo">
            <summary>CefSharp.IWindowInfo 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWindowInfo.#ctor">
            <summary>初始化 type StubIWindowInfo 的新实例</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWindowInfo.AttachBackingFieldToExStyle">
            <summary>附加委托以将 StubIWindowInfo.ExStyle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWindowInfo.AttachBackingFieldToHeight">
            <summary>附加委托以将 StubIWindowInfo.Height 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWindowInfo.AttachBackingFieldToParentWindowHandle">
            <summary>附加委托以将 StubIWindowInfo.ParentWindowHandle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWindowInfo.AttachBackingFieldToStyle">
            <summary>附加委托以将 StubIWindowInfo.Style 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWindowInfo.AttachBackingFieldToWidth">
            <summary>附加委托以将 StubIWindowInfo.Width 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWindowInfo.AttachBackingFieldToWindowHandle">
            <summary>附加委托以将 StubIWindowInfo.WindowHandle 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWindowInfo.AttachBackingFieldToWindowlessRenderingEnabled">
            <summary>附加委托以将 StubIWindowInfo.WindowlessRenderingEnabled 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWindowInfo.AttachBackingFieldToX">
            <summary>附加委托以将 StubIWindowInfo.X 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWindowInfo.AttachBackingFieldToY">
            <summary>附加委托以将 StubIWindowInfo.Y 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWindowInfo.CefSharp#IWindowInfo#SetAsChild(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>设置 IWindowInfo.SetAsChild(IntPtr parentHandle, Int32 left, Int32 top, Int32 right, Int32 bottom) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWindowInfo.CefSharp#IWindowInfo#SetAsPopup(System.IntPtr,System.String)">
            <summary>设置 IWindowInfo.SetAsPopup(IntPtr parentHandle, String windowName) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWindowInfo.CefSharp#IWindowInfo#SetAsWindowless(System.IntPtr)">
            <summary>设置 IWindowInfo.SetAsWindowless(IntPtr parentHandle) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWindowInfo.CefSharp#IWindowInfo#ExStyle">
            <summary>设置 IWindowInfo.get_ExStyle() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.ExStyleGet">
            <summary>设置 IWindowInfo.get_ExStyle() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.ExStyleSetUInt32">
            <summary>设置 IWindowInfo.set_ExStyle(UInt32 value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWindowInfo.CefSharp#IWindowInfo#Height">
            <summary>设置 IWindowInfo.get_Height() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.HeightGet">
            <summary>设置 IWindowInfo.get_Height() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.HeightSetInt32">
            <summary>设置 IWindowInfo.set_Height(Int32 value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWindowInfo.CefSharp#IWindowInfo#ParentWindowHandle">
            <summary>设置 IWindowInfo.get_ParentWindowHandle() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.ParentWindowHandleGet">
            <summary>设置 IWindowInfo.get_ParentWindowHandle() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.ParentWindowHandleSetIntPtr">
            <summary>设置 IWindowInfo.set_ParentWindowHandle(IntPtr value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.SetAsChildIntPtrInt32Int32Int32Int32">
            <summary>设置 IWindowInfo.SetAsChild(IntPtr parentHandle, Int32 left, Int32 top, Int32 right, Int32 bottom) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.SetAsPopupIntPtrString">
            <summary>设置 IWindowInfo.SetAsPopup(IntPtr parentHandle, String windowName) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.SetAsWindowlessIntPtr">
            <summary>设置 IWindowInfo.SetAsWindowless(IntPtr parentHandle) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWindowInfo.CefSharp#IWindowInfo#Style">
            <summary>设置 IWindowInfo.get_Style() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.StyleGet">
            <summary>设置 IWindowInfo.get_Style() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.StyleSetUInt32">
            <summary>设置 IWindowInfo.set_Style(UInt32 value) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIWindowInfo.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWindowInfo.CefSharp#IWindowInfo#Width">
            <summary>设置 IWindowInfo.get_Width() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.WidthGet">
            <summary>设置 IWindowInfo.get_Width() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.WidthSetInt32">
            <summary>设置 IWindowInfo.set_Width(Int32 value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWindowInfo.CefSharp#IWindowInfo#WindowHandle">
            <summary>设置 IWindowInfo.get_WindowHandle() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.WindowHandleGet">
            <summary>设置 IWindowInfo.get_WindowHandle() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.WindowHandleSetIntPtr">
            <summary>设置 IWindowInfo.set_WindowHandle(IntPtr value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWindowInfo.CefSharp#IWindowInfo#WindowlessRenderingEnabled">
            <summary>设置 IWindowInfo.get_WindowlessRenderingEnabled() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.WindowlessRenderingEnabledGet">
            <summary>设置 IWindowInfo.get_WindowlessRenderingEnabled() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.WindowlessRenderingEnabledSetBoolean">
            <summary>设置 IWindowInfo.set_WindowlessRenderingEnabled(Boolean value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWindowInfo.CefSharp#IWindowInfo#X">
            <summary>设置 IWindowInfo.get_X() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.XGet">
            <summary>设置 IWindowInfo.get_X() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.XSetInt32">
            <summary>设置 IWindowInfo.set_X(Int32 value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIWindowInfo.CefSharp#IWindowInfo#Y">
            <summary>设置 IWindowInfo.get_Y() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.YGet">
            <summary>设置 IWindowInfo.get_Y() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubIWindowInfo.YSetInt32">
            <summary>设置 IWindowInfo.set_Y(Int32 value) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubIsBrowserInitializedChangedEventArgs">
            <summary>CefSharp.IsBrowserInitializedChangedEventArgs 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIsBrowserInitializedChangedEventArgs.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIsBrowserInitializedChangedEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubIsBrowserInitializedChangedEventArgs.InitializeStub">
            <summary>初始化 type StubIsBrowserInitializedChangedEventArgs 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIsBrowserInitializedChangedEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubIsBrowserInitializedChangedEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubJavascriptException">
            <summary>CefSharp.JavascriptException 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubJavascriptException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubJavascriptException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubJavascriptException.InitializeStub">
            <summary>初始化 type StubJavascriptException 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubJavascriptException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubJavascriptException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubJavascriptIgnoreAttribute">
            <summary>CefSharp.JavascriptIgnoreAttribute 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubJavascriptIgnoreAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubJavascriptIgnoreAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubJavascriptIgnoreAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubJavascriptIgnoreAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubJavascriptIgnoreAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubJavascriptIgnoreAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubJavascriptIgnoreAttribute.InitializeStub">
            <summary>初始化 type StubJavascriptIgnoreAttribute 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubJavascriptIgnoreAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubJavascriptIgnoreAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubJavascriptIgnoreAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubJavascriptIgnoreAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubJavascriptIgnoreAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubJavascriptIgnoreAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubJavascriptIgnoreAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubJavascriptIgnoreAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubJavascriptResponse">
            <summary>CefSharp.JavascriptResponse 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubJavascriptResponse.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubJavascriptResponse.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubJavascriptResponse.InitializeStub">
            <summary>初始化 type StubJavascriptResponse 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubJavascriptResponse.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubJavascriptResponse.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubJavascriptStackFrame">
            <summary>CefSharp.JavascriptStackFrame 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubJavascriptStackFrame.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubJavascriptStackFrame.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubJavascriptStackFrame.InitializeStub">
            <summary>初始化 type StubJavascriptStackFrame 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubJavascriptStackFrame.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubJavascriptStackFrame.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubLoadErrorEventArgs">
            <summary>CefSharp.LoadErrorEventArgs 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubLoadErrorEventArgs.#ctor(CefSharp.IBrowser,CefSharp.IFrame,CefSharp.CefErrorCode,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubLoadErrorEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubLoadErrorEventArgs.InitializeStub">
            <summary>初始化 type StubLoadErrorEventArgs 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubLoadErrorEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubLoadErrorEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubLoadingStateChangedEventArgs">
            <summary>CefSharp.LoadingStateChangedEventArgs 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubLoadingStateChangedEventArgs.#ctor(CefSharp.IBrowser,System.Boolean,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubLoadingStateChangedEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubLoadingStateChangedEventArgs.InitializeStub">
            <summary>初始化 type StubLoadingStateChangedEventArgs 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubLoadingStateChangedEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubLoadingStateChangedEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubProxyOptions">
            <summary>CefSharp.ProxyOptions 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubProxyOptions.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubProxyOptions.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubProxyOptions.InitializeStub">
            <summary>初始化 type StubProxyOptions 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubProxyOptions.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubProxyOptions.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubResourceHandler">
            <summary>CefSharp.ResourceHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubResourceHandler.#ctor(System.String,System.IO.Stream,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubResourceHandler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubResourceHandler.Cancel">
            <summary>设置 ResourceHandler.Cancel() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubResourceHandler.Cancel01">
            <summary>设置 ResourceHandler.Cancel() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubResourceHandler.Dispose">
            <summary>设置 ResourceHandler.Dispose() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubResourceHandler.Dispose01">
            <summary>设置 ResourceHandler.Dispose() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubResourceHandler.GetResponse(CefSharp.IResponse,System.Int64@,System.String@)">
            <summary>设置 ResourceHandler.GetResponse(IResponse response, Int64&amp; responseLength, String&amp; redirectUrl) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubResourceHandler.GetResponseIResponseInt64OutStringOut">
            <summary>设置 ResourceHandler.GetResponse(IResponse response, Int64&amp; responseLength, String&amp; redirectUrl) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubResourceHandler.InitializeStub">
            <summary>初始化 type StubResourceHandler 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubResourceHandler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubResourceHandler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubResourceHandler.ProcessRequestAsync(CefSharp.IRequest,CefSharp.ICallback)">
            <summary>设置 ResourceHandler.ProcessRequestAsync(IRequest request, ICallback callback) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Fakes.StubResourceHandler.ProcessRequestAsyncIRequestICallback">
            <summary>设置 ResourceHandler.ProcessRequestAsync(IRequest request, ICallback callback) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubStatusMessageEventArgs">
            <summary>CefSharp.StatusMessageEventArgs 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubStatusMessageEventArgs.#ctor(CefSharp.IBrowser,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubStatusMessageEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubStatusMessageEventArgs.InitializeStub">
            <summary>初始化 type StubStatusMessageEventArgs 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubStatusMessageEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubStatusMessageEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubTaskCompletionCallback">
            <summary>CefSharp.TaskCompletionCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskCompletionCallback.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskCompletionCallback.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskCompletionCallback.InitializeStub">
            <summary>初始化 type StubTaskCompletionCallback 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskCompletionCallback.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskCompletionCallback.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubTaskCookieVisitor">
            <summary>CefSharp.TaskCookieVisitor 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskCookieVisitor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskCookieVisitor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskCookieVisitor.InitializeStub">
            <summary>初始化 type StubTaskCookieVisitor 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskCookieVisitor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskCookieVisitor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubTaskDeleteCookiesCallback">
            <summary>CefSharp.TaskDeleteCookiesCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskDeleteCookiesCallback.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskDeleteCookiesCallback.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskDeleteCookiesCallback.InitializeStub">
            <summary>初始化 type StubTaskDeleteCookiesCallback 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskDeleteCookiesCallback.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskDeleteCookiesCallback.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubTaskNavigationEntryVisitor">
            <summary>CefSharp.TaskNavigationEntryVisitor 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskNavigationEntryVisitor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskNavigationEntryVisitor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskNavigationEntryVisitor.InitializeStub">
            <summary>初始化 type StubTaskNavigationEntryVisitor 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskNavigationEntryVisitor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskNavigationEntryVisitor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubTaskRegisterCdmCallback">
            <summary>CefSharp.TaskRegisterCdmCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskRegisterCdmCallback.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskRegisterCdmCallback.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskRegisterCdmCallback.InitializeStub">
            <summary>初始化 type StubTaskRegisterCdmCallback 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskRegisterCdmCallback.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskRegisterCdmCallback.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubTaskResolveCallback">
            <summary>CefSharp.TaskResolveCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskResolveCallback.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskResolveCallback.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskResolveCallback.InitializeStub">
            <summary>初始化 type StubTaskResolveCallback 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskResolveCallback.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskResolveCallback.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubTaskSetCookieCallback">
            <summary>CefSharp.TaskSetCookieCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskSetCookieCallback.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskSetCookieCallback.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskSetCookieCallback.InitializeStub">
            <summary>初始化 type StubTaskSetCookieCallback 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskSetCookieCallback.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskSetCookieCallback.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubTaskStringVisitor">
            <summary>CefSharp.TaskStringVisitor 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskStringVisitor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskStringVisitor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskStringVisitor.InitializeStub">
            <summary>初始化 type StubTaskStringVisitor 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskStringVisitor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskStringVisitor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubTaskWebPluginInfoVisitor">
            <summary>CefSharp.TaskWebPluginInfoVisitor 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskWebPluginInfoVisitor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskWebPluginInfoVisitor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTaskWebPluginInfoVisitor.InitializeStub">
            <summary>初始化 type StubTaskWebPluginInfoVisitor 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskWebPluginInfoVisitor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTaskWebPluginInfoVisitor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Fakes.StubTitleChangedEventArgs">
            <summary>CefSharp.TitleChangedEventArgs 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTitleChangedEventArgs.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTitleChangedEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Fakes.StubTitleChangedEventArgs.InitializeStub">
            <summary>初始化 type StubTitleChangedEventArgs 的新实例</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTitleChangedEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Fakes.StubTitleChangedEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Handler.Fakes.ShimDefaultRequestHandler">
            <summary>CefSharp.Handler.DefaultRequestHandler 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.#ctor(CefSharp.Handler.DefaultRequestHandler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.CanGetCookiesIWebBrowserIBrowserIFrameIRequest">
            <summary>设置 DefaultRequestHandler.CanGetCookies(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.CanSetCookieIWebBrowserIBrowserIFrameIRequestCookie">
            <summary>设置 DefaultRequestHandler.CanSetCookie(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.GetAuthCredentialsIWebBrowserIBrowserIFrameBooleanStringInt32StringStringIAuthCallback">
            <summary>设置 DefaultRequestHandler.GetAuthCredentials(IWebBrowser browserControl, IBrowser browser, IFrame frame, Boolean isProxy, String host, Int32 port, String realm, String scheme, IAuthCallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.GetResourceResponseFilterIWebBrowserIBrowserIFrameIRequestIResponse">
            <summary>设置 DefaultRequestHandler.GetResourceResponseFilter(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.OnBeforeBrowseIWebBrowserIBrowserIFrameIRequestBooleanBoolean">
            <summary>设置 DefaultRequestHandler.OnBeforeBrowse(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, Boolean userGesture, Boolean isRedirect) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.OnBeforeResourceLoadIWebBrowserIBrowserIFrameIRequestIRequestCallback">
            <summary>设置 DefaultRequestHandler.OnBeforeResourceLoad(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IRequestCallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.OnCertificateErrorIWebBrowserIBrowserCefErrorCodeStringISslInfoIRequestCallback">
            <summary>设置 DefaultRequestHandler.OnCertificateError(IWebBrowser browserControl, IBrowser browser, CefErrorCode errorCode, String requestUrl, ISslInfo sslInfo, IRequestCallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.OnOpenUrlFromTabIWebBrowserIBrowserIFrameStringWindowOpenDispositionBoolean">
            <summary>设置 DefaultRequestHandler.OnOpenUrlFromTab(IWebBrowser browserControl, IBrowser browser, IFrame frame, String targetUrl, WindowOpenDisposition targetDisposition, Boolean userGesture) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.OnPluginCrashedIWebBrowserIBrowserString">
            <summary>设置 DefaultRequestHandler.OnPluginCrashed(IWebBrowser browserControl, IBrowser browser, String pluginPath) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.OnProtocolExecutionIWebBrowserIBrowserString">
            <summary>设置 DefaultRequestHandler.OnProtocolExecution(IWebBrowser browserControl, IBrowser browser, String url) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.OnQuotaRequestIWebBrowserIBrowserStringInt64IRequestCallback">
            <summary>设置 DefaultRequestHandler.OnQuotaRequest(IWebBrowser browserControl, IBrowser browser, String originUrl, Int64 newSize, IRequestCallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.OnRenderProcessTerminatedIWebBrowserIBrowserCefTerminationStatus">
            <summary>设置 DefaultRequestHandler.OnRenderProcessTerminated(IWebBrowser browserControl, IBrowser browser, CefTerminationStatus status) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.OnRenderViewReadyIWebBrowserIBrowser">
            <summary>设置 DefaultRequestHandler.OnRenderViewReady(IWebBrowser browserControl, IBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.OnResourceLoadCompleteIWebBrowserIBrowserIFrameIRequestIResponseUrlRequestStatusInt64">
            <summary>设置 DefaultRequestHandler.OnResourceLoadComplete(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response, UrlRequestStatus status, Int64 receivedContentLength) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.OnResourceRedirectIWebBrowserIBrowserIFrameIRequestIResponseStringRef">
            <summary>设置 DefaultRequestHandler.OnResourceRedirect(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response, String&amp; newUrl) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.OnResourceResponseIWebBrowserIBrowserIFrameIRequestIResponse">
            <summary>设置 DefaultRequestHandler.OnResourceResponse(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.AllInstances.OnSelectClientCertificateIWebBrowserIBrowserBooleanStringInt32X509Certificate2CollectionISelectClientCertificateCallback">
            <summary>设置 DefaultRequestHandler.OnSelectClientCertificate(IWebBrowser browserControl, IBrowser browser, Boolean isProxy, String host, Int32 port, X509Certificate2Collection certificates, ISelectClientCertificateCallback callback) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.Bind(CefSharp.IRequestHandler)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.CanGetCookiesIWebBrowserIBrowserIFrameIRequest">
            <summary>设置 DefaultRequestHandler.CanGetCookies(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.CanSetCookieIWebBrowserIBrowserIFrameIRequestCookie">
            <summary>设置 DefaultRequestHandler.CanSetCookie(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, Cookie cookie) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.Constructor">
            <summary>设置 DefaultRequestHandler.DefaultRequestHandler() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.GetAuthCredentialsIWebBrowserIBrowserIFrameBooleanStringInt32StringStringIAuthCallback">
            <summary>设置 DefaultRequestHandler.GetAuthCredentials(IWebBrowser browserControl, IBrowser browser, IFrame frame, Boolean isProxy, String host, Int32 port, String realm, String scheme, IAuthCallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.GetResourceResponseFilterIWebBrowserIBrowserIFrameIRequestIResponse">
            <summary>设置 DefaultRequestHandler.GetResourceResponseFilter(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.OnBeforeBrowseIWebBrowserIBrowserIFrameIRequestBooleanBoolean">
            <summary>设置 DefaultRequestHandler.OnBeforeBrowse(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, Boolean userGesture, Boolean isRedirect) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.OnBeforeResourceLoadIWebBrowserIBrowserIFrameIRequestIRequestCallback">
            <summary>设置 DefaultRequestHandler.OnBeforeResourceLoad(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IRequestCallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.OnCertificateErrorIWebBrowserIBrowserCefErrorCodeStringISslInfoIRequestCallback">
            <summary>设置 DefaultRequestHandler.OnCertificateError(IWebBrowser browserControl, IBrowser browser, CefErrorCode errorCode, String requestUrl, ISslInfo sslInfo, IRequestCallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.OnOpenUrlFromTabIWebBrowserIBrowserIFrameStringWindowOpenDispositionBoolean">
            <summary>设置 DefaultRequestHandler.OnOpenUrlFromTab(IWebBrowser browserControl, IBrowser browser, IFrame frame, String targetUrl, WindowOpenDisposition targetDisposition, Boolean userGesture) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.OnPluginCrashedIWebBrowserIBrowserString">
            <summary>设置 DefaultRequestHandler.OnPluginCrashed(IWebBrowser browserControl, IBrowser browser, String pluginPath) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.OnProtocolExecutionIWebBrowserIBrowserString">
            <summary>设置 DefaultRequestHandler.OnProtocolExecution(IWebBrowser browserControl, IBrowser browser, String url) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.OnQuotaRequestIWebBrowserIBrowserStringInt64IRequestCallback">
            <summary>设置 DefaultRequestHandler.OnQuotaRequest(IWebBrowser browserControl, IBrowser browser, String originUrl, Int64 newSize, IRequestCallback callback) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.OnRenderProcessTerminatedIWebBrowserIBrowserCefTerminationStatus">
            <summary>设置 DefaultRequestHandler.OnRenderProcessTerminated(IWebBrowser browserControl, IBrowser browser, CefTerminationStatus status) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.OnRenderViewReadyIWebBrowserIBrowser">
            <summary>设置 DefaultRequestHandler.OnRenderViewReady(IWebBrowser browserControl, IBrowser browser) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.OnResourceLoadCompleteIWebBrowserIBrowserIFrameIRequestIResponseUrlRequestStatusInt64">
            <summary>设置 DefaultRequestHandler.OnResourceLoadComplete(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response, UrlRequestStatus status, Int64 receivedContentLength) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.OnResourceRedirectIWebBrowserIBrowserIFrameIRequestIResponseStringRef">
            <summary>设置 DefaultRequestHandler.OnResourceRedirect(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response, String&amp; newUrl) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.OnResourceResponseIWebBrowserIBrowserIFrameIRequestIResponse">
            <summary>设置 DefaultRequestHandler.OnResourceResponse(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.ShimDefaultRequestHandler.OnSelectClientCertificateIWebBrowserIBrowserBooleanStringInt32X509Certificate2CollectionISelectClientCertificateCallback">
            <summary>设置 DefaultRequestHandler.OnSelectClientCertificate(IWebBrowser browserControl, IBrowser browser, Boolean isProxy, String host, Int32 port, X509Certificate2Collection certificates, ISelectClientCertificateCallback callback) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Handler.Fakes.StubDefaultRequestHandler">
            <summary>CefSharp.Handler.DefaultRequestHandler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.StubDefaultRequestHandler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.CanGetCookies(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest)">
            <summary>设置 DefaultRequestHandler.CanGetCookies(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.CanGetCookiesIWebBrowserIBrowserIFrameIRequest">
            <summary>设置 DefaultRequestHandler.CanGetCookies(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.CanSetCookie(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.Cookie)">
            <summary>设置 DefaultRequestHandler.CanSetCookie(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, Cookie cookie) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.CanSetCookieIWebBrowserIBrowserIFrameIRequestCookie">
            <summary>设置 DefaultRequestHandler.CanSetCookie(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, Cookie cookie) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.GetAuthCredentials(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.Boolean,System.String,System.Int32,System.String,System.String,CefSharp.IAuthCallback)">
            <summary>设置 DefaultRequestHandler.GetAuthCredentials(IWebBrowser browserControl, IBrowser browser, IFrame frame, Boolean isProxy, String host, Int32 port, String realm, String scheme, IAuthCallback callback) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.GetAuthCredentialsIWebBrowserIBrowserIFrameBooleanStringInt32StringStringIAuthCallback">
            <summary>设置 DefaultRequestHandler.GetAuthCredentials(IWebBrowser browserControl, IBrowser browser, IFrame frame, Boolean isProxy, String host, Int32 port, String realm, String scheme, IAuthCallback callback) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.GetResourceResponseFilter(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse)">
            <summary>设置 DefaultRequestHandler.GetResourceResponseFilter(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.GetResourceResponseFilterIWebBrowserIBrowserIFrameIRequestIResponse">
            <summary>设置 DefaultRequestHandler.GetResourceResponseFilter(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.InitializeStub">
            <summary>初始化 type StubDefaultRequestHandler 的新实例</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.StubDefaultRequestHandler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Handler.Fakes.StubDefaultRequestHandler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnBeforeBrowse(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,System.Boolean,System.Boolean)">
            <summary>设置 DefaultRequestHandler.OnBeforeBrowse(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, Boolean userGesture, Boolean isRedirect) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnBeforeBrowseIWebBrowserIBrowserIFrameIRequestBooleanBoolean">
            <summary>设置 DefaultRequestHandler.OnBeforeBrowse(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, Boolean userGesture, Boolean isRedirect) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnBeforeResourceLoad(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IRequestCallback)">
            <summary>设置 DefaultRequestHandler.OnBeforeResourceLoad(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IRequestCallback callback) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnBeforeResourceLoadIWebBrowserIBrowserIFrameIRequestIRequestCallback">
            <summary>设置 DefaultRequestHandler.OnBeforeResourceLoad(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IRequestCallback callback) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnCertificateError(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefErrorCode,System.String,CefSharp.ISslInfo,CefSharp.IRequestCallback)">
            <summary>设置 DefaultRequestHandler.OnCertificateError(IWebBrowser browserControl, IBrowser browser, CefErrorCode errorCode, String requestUrl, ISslInfo sslInfo, IRequestCallback callback) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnCertificateErrorIWebBrowserIBrowserCefErrorCodeStringISslInfoIRequestCallback">
            <summary>设置 DefaultRequestHandler.OnCertificateError(IWebBrowser browserControl, IBrowser browser, CefErrorCode errorCode, String requestUrl, ISslInfo sslInfo, IRequestCallback callback) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnOpenUrlFromTab(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,System.String,CefSharp.WindowOpenDisposition,System.Boolean)">
            <summary>设置 DefaultRequestHandler.OnOpenUrlFromTab(IWebBrowser browserControl, IBrowser browser, IFrame frame, String targetUrl, WindowOpenDisposition targetDisposition, Boolean userGesture) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnOpenUrlFromTabIWebBrowserIBrowserIFrameStringWindowOpenDispositionBoolean">
            <summary>设置 DefaultRequestHandler.OnOpenUrlFromTab(IWebBrowser browserControl, IBrowser browser, IFrame frame, String targetUrl, WindowOpenDisposition targetDisposition, Boolean userGesture) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnPluginCrashed(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String)">
            <summary>设置 DefaultRequestHandler.OnPluginCrashed(IWebBrowser browserControl, IBrowser browser, String pluginPath) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnPluginCrashedIWebBrowserIBrowserString">
            <summary>设置 DefaultRequestHandler.OnPluginCrashed(IWebBrowser browserControl, IBrowser browser, String pluginPath) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnProtocolExecution(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String)">
            <summary>设置 DefaultRequestHandler.OnProtocolExecution(IWebBrowser browserControl, IBrowser browser, String url) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnProtocolExecutionIWebBrowserIBrowserString">
            <summary>设置 DefaultRequestHandler.OnProtocolExecution(IWebBrowser browserControl, IBrowser browser, String url) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnQuotaRequest(CefSharp.IWebBrowser,CefSharp.IBrowser,System.String,System.Int64,CefSharp.IRequestCallback)">
            <summary>设置 DefaultRequestHandler.OnQuotaRequest(IWebBrowser browserControl, IBrowser browser, String originUrl, Int64 newSize, IRequestCallback callback) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnQuotaRequestIWebBrowserIBrowserStringInt64IRequestCallback">
            <summary>设置 DefaultRequestHandler.OnQuotaRequest(IWebBrowser browserControl, IBrowser browser, String originUrl, Int64 newSize, IRequestCallback callback) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnRenderProcessTerminated(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.CefTerminationStatus)">
            <summary>设置 DefaultRequestHandler.OnRenderProcessTerminated(IWebBrowser browserControl, IBrowser browser, CefTerminationStatus status) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnRenderProcessTerminatedIWebBrowserIBrowserCefTerminationStatus">
            <summary>设置 DefaultRequestHandler.OnRenderProcessTerminated(IWebBrowser browserControl, IBrowser browser, CefTerminationStatus status) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnRenderViewReady(CefSharp.IWebBrowser,CefSharp.IBrowser)">
            <summary>设置 DefaultRequestHandler.OnRenderViewReady(IWebBrowser browserControl, IBrowser browser) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnRenderViewReadyIWebBrowserIBrowser">
            <summary>设置 DefaultRequestHandler.OnRenderViewReady(IWebBrowser browserControl, IBrowser browser) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnResourceLoadComplete(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse,CefSharp.UrlRequestStatus,System.Int64)">
            <summary>设置 DefaultRequestHandler.OnResourceLoadComplete(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response, UrlRequestStatus status, Int64 receivedContentLength) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnResourceLoadCompleteIWebBrowserIBrowserIFrameIRequestIResponseUrlRequestStatusInt64">
            <summary>设置 DefaultRequestHandler.OnResourceLoadComplete(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response, UrlRequestStatus status, Int64 receivedContentLength) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnResourceRedirect(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse,System.String@)">
            <summary>设置 DefaultRequestHandler.OnResourceRedirect(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response, String&amp; newUrl) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnResourceRedirectIWebBrowserIBrowserIFrameIRequestIResponseStringRef">
            <summary>设置 DefaultRequestHandler.OnResourceRedirect(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response, String&amp; newUrl) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnResourceResponse(CefSharp.IWebBrowser,CefSharp.IBrowser,CefSharp.IFrame,CefSharp.IRequest,CefSharp.IResponse)">
            <summary>设置 DefaultRequestHandler.OnResourceResponse(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnResourceResponseIWebBrowserIBrowserIFrameIRequestIResponse">
            <summary>设置 DefaultRequestHandler.OnResourceResponse(IWebBrowser browserControl, IBrowser browser, IFrame frame, IRequest request, IResponse response) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnSelectClientCertificate(CefSharp.IWebBrowser,CefSharp.IBrowser,System.Boolean,System.String,System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,CefSharp.ISelectClientCertificateCallback)">
            <summary>设置 DefaultRequestHandler.OnSelectClientCertificate(IWebBrowser browserControl, IBrowser browser, Boolean isProxy, String host, Int32 port, X509Certificate2Collection certificates, ISelectClientCertificateCallback callback) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Handler.Fakes.StubDefaultRequestHandler.OnSelectClientCertificateIWebBrowserIBrowserBooleanStringInt32X509Certificate2CollectionISelectClientCertificateCallback">
            <summary>设置 DefaultRequestHandler.OnSelectClientCertificate(IWebBrowser browserControl, IBrowser browser, Boolean isProxy, String host, Int32 port, X509Certificate2Collection certificates, ISelectClientCertificateCallback callback) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimBrowserProcessResponse">
            <summary>CefSharp.Internals.BrowserProcessResponse 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.#ctor(CefSharp.Internals.BrowserProcessResponse)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.AllInstances.MessageGet">
            <summary>设置 BrowserProcessResponse.get_Message() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.AllInstances.MessageSetString">
            <summary>设置 BrowserProcessResponse.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.AllInstances.ResultGet">
            <summary>设置 BrowserProcessResponse.get_Result() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.AllInstances.ResultSetObject">
            <summary>设置 BrowserProcessResponse.set_Result(Object value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.AllInstances.SuccessGet">
            <summary>设置 BrowserProcessResponse.get_Success() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.AllInstances.SuccessSetBoolean">
            <summary>设置 BrowserProcessResponse.set_Success(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.Constructor">
            <summary>设置 BrowserProcessResponse.BrowserProcessResponse() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.MessageGet">
            <summary>设置 BrowserProcessResponse.get_Message() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.MessageSetString">
            <summary>设置 BrowserProcessResponse.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.ResultGet">
            <summary>设置 BrowserProcessResponse.get_Result() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.ResultSetObject">
            <summary>设置 BrowserProcessResponse.set_Result(Object value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.SuccessGet">
            <summary>设置 BrowserProcessResponse.get_Success() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessResponse.SuccessSetBoolean">
            <summary>设置 BrowserProcessResponse.set_Success(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost">
            <summary>CefSharp.Internals.BrowserProcessServiceHost 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.#ctor(CefSharp.Internals.BrowserProcessServiceHost)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.AllInstances.JavascriptObjectRepositoryGet">
            <summary>设置 BrowserProcessServiceHost.get_JavascriptObjectRepository() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.AllInstances.JavascriptObjectRepositorySetJavascriptObjectRepository">
            <summary>设置 BrowserProcessServiceHost.set_JavascriptObjectRepository(JavascriptObjectRepository value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.AllInstances.OnClosed">
            <summary>设置 BrowserProcessServiceHost.OnClosed() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.Bind(System.ServiceModel.ICommunicationObject)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.Bind(System.ServiceModel.IExtensibleObject{System.ServiceModel.ServiceHostBase})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.ConstructorJavascriptObjectRepositoryInt32Int32IJavascriptCallbackFactory">
            <summary>设置 BrowserProcessServiceHost.BrowserProcessServiceHost(JavascriptObjectRepository javascriptObjectRepository, Int32 parentProcessId, Int32 browserId, IJavascriptCallbackFactory callbackFactory) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.CreateBinding">
            <summary>设置 BrowserProcessServiceHost.CreateBinding() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.JavascriptObjectRepositoryGet">
            <summary>设置 BrowserProcessServiceHost.get_JavascriptObjectRepository() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.JavascriptObjectRepositorySetJavascriptObjectRepository">
            <summary>设置 BrowserProcessServiceHost.set_JavascriptObjectRepository(JavascriptObjectRepository value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimBrowserProcessServiceHost.OnClosed">
            <summary>设置 BrowserProcessServiceHost.OnClosed() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimCefSharpArguments">
            <summary>CefSharp.Internals.CefSharpArguments 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimCefSharpArguments.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimCefSharpArguments.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimCefSharpArguments.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimCefSharpArguments.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimCefTimeUtils">
            <summary>CefSharp.Internals.CefTimeUtils 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimCefTimeUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimCefTimeUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimCefTimeUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimCefTimeUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimCefTimeUtils.ConvertCefTimeToDateTimeDouble">
            <summary>设置 CefTimeUtils.ConvertCefTimeToDateTime(Double epoch) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimCommandLineArgsParser">
            <summary>CefSharp.Internals.CommandLineArgsParser 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimCommandLineArgsParser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimCommandLineArgsParser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimCommandLineArgsParser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimCommandLineArgsParser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimCommandLineArgsParser.GetArgumentValueIEnumerableOfStringString">
            <summary>设置 CommandLineArgsParser.GetArgumentValue(IEnumerable`1&lt;String&gt; args, String argumentName) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimCommandLineArgsParser.HasArgumentIEnumerableOfStringString">
            <summary>设置 CommandLineArgsParser.HasArgument(IEnumerable`1&lt;String&gt; args, String arg) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimDateTimeUtils">
            <summary>CefSharp.Internals.DateTimeUtils 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimDateTimeUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimDateTimeUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimDateTimeUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimDateTimeUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimDateTimeUtils.FromCefTimeInt32Int32Int32Int32Int32Int32Int32">
            <summary>设置 DateTimeUtils.FromCefTime(Int32 year, Int32 month, Int32 day, Int32 hour, Int32 minute, Int32 second, Int32 millisecond) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimDateTimeUtils.StaticConstructor">
            <summary>设置 DateTimeUtils.DateTimeUtils() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimDateTimeUtils.ToCefTimeDateTime">
            <summary>设置 DateTimeUtils.ToCefTime(DateTime dateTime) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimJavascriptCallback">
            <summary>CefSharp.Internals.JavascriptCallback 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptCallback.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptCallback.#ctor(CefSharp.Internals.JavascriptCallback)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimJavascriptCallback.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptCallback.AllInstances.BrowserIdGet">
            <summary>设置 JavascriptCallback.get_BrowserId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptCallback.AllInstances.BrowserIdSetInt32">
            <summary>设置 JavascriptCallback.set_BrowserId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptCallback.AllInstances.FrameIdGet">
            <summary>设置 JavascriptCallback.get_FrameId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptCallback.AllInstances.FrameIdSetInt64">
            <summary>设置 JavascriptCallback.set_FrameId(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptCallback.AllInstances.IdGet">
            <summary>设置 JavascriptCallback.get_Id() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptCallback.AllInstances.IdSetInt64">
            <summary>设置 JavascriptCallback.set_Id(Int64 value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptCallback.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptCallback.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptCallback.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptCallback.BrowserIdGet">
            <summary>设置 JavascriptCallback.get_BrowserId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptCallback.BrowserIdSetInt32">
            <summary>设置 JavascriptCallback.set_BrowserId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptCallback.Constructor">
            <summary>设置 JavascriptCallback.JavascriptCallback() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptCallback.FrameIdGet">
            <summary>设置 JavascriptCallback.get_FrameId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptCallback.FrameIdSetInt64">
            <summary>设置 JavascriptCallback.set_FrameId(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptCallback.IdGet">
            <summary>设置 JavascriptCallback.get_Id() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptCallback.IdSetInt64">
            <summary>设置 JavascriptCallback.set_Id(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimJavascriptMethod">
            <summary>CefSharp.Internals.JavascriptMethod 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptMethod.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptMethod.#ctor(CefSharp.Internals.JavascriptMethod)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.FunctionGet">
            <summary>设置 JavascriptMethod.get_Function() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.FunctionSetFuncOfObjectObjectArrayObject">
            <summary>设置 JavascriptMethod.set_Function(Func`3&lt;Object,Object[],Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.HasParamArrayGet">
            <summary>设置 JavascriptMethod.get_HasParamArray() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.HasParamArraySetBoolean">
            <summary>设置 JavascriptMethod.set_HasParamArray(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.IdGet">
            <summary>设置 JavascriptMethod.get_Id() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.IdSetInt64">
            <summary>设置 JavascriptMethod.set_Id(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.JavascriptNameGet">
            <summary>设置 JavascriptMethod.get_JavascriptName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.JavascriptNameSetString">
            <summary>设置 JavascriptMethod.set_JavascriptName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.ManagedNameGet">
            <summary>设置 JavascriptMethod.get_ManagedName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.ManagedNameSetString">
            <summary>设置 JavascriptMethod.set_ManagedName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.ParameterCountGet">
            <summary>设置 JavascriptMethod.get_ParameterCount() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.ParameterCountSetInt32">
            <summary>设置 JavascriptMethod.set_ParameterCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.ParametersGet">
            <summary>设置 JavascriptMethod.get_Parameters() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.ParametersSetListOfMethodParameter">
            <summary>设置 JavascriptMethod.set_Parameters(List`1&lt;MethodParameter&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.AllInstances.ToString01">
            <summary>设置 JavascriptMethod.ToString() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptMethod.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptMethod.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.Constructor">
            <summary>设置 JavascriptMethod.JavascriptMethod() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.FunctionGet">
            <summary>设置 JavascriptMethod.get_Function() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.FunctionSetFuncOfObjectObjectArrayObject">
            <summary>设置 JavascriptMethod.set_Function(Func`3&lt;Object,Object[],Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.HasParamArrayGet">
            <summary>设置 JavascriptMethod.get_HasParamArray() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.HasParamArraySetBoolean">
            <summary>设置 JavascriptMethod.set_HasParamArray(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.IdGet">
            <summary>设置 JavascriptMethod.get_Id() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.IdSetInt64">
            <summary>设置 JavascriptMethod.set_Id(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.JavascriptNameGet">
            <summary>设置 JavascriptMethod.get_JavascriptName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.JavascriptNameSetString">
            <summary>设置 JavascriptMethod.set_JavascriptName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.ManagedNameGet">
            <summary>设置 JavascriptMethod.get_ManagedName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.ManagedNameSetString">
            <summary>设置 JavascriptMethod.set_ManagedName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.ParameterCountGet">
            <summary>设置 JavascriptMethod.get_ParameterCount() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.ParameterCountSetInt32">
            <summary>设置 JavascriptMethod.set_ParameterCount(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.ParametersGet">
            <summary>设置 JavascriptMethod.get_Parameters() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.ParametersSetListOfMethodParameter">
            <summary>设置 JavascriptMethod.set_Parameters(List`1&lt;MethodParameter&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptMethod.ToString">
            <summary>设置 JavascriptMethod.ToString() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimJavascriptObject">
            <summary>CefSharp.Internals.JavascriptObject 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptObject.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptObject.#ctor(CefSharp.Internals.JavascriptObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.BinderGet">
            <summary>设置 JavascriptObject.get_Binder() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.BinderSetIBinder">
            <summary>设置 JavascriptObject.set_Binder(IBinder value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.CamelCaseJavascriptNamesGet">
            <summary>设置 JavascriptObject.get_CamelCaseJavascriptNames() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.CamelCaseJavascriptNamesSetBoolean">
            <summary>设置 JavascriptObject.set_CamelCaseJavascriptNames(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.IdGet">
            <summary>设置 JavascriptObject.get_Id() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.IdSetInt64">
            <summary>设置 JavascriptObject.set_Id(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.IsAsyncGet">
            <summary>设置 JavascriptObject.get_IsAsync() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.IsAsyncSetBoolean">
            <summary>设置 JavascriptObject.set_IsAsync(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.JavascriptNameGet">
            <summary>设置 JavascriptObject.get_JavascriptName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.JavascriptNameSetString">
            <summary>设置 JavascriptObject.set_JavascriptName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.MethodInterceptorGet">
            <summary>设置 JavascriptObject.get_MethodInterceptor() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.MethodInterceptorSetIMethodInterceptor">
            <summary>设置 JavascriptObject.set_MethodInterceptor(IMethodInterceptor value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.MethodsGet">
            <summary>设置 JavascriptObject.get_Methods() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.MethodsSetListOfJavascriptMethod">
            <summary>设置 JavascriptObject.set_Methods(List`1&lt;JavascriptMethod&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.NameGet">
            <summary>设置 JavascriptObject.get_Name() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.NameSetString">
            <summary>设置 JavascriptObject.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.PropertiesGet">
            <summary>设置 JavascriptObject.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.PropertiesSetListOfJavascriptProperty">
            <summary>设置 JavascriptObject.set_Properties(List`1&lt;JavascriptProperty&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.ToString01">
            <summary>设置 JavascriptObject.ToString() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.ValueGet">
            <summary>设置 JavascriptObject.get_Value() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.AllInstances.ValueSetObject">
            <summary>设置 JavascriptObject.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.BinderGet">
            <summary>设置 JavascriptObject.get_Binder() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.BinderSetIBinder">
            <summary>设置 JavascriptObject.set_Binder(IBinder value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.CamelCaseJavascriptNamesGet">
            <summary>设置 JavascriptObject.get_CamelCaseJavascriptNames() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.CamelCaseJavascriptNamesSetBoolean">
            <summary>设置 JavascriptObject.set_CamelCaseJavascriptNames(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.Constructor">
            <summary>设置 JavascriptObject.JavascriptObject() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.IdGet">
            <summary>设置 JavascriptObject.get_Id() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.IdSetInt64">
            <summary>设置 JavascriptObject.set_Id(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.IsAsyncGet">
            <summary>设置 JavascriptObject.get_IsAsync() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.IsAsyncSetBoolean">
            <summary>设置 JavascriptObject.set_IsAsync(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.JavascriptNameGet">
            <summary>设置 JavascriptObject.get_JavascriptName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.JavascriptNameSetString">
            <summary>设置 JavascriptObject.set_JavascriptName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.MethodInterceptorGet">
            <summary>设置 JavascriptObject.get_MethodInterceptor() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.MethodInterceptorSetIMethodInterceptor">
            <summary>设置 JavascriptObject.set_MethodInterceptor(IMethodInterceptor value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.MethodsGet">
            <summary>设置 JavascriptObject.get_Methods() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.MethodsSetListOfJavascriptMethod">
            <summary>设置 JavascriptObject.set_Methods(List`1&lt;JavascriptMethod&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.NameGet">
            <summary>设置 JavascriptObject.get_Name() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.NameSetString">
            <summary>设置 JavascriptObject.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.PropertiesGet">
            <summary>设置 JavascriptObject.get_Properties() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.PropertiesSetListOfJavascriptProperty">
            <summary>设置 JavascriptObject.set_Properties(List`1&lt;JavascriptProperty&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.ToString">
            <summary>设置 JavascriptObject.ToString() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.ValueGet">
            <summary>设置 JavascriptObject.get_Value() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObject.ValueSetObject">
            <summary>设置 JavascriptObject.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository">
            <summary>CefSharp.Internals.JavascriptObjectRepository 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.#ctor(CefSharp.Internals.JavascriptObjectRepository)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.AnalyseObjectForBindingJavascriptObjectBooleanBooleanBooleanBoolean">
            <summary>设置 JavascriptObjectRepository.AnalyseObjectForBinding(JavascriptObject obj, Boolean analyseMethods, Boolean analyseProperties, Boolean readPropertyValue, Boolean camelCaseJavascriptNames) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.CreateJavascriptObjectBoolean">
            <summary>设置 JavascriptObjectRepository.CreateJavascriptObject(Boolean camelCaseJavascriptNames) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.Dispose">
            <summary>设置 JavascriptObjectRepository.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.GetObjectsListOfString">
            <summary>设置 JavascriptObjectRepository.GetObjects(List`1&lt;String&gt; names) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.HasBoundObjectsGet">
            <summary>设置 JavascriptObjectRepository.get_HasBoundObjects() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.IsBoundString">
            <summary>设置 JavascriptObjectRepository.IsBound(String name) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.IsBrowserInitializedGet">
            <summary>设置 JavascriptObjectRepository.get_IsBrowserInitialized() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.IsBrowserInitializedSetBoolean">
            <summary>设置 JavascriptObjectRepository.set_IsBrowserInitialized(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.ObjectBoundInJavascriptAddEventHandlerOfJavascriptBindingCompleteEventArgs">
            <summary>设置 JavascriptObjectRepository.add_ObjectBoundInJavascript(EventHandler`1&lt;JavascriptBindingCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.ObjectBoundInJavascriptRemoveEventHandlerOfJavascriptBindingCompleteEventArgs">
            <summary>设置 JavascriptObjectRepository.remove_ObjectBoundInJavascript(EventHandler`1&lt;JavascriptBindingCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.ObjectsBoundInJavascriptAddEventHandlerOfJavascriptBindingMultipleCompleteEventArgs">
            <summary>设置 JavascriptObjectRepository.add_ObjectsBoundInJavascript(EventHandler`1&lt;JavascriptBindingMultipleCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.ObjectsBoundInJavascriptRemoveEventHandlerOfJavascriptBindingMultipleCompleteEventArgs">
            <summary>设置 JavascriptObjectRepository.remove_ObjectsBoundInJavascript(EventHandler`1&lt;JavascriptBindingMultipleCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.ObjectsBoundListOfTupleOfStringBooleanBoolean">
            <summary>设置 JavascriptObjectRepository.ObjectsBound(List`1&lt;Tuple`3&lt;String,Boolean,Boolean&gt;&gt; objs) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.RaiseResolveObjectEventString">
            <summary>设置 JavascriptObjectRepository.RaiseResolveObjectEvent(String name) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.RegisterStringObjectBooleanBindingOptions">
            <summary>设置 JavascriptObjectRepository.Register(String name, Object value, Boolean isAsync, BindingOptions options) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.ResolveObjectAddEventHandlerOfJavascriptBindingEventArgs">
            <summary>设置 JavascriptObjectRepository.add_ResolveObject(EventHandler`1&lt;JavascriptBindingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.ResolveObjectRemoveEventHandlerOfJavascriptBindingEventArgs">
            <summary>设置 JavascriptObjectRepository.remove_ResolveObject(EventHandler`1&lt;JavascriptBindingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.TryCallMethodInt64StringObjectArrayObjectOutStringOut">
            <summary>设置 JavascriptObjectRepository.TryCallMethod(Int64 objectId, String name, Object[] parameters, Object&amp; result, String&amp; exception) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.TryGetPropertyInt64StringObjectOutStringOut">
            <summary>设置 JavascriptObjectRepository.TryGetProperty(Int64 objectId, String name, Object&amp; result, String&amp; exception) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.TrySetPropertyInt64StringObjectStringOut">
            <summary>设置 JavascriptObjectRepository.TrySetProperty(Int64 objectId, String name, Object value, String&amp; exception) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.UnRegisterAll">
            <summary>设置 JavascriptObjectRepository.UnRegisterAll() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AllInstances.UnRegisterString">
            <summary>设置 JavascriptObjectRepository.UnRegister(String name) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.AnalyseObjectForBindingJavascriptObjectBooleanBooleanBooleanBoolean">
            <summary>设置 JavascriptObjectRepository.AnalyseObjectForBinding(JavascriptObject obj, Boolean analyseMethods, Boolean analyseProperties, Boolean readPropertyValue, Boolean camelCaseJavascriptNames) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.Bind(CefSharp.IJavascriptObjectRepository)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.Constructor">
            <summary>设置 JavascriptObjectRepository.JavascriptObjectRepository() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.CreateJavaScriptMethodMethodInfoBoolean">
            <summary>设置 JavascriptObjectRepository.CreateJavaScriptMethod(MethodInfo methodInfo, Boolean camelCaseJavascriptNames) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.CreateJavaScriptPropertyPropertyInfoBoolean">
            <summary>设置 JavascriptObjectRepository.CreateJavaScriptProperty(PropertyInfo propertyInfo, Boolean camelCaseJavascriptNames) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.CreateJavascriptObjectBoolean">
            <summary>设置 JavascriptObjectRepository.CreateJavascriptObject(Boolean camelCaseJavascriptNames) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.Dispose">
            <summary>设置 JavascriptObjectRepository.Dispose() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.GetJavascriptNameStringBoolean">
            <summary>设置 JavascriptObjectRepository.GetJavascriptName(String str, Boolean camelCaseJavascriptNames) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.GetObjectsListOfString">
            <summary>设置 JavascriptObjectRepository.GetObjects(List`1&lt;String&gt; names) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.HasBoundObjectsGet">
            <summary>设置 JavascriptObjectRepository.get_HasBoundObjects() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.IsBoundString">
            <summary>设置 JavascriptObjectRepository.IsBound(String name) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.IsBrowserInitializedGet">
            <summary>设置 JavascriptObjectRepository.get_IsBrowserInitialized() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.IsBrowserInitializedSetBoolean">
            <summary>设置 JavascriptObjectRepository.set_IsBrowserInitialized(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.IsComplexTypeType">
            <summary>设置 JavascriptObjectRepository.IsComplexType(Type type) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.ObjectBoundInJavascriptAddEventHandlerOfJavascriptBindingCompleteEventArgs">
            <summary>设置 JavascriptObjectRepository.add_ObjectBoundInJavascript(EventHandler`1&lt;JavascriptBindingCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.ObjectBoundInJavascriptRemoveEventHandlerOfJavascriptBindingCompleteEventArgs">
            <summary>设置 JavascriptObjectRepository.remove_ObjectBoundInJavascript(EventHandler`1&lt;JavascriptBindingCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.ObjectsBoundInJavascriptAddEventHandlerOfJavascriptBindingMultipleCompleteEventArgs">
            <summary>设置 JavascriptObjectRepository.add_ObjectsBoundInJavascript(EventHandler`1&lt;JavascriptBindingMultipleCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.ObjectsBoundInJavascriptRemoveEventHandlerOfJavascriptBindingMultipleCompleteEventArgs">
            <summary>设置 JavascriptObjectRepository.remove_ObjectsBoundInJavascript(EventHandler`1&lt;JavascriptBindingMultipleCompleteEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.ObjectsBoundListOfTupleOfStringBooleanBoolean">
            <summary>设置 JavascriptObjectRepository.ObjectsBound(List`1&lt;Tuple`3&lt;String,Boolean,Boolean&gt;&gt; objs) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.RaiseResolveObjectEventString">
            <summary>设置 JavascriptObjectRepository.RaiseResolveObjectEvent(String name) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.RegisterStringObjectBooleanBindingOptions">
            <summary>设置 JavascriptObjectRepository.Register(String name, Object value, Boolean isAsync, BindingOptions options) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.ResolveObjectAddEventHandlerOfJavascriptBindingEventArgs">
            <summary>设置 JavascriptObjectRepository.add_ResolveObject(EventHandler`1&lt;JavascriptBindingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.ResolveObjectRemoveEventHandlerOfJavascriptBindingEventArgs">
            <summary>设置 JavascriptObjectRepository.remove_ResolveObject(EventHandler`1&lt;JavascriptBindingEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.TryCallMethodInt64StringObjectArrayObjectOutStringOut">
            <summary>设置 JavascriptObjectRepository.TryCallMethod(Int64 objectId, String name, Object[] parameters, Object&amp; result, String&amp; exception) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.TryGetPropertyInt64StringObjectOutStringOut">
            <summary>设置 JavascriptObjectRepository.TryGetProperty(Int64 objectId, String name, Object&amp; result, String&amp; exception) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.TrySetPropertyInt64StringObjectStringOut">
            <summary>设置 JavascriptObjectRepository.TrySetProperty(Int64 objectId, String name, Object value, String&amp; exception) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.UnRegisterAll">
            <summary>设置 JavascriptObjectRepository.UnRegisterAll() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptObjectRepository.UnRegisterString">
            <summary>设置 JavascriptObjectRepository.UnRegister(String name) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimJavascriptProperty">
            <summary>CefSharp.Internals.JavascriptProperty 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptProperty.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptProperty.#ctor(CefSharp.Internals.JavascriptProperty)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.GetValueGet">
            <summary>设置 JavascriptProperty.get_GetValue() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.GetValueSetFuncOfObjectObject">
            <summary>设置 JavascriptProperty.set_GetValue(Func`2&lt;Object,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.IdGet">
            <summary>设置 JavascriptProperty.get_Id() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.IdSetInt64">
            <summary>设置 JavascriptProperty.set_Id(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.IsComplexTypeGet">
            <summary>设置 JavascriptProperty.get_IsComplexType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.IsComplexTypeSetBoolean">
            <summary>设置 JavascriptProperty.set_IsComplexType(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.IsReadOnlyGet">
            <summary>设置 JavascriptProperty.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.IsReadOnlySetBoolean">
            <summary>设置 JavascriptProperty.set_IsReadOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.JavascriptNameGet">
            <summary>设置 JavascriptProperty.get_JavascriptName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.JavascriptNameSetString">
            <summary>设置 JavascriptProperty.set_JavascriptName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.JsObjectGet">
            <summary>设置 JavascriptProperty.get_JsObject() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.JsObjectSetJavascriptObject">
            <summary>设置 JavascriptProperty.set_JsObject(JavascriptObject value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.ManagedNameGet">
            <summary>设置 JavascriptProperty.get_ManagedName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.ManagedNameSetString">
            <summary>设置 JavascriptProperty.set_ManagedName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.PropertyValueGet">
            <summary>设置 JavascriptProperty.get_PropertyValue() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.PropertyValueSetObject">
            <summary>设置 JavascriptProperty.set_PropertyValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.SetValueGet">
            <summary>设置 JavascriptProperty.get_SetValue() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.SetValueSetActionOfObjectObject">
            <summary>设置 JavascriptProperty.set_SetValue(Action`2&lt;Object,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.AllInstances.ToString01">
            <summary>设置 JavascriptProperty.ToString() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptProperty.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimJavascriptProperty.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.Constructor">
            <summary>设置 JavascriptProperty.JavascriptProperty() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.GetValueGet">
            <summary>设置 JavascriptProperty.get_GetValue() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.GetValueSetFuncOfObjectObject">
            <summary>设置 JavascriptProperty.set_GetValue(Func`2&lt;Object,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.IdGet">
            <summary>设置 JavascriptProperty.get_Id() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.IdSetInt64">
            <summary>设置 JavascriptProperty.set_Id(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.IsComplexTypeGet">
            <summary>设置 JavascriptProperty.get_IsComplexType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.IsComplexTypeSetBoolean">
            <summary>设置 JavascriptProperty.set_IsComplexType(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.IsReadOnlyGet">
            <summary>设置 JavascriptProperty.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.IsReadOnlySetBoolean">
            <summary>设置 JavascriptProperty.set_IsReadOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.JavascriptNameGet">
            <summary>设置 JavascriptProperty.get_JavascriptName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.JavascriptNameSetString">
            <summary>设置 JavascriptProperty.set_JavascriptName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.JsObjectGet">
            <summary>设置 JavascriptProperty.get_JsObject() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.JsObjectSetJavascriptObject">
            <summary>设置 JavascriptProperty.set_JsObject(JavascriptObject value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.ManagedNameGet">
            <summary>设置 JavascriptProperty.get_ManagedName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.ManagedNameSetString">
            <summary>设置 JavascriptProperty.set_ManagedName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.PropertyValueGet">
            <summary>设置 JavascriptProperty.get_PropertyValue() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.PropertyValueSetObject">
            <summary>设置 JavascriptProperty.set_PropertyValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.SetValueGet">
            <summary>设置 JavascriptProperty.get_SetValue() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.SetValueSetActionOfObjectObject">
            <summary>设置 JavascriptProperty.set_SetValue(Action`2&lt;Object,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimJavascriptProperty.ToString">
            <summary>设置 JavascriptProperty.ToString() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimMethodInvocation">
            <summary>CefSharp.Internals.MethodInvocation 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodInvocation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodInvocation.#ctor(CefSharp.Internals.MethodInvocation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimMethodInvocation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.AllInstances.BrowserIdGet">
            <summary>设置 MethodInvocation.get_BrowserId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.AllInstances.BrowserIdSetInt32">
            <summary>设置 MethodInvocation.set_BrowserId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.AllInstances.CallbackIdGet">
            <summary>设置 MethodInvocation.get_CallbackId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.AllInstances.CallbackIdSetNullableOfInt64">
            <summary>设置 MethodInvocation.set_CallbackId(Nullable`1&lt;Int64&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.AllInstances.FrameIdGet">
            <summary>设置 MethodInvocation.get_FrameId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.AllInstances.FrameIdSetInt64">
            <summary>设置 MethodInvocation.set_FrameId(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.AllInstances.MethodNameGet">
            <summary>设置 MethodInvocation.get_MethodName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.AllInstances.MethodNameSetString">
            <summary>设置 MethodInvocation.set_MethodName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.AllInstances.ObjectIdGet">
            <summary>设置 MethodInvocation.get_ObjectId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.AllInstances.ObjectIdSetInt64">
            <summary>设置 MethodInvocation.set_ObjectId(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.AllInstances.ParametersGet">
            <summary>设置 MethodInvocation.get_Parameters() 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodInvocation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodInvocation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.BrowserIdGet">
            <summary>设置 MethodInvocation.get_BrowserId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.BrowserIdSetInt32">
            <summary>设置 MethodInvocation.set_BrowserId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.CallbackIdGet">
            <summary>设置 MethodInvocation.get_CallbackId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.CallbackIdSetNullableOfInt64">
            <summary>设置 MethodInvocation.set_CallbackId(Nullable`1&lt;Int64&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.ConstructorInt32Int64Int64StringNullableOfInt64">
            <summary>设置 MethodInvocation.MethodInvocation(Int32 browserId, Int64 frameId, Int64 objectId, String methodName, Nullable`1&lt;Int64&gt; callbackId) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.FrameIdGet">
            <summary>设置 MethodInvocation.get_FrameId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.FrameIdSetInt64">
            <summary>设置 MethodInvocation.set_FrameId(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.MethodNameGet">
            <summary>设置 MethodInvocation.get_MethodName() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.MethodNameSetString">
            <summary>设置 MethodInvocation.set_MethodName(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.ObjectIdGet">
            <summary>设置 MethodInvocation.get_ObjectId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.ObjectIdSetInt64">
            <summary>设置 MethodInvocation.set_ObjectId(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocation.ParametersGet">
            <summary>设置 MethodInvocation.get_Parameters() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimMethodInvocationCompleteArgs">
            <summary>CefSharp.Internals.MethodInvocationCompleteArgs 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodInvocationCompleteArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodInvocationCompleteArgs.#ctor(CefSharp.Internals.MethodInvocationCompleteArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimMethodInvocationCompleteArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationCompleteArgs.AllInstances.ResultGet">
            <summary>设置 MethodInvocationCompleteArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationCompleteArgs.AllInstances.ResultSetMethodInvocationResult">
            <summary>设置 MethodInvocationCompleteArgs.set_Result(MethodInvocationResult value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodInvocationCompleteArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodInvocationCompleteArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationCompleteArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationCompleteArgs.ConstructorMethodInvocationResult">
            <summary>设置 MethodInvocationCompleteArgs.MethodInvocationCompleteArgs(MethodInvocationResult result) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationCompleteArgs.ResultGet">
            <summary>设置 MethodInvocationCompleteArgs.get_Result() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationCompleteArgs.ResultSetMethodInvocationResult">
            <summary>设置 MethodInvocationCompleteArgs.set_Result(MethodInvocationResult value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimMethodInvocationResult">
            <summary>CefSharp.Internals.MethodInvocationResult 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodInvocationResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodInvocationResult.#ctor(CefSharp.Internals.MethodInvocationResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimMethodInvocationResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.AllInstances.BrowserIdGet">
            <summary>设置 MethodInvocationResult.get_BrowserId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.AllInstances.BrowserIdSetInt32">
            <summary>设置 MethodInvocationResult.set_BrowserId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.AllInstances.CallbackIdGet">
            <summary>设置 MethodInvocationResult.get_CallbackId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.AllInstances.CallbackIdSetNullableOfInt64">
            <summary>设置 MethodInvocationResult.set_CallbackId(Nullable`1&lt;Int64&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.AllInstances.FrameIdGet">
            <summary>设置 MethodInvocationResult.get_FrameId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.AllInstances.FrameIdSetInt64">
            <summary>设置 MethodInvocationResult.set_FrameId(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.AllInstances.MessageGet">
            <summary>设置 MethodInvocationResult.get_Message() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.AllInstances.MessageSetString">
            <summary>设置 MethodInvocationResult.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.AllInstances.ResultGet">
            <summary>设置 MethodInvocationResult.get_Result() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.AllInstances.ResultSetObject">
            <summary>设置 MethodInvocationResult.set_Result(Object value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.AllInstances.SuccessGet">
            <summary>设置 MethodInvocationResult.get_Success() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.AllInstances.SuccessSetBoolean">
            <summary>设置 MethodInvocationResult.set_Success(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodInvocationResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodInvocationResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.BrowserIdGet">
            <summary>设置 MethodInvocationResult.get_BrowserId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.BrowserIdSetInt32">
            <summary>设置 MethodInvocationResult.set_BrowserId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.CallbackIdGet">
            <summary>设置 MethodInvocationResult.get_CallbackId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.CallbackIdSetNullableOfInt64">
            <summary>设置 MethodInvocationResult.set_CallbackId(Nullable`1&lt;Int64&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.Constructor">
            <summary>设置 MethodInvocationResult.MethodInvocationResult() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.FrameIdGet">
            <summary>设置 MethodInvocationResult.get_FrameId() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.FrameIdSetInt64">
            <summary>设置 MethodInvocationResult.set_FrameId(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.MessageGet">
            <summary>设置 MethodInvocationResult.get_Message() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.MessageSetString">
            <summary>设置 MethodInvocationResult.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.ResultGet">
            <summary>设置 MethodInvocationResult.get_Result() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.ResultSetObject">
            <summary>设置 MethodInvocationResult.set_Result(Object value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.SuccessGet">
            <summary>设置 MethodInvocationResult.get_Success() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodInvocationResult.SuccessSetBoolean">
            <summary>设置 MethodInvocationResult.set_Success(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimMethodParameter">
            <summary>CefSharp.Internals.MethodParameter 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodParameter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodParameter.#ctor(CefSharp.Internals.MethodParameter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimMethodParameter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodParameter.AllInstances.IsParamArrayGet">
            <summary>设置 MethodParameter.get_IsParamArray() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodParameter.AllInstances.IsParamArraySetBoolean">
            <summary>设置 MethodParameter.set_IsParamArray(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodParameter.AllInstances.TypeGet">
            <summary>设置 MethodParameter.get_Type() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodParameter.AllInstances.TypeSetType">
            <summary>设置 MethodParameter.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodParameter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodParameter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodParameter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodParameter.Constructor">
            <summary>设置 MethodParameter.MethodParameter() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodParameter.IsParamArrayGet">
            <summary>设置 MethodParameter.get_IsParamArray() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodParameter.IsParamArraySetBoolean">
            <summary>设置 MethodParameter.set_IsParamArray(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodParameter.TypeGet">
            <summary>设置 MethodParameter.get_Type() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodParameter.TypeSetType">
            <summary>设置 MethodParameter.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimMethodRunnerQueue">
            <summary>CefSharp.Internals.MethodRunnerQueue 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.#ctor(CefSharp.Internals.MethodRunnerQueue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.AllInstances.ConsumeTasks">
            <summary>设置 MethodRunnerQueue.ConsumeTasks() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.AllInstances.EnqueueMethodInvocation">
            <summary>设置 MethodRunnerQueue.Enqueue(MethodInvocation methodInvocation) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.AllInstances.ExecuteMethodInvocationMethodInvocation">
            <summary>设置 MethodRunnerQueue.ExecuteMethodInvocation(MethodInvocation methodInvocation) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.AllInstances.MethodInvocationCompleteAddEventHandlerOfMethodInvocationCompleteArgs">
            <summary>设置 MethodRunnerQueue.add_MethodInvocationComplete(EventHandler`1&lt;MethodInvocationCompleteArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.AllInstances.MethodInvocationCompleteRemoveEventHandlerOfMethodInvocationCompleteArgs">
            <summary>设置 MethodRunnerQueue.remove_MethodInvocationComplete(EventHandler`1&lt;MethodInvocationCompleteArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.AllInstances.OnMethodInvocationCompleteMethodInvocationResult">
            <summary>设置 MethodRunnerQueue.OnMethodInvocationComplete(MethodInvocationResult e) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.AllInstances.Start">
            <summary>设置 MethodRunnerQueue.Start() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.AllInstances.Stop">
            <summary>设置 MethodRunnerQueue.Stop() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.AllInstances._ConsumeTasksb__13_0TaskOfMethodInvocationResult">
            <summary>设置 MethodRunnerQueue.&lt;ConsumeTasks&gt;b__13_0(Task`1&lt;MethodInvocationResult&gt; t) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.ConstructorJavascriptObjectRepository">
            <summary>设置 MethodRunnerQueue.MethodRunnerQueue(JavascriptObjectRepository repository) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.ConsumeTasks">
            <summary>设置 MethodRunnerQueue.ConsumeTasks() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.EnqueueMethodInvocation">
            <summary>设置 MethodRunnerQueue.Enqueue(MethodInvocation methodInvocation) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.ExecuteMethodInvocationMethodInvocation">
            <summary>设置 MethodRunnerQueue.ExecuteMethodInvocation(MethodInvocation methodInvocation) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.MethodInvocationCompleteAddEventHandlerOfMethodInvocationCompleteArgs">
            <summary>设置 MethodRunnerQueue.add_MethodInvocationComplete(EventHandler`1&lt;MethodInvocationCompleteArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.MethodInvocationCompleteRemoveEventHandlerOfMethodInvocationCompleteArgs">
            <summary>设置 MethodRunnerQueue.remove_MethodInvocationComplete(EventHandler`1&lt;MethodInvocationCompleteArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.OnMethodInvocationCompleteMethodInvocationResult">
            <summary>设置 MethodRunnerQueue.OnMethodInvocationComplete(MethodInvocationResult e) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.Start">
            <summary>设置 MethodRunnerQueue.Start() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue.Stop">
            <summary>设置 MethodRunnerQueue.Stop() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimMethodRunnerQueue._ConsumeTasksb__13_0TaskOfMethodInvocationResult">
            <summary>设置 MethodRunnerQueue.&lt;ConsumeTasks&gt;b__13_0(Task`1&lt;MethodInvocationResult&gt; t) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimPendingTaskRepository`1">
            <summary>CefSharp.Internals.PendingTaskRepository`1 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimPendingTaskRepository`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimPendingTaskRepository`1.#ctor(CefSharp.Internals.PendingTaskRepository{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimPendingTaskRepository`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimPendingTaskRepository`1.AllInstances.CreatePendingTaskNullableOfTimeSpan">
            <summary>设置 PendingTaskRepository`1.CreatePendingTask(Nullable`1&lt;TimeSpan&gt; timeout) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimPendingTaskRepository`1.AllInstances.RemovePendingTaskInt64">
            <summary>设置 PendingTaskRepository`1.RemovePendingTask(Int64 id) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimPendingTaskRepository`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimPendingTaskRepository`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimPendingTaskRepository`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimPendingTaskRepository`1.Constructor">
            <summary>设置 PendingTaskRepository`1.PendingTaskRepository`1() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimPendingTaskRepository`1.CreatePendingTaskNullableOfTimeSpan">
            <summary>设置 PendingTaskRepository`1.CreatePendingTask(Nullable`1&lt;TimeSpan&gt; timeout) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimPendingTaskRepository`1.RemovePendingTaskInt64">
            <summary>设置 PendingTaskRepository`1.RemovePendingTask(Int64 id) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimRenderprocessClientFactory">
            <summary>CefSharp.Internals.RenderprocessClientFactory 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimRenderprocessClientFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimRenderprocessClientFactory.#ctor(CefSharp.Internals.RenderprocessClientFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimRenderprocessClientFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimRenderprocessClientFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimRenderprocessClientFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimRenderprocessClientFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimRenderprocessClientFactory.Constructor">
            <summary>设置 RenderprocessClientFactory.RenderprocessClientFactory() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimRenderprocessClientFactory.GetServiceNameInt32Int32">
            <summary>设置 RenderprocessClientFactory.GetServiceName(Int32 parentProcessId, Int32 browserId) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.ShimTaskExtensions">
            <summary>CefSharp.Internals.TaskExtensions 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimTaskExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimTaskExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimTaskExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.ShimTaskExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimTaskExtensions.FromResultOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task{``0}})">
            <summary>设置 TaskExtensions.FromResult(!!0 value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimTaskExtensions.TrySetFromTaskOf1TaskCompletionSourceOfM0Task``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task,System.Boolean})">
            <summary>设置 TaskExtensions.TrySetFromTask(TaskCompletionSource`1&lt;!!0&gt; resultSetter, Task task) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimTaskExtensions.TrySetFromTaskOf1TaskCompletionSourceOfM0TaskOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task{``0},System.Boolean})">
            <summary>设置 TaskExtensions.TrySetFromTask(TaskCompletionSource`1&lt;!!0&gt; resultSetter, Task`1&lt;!!0&gt; task) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimTaskExtensions.TrySetResultAsyncOf1TaskCompletionSourceOfM0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Threading.Tasks.TaskCompletionSource{``0},``0})">
            <summary>设置 TaskExtensions.TrySetResultAsync(TaskCompletionSource`1&lt;!!0&gt; taskCompletionSource, !!0 result) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimTaskExtensions.WithTimeoutOf1TaskCompletionSourceOfM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.TaskCompletionSource{``0},System.TimeSpan,System.Threading.Tasks.TaskCompletionSource{``0}})">
            <summary>设置 TaskExtensions.WithTimeout(TaskCompletionSource`1&lt;!!0&gt; taskCompletionSource, TimeSpan timeout) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimTaskExtensions.WithTimeoutOf1TaskCompletionSourceOfM0TimeSpanAction``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.TaskCompletionSource{``0},System.TimeSpan,System.Action,System.Threading.Tasks.TaskCompletionSource{``0}})">
            <summary>设置 TaskExtensions.WithTimeout(TaskCompletionSource`1&lt;!!0&gt; taskCompletionSource, TimeSpan timeout, Action cancelled) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.ShimTaskExtensions.WithTimeoutOf1TaskOfM0TimeSpan``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.Task{``0},System.TimeSpan,System.Threading.Tasks.Task{``0}})">
            <summary>设置 TaskExtensions.WithTimeout(Task`1&lt;!!0&gt; task, TimeSpan timeout) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubBrowserProcessResponse">
            <summary>CefSharp.Internals.BrowserProcessResponse 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessResponse.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubBrowserProcessResponse.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessResponse.InitializeStub">
            <summary>初始化 type StubBrowserProcessResponse 的新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubBrowserProcessResponse.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubBrowserProcessResponse.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost">
            <summary>CefSharp.Internals.BrowserProcessServiceHost 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.#ctor(CefSharp.Internals.JavascriptObjectRepository,System.Int32,System.Int32,CefSharp.Internals.IJavascriptCallbackFactory)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.AddDefaultEndpoints">
            <summary>设置 ServiceHostBase.AddDefaultEndpoints() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.AddDefaultEndpoints01">
            <summary>设置 ServiceHostBase.AddDefaultEndpoints() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>设置 ServiceHostBase.AddServiceEndpoint(ServiceEndpoint endpoint) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.AddServiceEndpointServiceEndpoint">
            <summary>设置 ServiceHostBase.AddServiceEndpoint(ServiceEndpoint endpoint) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.ApplyConfiguration">
            <summary>设置 ServiceHost.ApplyConfiguration() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.ApplyConfiguration01">
            <summary>设置 ServiceHost.ApplyConfiguration() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
            <summary>设置 ServiceHost.CreateDescription(IDictionary`2&lt;String,ContractDescription&gt;&amp; implementedContracts) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.CreateDescriptionIDictionaryOfStringContractDescriptionOut">
            <summary>设置 ServiceHost.CreateDescription(IDictionary`2&lt;String,ContractDescription&gt;&amp; implementedContracts) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.DefaultCloseTimeout">
            <summary>设置 ServiceHostBase.get_DefaultCloseTimeout() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.DefaultCloseTimeoutGet">
            <summary>设置 ServiceHostBase.get_DefaultCloseTimeout() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.DefaultOpenTimeout">
            <summary>设置 ServiceHostBase.get_DefaultOpenTimeout() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.DefaultOpenTimeoutGet">
            <summary>设置 ServiceHostBase.get_DefaultOpenTimeout() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.GetCommunicationObjectType">
            <summary>设置 CommunicationObject.GetCommunicationObjectType() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.GetCommunicationObjectType01">
            <summary>设置 CommunicationObject.GetCommunicationObjectType() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.InitializeRuntime">
            <summary>设置 ServiceHostBase.InitializeRuntime() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.InitializeRuntime01">
            <summary>设置 ServiceHostBase.InitializeRuntime() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.InitializeStub">
            <summary>初始化 type StubBrowserProcessServiceHost 的新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnAbort">
            <summary>设置 ServiceHostBase.OnAbort() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnAbort01">
            <summary>设置 ServiceHostBase.OnAbort() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>设置 ServiceHostBase.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnBeginCloseTimeSpanAsyncCallbackObject">
            <summary>设置 ServiceHostBase.OnBeginClose(TimeSpan timeout, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>设置 ServiceHostBase.OnBeginOpen(TimeSpan timeout, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnBeginOpenTimeSpanAsyncCallbackObject">
            <summary>设置 ServiceHostBase.OnBeginOpen(TimeSpan timeout, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnClose(System.TimeSpan)">
            <summary>设置 ServiceHostBase.OnClose(TimeSpan timeout) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnCloseTimeSpan">
            <summary>设置 ServiceHostBase.OnClose(TimeSpan timeout) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnClosed">
            <summary>设置 BrowserProcessServiceHost.OnClosed() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnClosed01">
            <summary>设置 BrowserProcessServiceHost.OnClosed() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnClosing">
            <summary>设置 CommunicationObject.OnClosing() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnClosing01">
            <summary>设置 CommunicationObject.OnClosing() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnEndClose(System.IAsyncResult)">
            <summary>设置 ServiceHostBase.OnEndClose(IAsyncResult result) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnEndCloseIAsyncResult">
            <summary>设置 ServiceHostBase.OnEndClose(IAsyncResult result) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnEndOpen(System.IAsyncResult)">
            <summary>设置 ServiceHostBase.OnEndOpen(IAsyncResult result) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnEndOpenIAsyncResult">
            <summary>设置 ServiceHostBase.OnEndOpen(IAsyncResult result) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnFaulted">
            <summary>设置 CommunicationObject.OnFaulted() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnFaulted01">
            <summary>设置 CommunicationObject.OnFaulted() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnOpen(System.TimeSpan)">
            <summary>设置 ServiceHostBase.OnOpen(TimeSpan timeout) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnOpenTimeSpan">
            <summary>设置 ServiceHostBase.OnOpen(TimeSpan timeout) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnOpened">
            <summary>设置 ServiceHostBase.OnOpened() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnOpened01">
            <summary>设置 ServiceHostBase.OnOpened() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnOpening">
            <summary>设置 CommunicationObject.OnOpening() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubBrowserProcessServiceHost.OnOpening01">
            <summary>设置 CommunicationObject.OnOpening() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubIBrowserAdapter">
            <summary>CefSharp.Internals.IBrowserAdapter 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIBrowserAdapter.#ctor">
            <summary>初始化 type StubIBrowserAdapter 的新实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIBrowserAdapter.CefSharp#Internals#IBrowserAdapter#GetBrowser(System.Int32)">
            <summary>设置 IBrowserAdapter.GetBrowser(Int32 browserId) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIBrowserAdapter.CefSharp#Internals#IBrowserAdapter#OnAfterBrowserCreated(CefSharp.IBrowser)">
            <summary>设置 IBrowserAdapter.OnAfterBrowserCreated(IBrowser browser) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIBrowserAdapter.CefSharp#Internals#IBrowserAdapter#Resize(System.Int32,System.Int32)">
            <summary>设置 IBrowserAdapter.Resize(Int32 width, Int32 height) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIBrowserAdapter.GetBrowserInt32">
            <summary>设置 IBrowserAdapter.GetBrowser(Int32 browserId) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIBrowserAdapter.CefSharp#Internals#IBrowserAdapter#IsDisposed">
            <summary>设置 IBrowserAdapter.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIBrowserAdapter.IsDisposedGet">
            <summary>设置 IBrowserAdapter.get_IsDisposed() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIBrowserAdapter.CefSharp#Internals#IBrowserAdapter#JavascriptCallbackFactory">
            <summary>设置 IBrowserAdapter.get_JavascriptCallbackFactory() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIBrowserAdapter.JavascriptCallbackFactoryGet">
            <summary>设置 IBrowserAdapter.get_JavascriptCallbackFactory() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIBrowserAdapter.CefSharp#Internals#IBrowserAdapter#JavascriptObjectRepository">
            <summary>设置 IBrowserAdapter.get_JavascriptObjectRepository() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIBrowserAdapter.JavascriptObjectRepositoryGet">
            <summary>设置 IBrowserAdapter.get_JavascriptObjectRepository() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIBrowserAdapter.CefSharp#Internals#IBrowserAdapter#MethodRunnerQueue">
            <summary>设置 IBrowserAdapter.get_MethodRunnerQueue() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIBrowserAdapter.MethodRunnerQueueGet">
            <summary>设置 IBrowserAdapter.get_MethodRunnerQueue() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIBrowserAdapter.OnAfterBrowserCreatedIBrowser">
            <summary>设置 IBrowserAdapter.OnAfterBrowserCreated(IBrowser browser) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIBrowserAdapter.ResizeInt32Int32">
            <summary>设置 IBrowserAdapter.Resize(Int32 width, Int32 height) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubIBrowserProcess">
            <summary>CefSharp.Internals.IBrowserProcess 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIBrowserProcess.#ctor">
            <summary>初始化 type StubIBrowserProcess 的新实例</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIBrowserProcess.CallMethodInt64StringObjectArray">
            <summary>设置 IBrowserProcess.CallMethod(Int64 objectId, String name, Object[] parameters) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIBrowserProcess.CefSharp#Internals#IBrowserProcess#CallMethod(System.Int64,System.String,System.Object[])">
            <summary>设置 IBrowserProcess.CallMethod(Int64 objectId, String name, Object[] parameters) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIBrowserProcess.CefSharp#Internals#IBrowserProcess#GetProperty(System.Int64,System.String)">
            <summary>设置 IBrowserProcess.GetProperty(Int64 objectId, String name) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIBrowserProcess.CefSharp#Internals#IBrowserProcess#SetProperty(System.Int64,System.String,System.Object)">
            <summary>设置 IBrowserProcess.SetProperty(Int64 objectId, String name, Object value) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIBrowserProcess.GetPropertyInt64String">
            <summary>设置 IBrowserProcess.GetProperty(Int64 objectId, String name) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIBrowserProcess.SetPropertyInt64StringObject">
            <summary>设置 IBrowserProcess.SetProperty(Int64 objectId, String name, Object value) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubIJavascriptCallbackFactory">
            <summary>CefSharp.Internals.IJavascriptCallbackFactory 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIJavascriptCallbackFactory.#ctor">
            <summary>初始化 type StubIJavascriptCallbackFactory 的新实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIJavascriptCallbackFactory.CefSharp#Internals#IJavascriptCallbackFactory#Create(CefSharp.Internals.JavascriptCallback)">
            <summary>设置 IJavascriptCallbackFactory.Create(JavascriptCallback callback) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIJavascriptCallbackFactory.CreateJavascriptCallback">
            <summary>设置 IJavascriptCallbackFactory.Create(JavascriptCallback callback) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubIRenderWebBrowser">
            <summary>CefSharp.Internals.IRenderWebBrowser 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.#ctor">
            <summary>初始化 type StubIRenderWebBrowser 的新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IRenderWebBrowser#AccessibilityHandler">
            <summary>设置 IRenderWebBrowser.get_AccessibilityHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AccessibilityHandlerGet">
            <summary>设置 IRenderWebBrowser.get_AccessibilityHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AccessibilityHandlerSetIAccessibilityHandler">
            <summary>设置 IRenderWebBrowser.set_AccessibilityHandler(IAccessibilityHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#Address">
            <summary>设置 IWebBrowser.get_Address() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AddressGet">
            <summary>设置 IWebBrowser.get_Address() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToAccessibilityHandler">
            <summary>附加委托以将 StubIRenderWebBrowser.AccessibilityHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToDialogHandler">
            <summary>附加委托以将 StubIRenderWebBrowser.DialogHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToDisplayHandler">
            <summary>附加委托以将 StubIRenderWebBrowser.DisplayHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToDownloadHandler">
            <summary>附加委托以将 StubIRenderWebBrowser.DownloadHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToDragHandler">
            <summary>附加委托以将 StubIRenderWebBrowser.DragHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToFindHandler">
            <summary>附加委托以将 StubIRenderWebBrowser.FindHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToFocusHandler">
            <summary>附加委托以将 StubIRenderWebBrowser.FocusHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToHasParent">
            <summary>附加委托以将 StubIRenderWebBrowser.HasParent 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToJsDialogHandler">
            <summary>附加委托以将 StubIRenderWebBrowser.JsDialogHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToKeyboardHandler">
            <summary>附加委托以将 StubIRenderWebBrowser.KeyboardHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToLifeSpanHandler">
            <summary>附加委托以将 StubIRenderWebBrowser.LifeSpanHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToLoadHandler">
            <summary>附加委托以将 StubIRenderWebBrowser.LoadHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToMenuHandler">
            <summary>附加委托以将 StubIRenderWebBrowser.MenuHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToRenderProcessMessageHandler">
            <summary>附加委托以将 StubIRenderWebBrowser.RenderProcessMessageHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToRequestHandler">
            <summary>附加委托以将 StubIRenderWebBrowser.RequestHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.AttachBackingFieldToResourceHandlerFactory">
            <summary>附加委托以将 StubIRenderWebBrowser.ResourceHandlerFactory 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IWebBrowserInternal#BrowserAdapter">
            <summary>设置 IWebBrowserInternal.get_BrowserAdapter() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.BrowserAdapterGet">
            <summary>设置 IWebBrowserInternal.get_BrowserAdapter() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#CanExecuteJavascriptInMainFrame">
            <summary>设置 IWebBrowser.get_CanExecuteJavascriptInMainFrame() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CanExecuteJavascriptInMainFrameGet">
            <summary>设置 IWebBrowser.get_CanExecuteJavascriptInMainFrame() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#CanGoBack">
            <summary>设置 IWebBrowser.get_CanGoBack() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CanGoBackGet">
            <summary>设置 IWebBrowser.get_CanGoBack() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#CanGoForward">
            <summary>设置 IWebBrowser.get_CanGoForward() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CanGoForwardGet">
            <summary>设置 IWebBrowser.get_CanGoForward() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#Focus">
            <summary>设置 IWebBrowser.Focus() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#GetBrowser">
            <summary>设置 IWebBrowser.GetBrowser() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#Load(System.String)">
            <summary>设置 IWebBrowser.Load(String url) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#RegisterAsyncJsObject(System.String,System.Object,CefSharp.BindingOptions)">
            <summary>设置 IWebBrowser.RegisterAsyncJsObject(String name, Object objectToBind, BindingOptions options) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#RegisterJsObject(System.String,System.Object,CefSharp.BindingOptions)">
            <summary>设置 IWebBrowser.RegisterJsObject(String name, Object objectToBind, BindingOptions options) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IRenderWebBrowser#GetScreenInfo">
            <summary>设置 IRenderWebBrowser.GetScreenInfo() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IRenderWebBrowser#GetScreenPoint(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>设置 IRenderWebBrowser.GetScreenPoint(Int32 viewX, Int32 viewY, Int32&amp; screenX, Int32&amp; screenY) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IRenderWebBrowser#GetViewRect">
            <summary>设置 IRenderWebBrowser.GetViewRect() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IRenderWebBrowser#OnCursorChange(System.IntPtr,CefSharp.Enums.CursorType,CefSharp.Structs.CursorInfo)">
            <summary>设置 IRenderWebBrowser.OnCursorChange(IntPtr cursor, CursorType type, CursorInfo customCursorInfo) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IRenderWebBrowser#OnImeCompositionRangeChanged(CefSharp.Structs.Range,CefSharp.Structs.Rect[])">
            <summary>设置 IRenderWebBrowser.OnImeCompositionRangeChanged(Range selectedRange, Rect[] characterBounds) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IRenderWebBrowser#OnPaint(CefSharp.PaintElementType,CefSharp.Structs.Rect,System.IntPtr,System.Int32,System.Int32)">
            <summary>设置 IRenderWebBrowser.OnPaint(PaintElementType type, Rect dirtyRect, IntPtr buffer, Int32 width, Int32 height) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IRenderWebBrowser#OnPopupShow(System.Boolean)">
            <summary>设置 IRenderWebBrowser.OnPopupShow(Boolean show) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IRenderWebBrowser#OnPopupSize(CefSharp.Structs.Rect)">
            <summary>设置 IRenderWebBrowser.OnPopupSize(Rect rect) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IRenderWebBrowser#StartDragging(CefSharp.IDragData,CefSharp.Enums.DragOperationsMask,System.Int32,System.Int32)">
            <summary>设置 IRenderWebBrowser.StartDragging(IDragData dragData, DragOperationsMask mask, Int32 x, Int32 y) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IRenderWebBrowser#UpdateDragCursor(CefSharp.Enums.DragOperationsMask)">
            <summary>设置 IRenderWebBrowser.UpdateDragCursor(DragOperationsMask operation) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IWebBrowserInternal#OnAfterBrowserCreated(CefSharp.IBrowser)">
            <summary>设置 IWebBrowserInternal.OnAfterBrowserCreated(IBrowser browser) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IWebBrowserInternal#OnConsoleMessage(CefSharp.ConsoleMessageEventArgs)">
            <summary>设置 IWebBrowserInternal.OnConsoleMessage(ConsoleMessageEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IWebBrowserInternal#OnFrameLoadEnd(CefSharp.FrameLoadEndEventArgs)">
            <summary>设置 IWebBrowserInternal.OnFrameLoadEnd(FrameLoadEndEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IWebBrowserInternal#OnFrameLoadStart(CefSharp.FrameLoadStartEventArgs)">
            <summary>设置 IWebBrowserInternal.OnFrameLoadStart(FrameLoadStartEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IWebBrowserInternal#OnLoadError(CefSharp.LoadErrorEventArgs)">
            <summary>设置 IWebBrowserInternal.OnLoadError(LoadErrorEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IWebBrowserInternal#OnStatusMessage(CefSharp.StatusMessageEventArgs)">
            <summary>设置 IWebBrowserInternal.OnStatusMessage(StatusMessageEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IWebBrowserInternal#SetAddress(CefSharp.AddressChangedEventArgs)">
            <summary>设置 IWebBrowserInternal.SetAddress(AddressChangedEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IWebBrowserInternal#SetCanExecuteJavascriptOnMainFrame(System.Boolean)">
            <summary>设置 IWebBrowserInternal.SetCanExecuteJavascriptOnMainFrame(Boolean canExecute) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IWebBrowserInternal#SetLoadingStateChange(CefSharp.LoadingStateChangedEventArgs)">
            <summary>设置 IWebBrowserInternal.SetLoadingStateChange(LoadingStateChangedEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IWebBrowserInternal#SetTitle(CefSharp.TitleChangedEventArgs)">
            <summary>设置 IWebBrowserInternal.SetTitle(TitleChangedEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IWebBrowserInternal#SetTooltipText(System.String)">
            <summary>设置 IWebBrowserInternal.SetTooltipText(String tooltipText) 的 存根</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#DialogHandler">
            <summary>设置 IWebBrowser.get_DialogHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.DialogHandlerGet">
            <summary>设置 IWebBrowser.get_DialogHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.DialogHandlerSetIDialogHandler">
            <summary>设置 IWebBrowser.set_DialogHandler(IDialogHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#DisplayHandler">
            <summary>设置 IWebBrowser.get_DisplayHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.DisplayHandlerGet">
            <summary>设置 IWebBrowser.get_DisplayHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.DisplayHandlerSetIDisplayHandler">
            <summary>设置 IWebBrowser.set_DisplayHandler(IDisplayHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#DownloadHandler">
            <summary>设置 IWebBrowser.get_DownloadHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.DownloadHandlerGet">
            <summary>设置 IWebBrowser.get_DownloadHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.DownloadHandlerSetIDownloadHandler">
            <summary>设置 IWebBrowser.set_DownloadHandler(IDownloadHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#DragHandler">
            <summary>设置 IWebBrowser.get_DragHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.DragHandlerGet">
            <summary>设置 IWebBrowser.get_DragHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.DragHandlerSetIDragHandler">
            <summary>设置 IWebBrowser.set_DragHandler(IDragHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#FindHandler">
            <summary>设置 IWebBrowser.get_FindHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.FindHandlerGet">
            <summary>设置 IWebBrowser.get_FindHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.FindHandlerSetIFindHandler">
            <summary>设置 IWebBrowser.set_FindHandler(IFindHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.Focus">
            <summary>设置 IWebBrowser.Focus() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#FocusHandler">
            <summary>设置 IWebBrowser.get_FocusHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.FocusHandlerGet">
            <summary>设置 IWebBrowser.get_FocusHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.FocusHandlerSetIFocusHandler">
            <summary>设置 IWebBrowser.set_FocusHandler(IFocusHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.GetBrowser">
            <summary>设置 IWebBrowser.GetBrowser() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.GetScreenInfo">
            <summary>设置 IRenderWebBrowser.GetScreenInfo() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.GetScreenPointInt32Int32Int32OutInt32Out">
            <summary>设置 IRenderWebBrowser.GetScreenPoint(Int32 viewX, Int32 viewY, Int32&amp; screenX, Int32&amp; screenY) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.GetViewRect">
            <summary>设置 IRenderWebBrowser.GetViewRect() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#Internals#IWebBrowserInternal#HasParent">
            <summary>设置 IWebBrowserInternal.get_HasParent() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.HasParentGet">
            <summary>设置 IWebBrowserInternal.get_HasParent() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.HasParentSetBoolean">
            <summary>设置 IWebBrowserInternal.set_HasParent(Boolean value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#IsBrowserInitialized">
            <summary>设置 IWebBrowser.get_IsBrowserInitialized() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.IsBrowserInitializedGet">
            <summary>设置 IWebBrowser.get_IsBrowserInitialized() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#IsLoading">
            <summary>设置 IWebBrowser.get_IsLoading() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.IsLoadingGet">
            <summary>设置 IWebBrowser.get_IsLoading() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#JavascriptObjectRepository">
            <summary>设置 IWebBrowser.get_JavascriptObjectRepository() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.JavascriptObjectRepositoryGet">
            <summary>设置 IWebBrowser.get_JavascriptObjectRepository() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#JsDialogHandler">
            <summary>设置 IWebBrowser.get_JsDialogHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.JsDialogHandlerGet">
            <summary>设置 IWebBrowser.get_JsDialogHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.JsDialogHandlerSetIJsDialogHandler">
            <summary>设置 IWebBrowser.set_JsDialogHandler(IJsDialogHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#KeyboardHandler">
            <summary>设置 IWebBrowser.get_KeyboardHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.KeyboardHandlerGet">
            <summary>设置 IWebBrowser.get_KeyboardHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.KeyboardHandlerSetIKeyboardHandler">
            <summary>设置 IWebBrowser.set_KeyboardHandler(IKeyboardHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#LifeSpanHandler">
            <summary>设置 IWebBrowser.get_LifeSpanHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.LifeSpanHandlerGet">
            <summary>设置 IWebBrowser.get_LifeSpanHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.LifeSpanHandlerSetILifeSpanHandler">
            <summary>设置 IWebBrowser.set_LifeSpanHandler(ILifeSpanHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#LoadHandler">
            <summary>设置 IWebBrowser.get_LoadHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.LoadHandlerGet">
            <summary>设置 IWebBrowser.get_LoadHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.LoadHandlerSetILoadHandler">
            <summary>设置 IWebBrowser.set_LoadHandler(ILoadHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.LoadString">
            <summary>设置 IWebBrowser.Load(String url) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#MenuHandler">
            <summary>设置 IWebBrowser.get_MenuHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.MenuHandlerGet">
            <summary>设置 IWebBrowser.get_MenuHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.MenuHandlerSetIContextMenuHandler">
            <summary>设置 IWebBrowser.set_MenuHandler(IContextMenuHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.OnAfterBrowserCreatedIBrowser">
            <summary>设置 IWebBrowserInternal.OnAfterBrowserCreated(IBrowser browser) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.OnConsoleMessageConsoleMessageEventArgs">
            <summary>设置 IWebBrowserInternal.OnConsoleMessage(ConsoleMessageEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.OnCursorChangeIntPtrCursorTypeCursorInfo">
            <summary>设置 IRenderWebBrowser.OnCursorChange(IntPtr cursor, CursorType type, CursorInfo customCursorInfo) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.OnFrameLoadEndFrameLoadEndEventArgs">
            <summary>设置 IWebBrowserInternal.OnFrameLoadEnd(FrameLoadEndEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.OnFrameLoadStartFrameLoadStartEventArgs">
            <summary>设置 IWebBrowserInternal.OnFrameLoadStart(FrameLoadStartEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.OnImeCompositionRangeChangedRangeRectArray">
            <summary>设置 IRenderWebBrowser.OnImeCompositionRangeChanged(Range selectedRange, Rect[] characterBounds) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.OnLoadErrorLoadErrorEventArgs">
            <summary>设置 IWebBrowserInternal.OnLoadError(LoadErrorEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.OnPaintPaintElementTypeRectIntPtrInt32Int32">
            <summary>设置 IRenderWebBrowser.OnPaint(PaintElementType type, Rect dirtyRect, IntPtr buffer, Int32 width, Int32 height) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.OnPopupShowBoolean">
            <summary>设置 IRenderWebBrowser.OnPopupShow(Boolean show) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.OnPopupSizeRect">
            <summary>设置 IRenderWebBrowser.OnPopupSize(Rect rect) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.OnStatusMessageStatusMessageEventArgs">
            <summary>设置 IWebBrowserInternal.OnStatusMessage(StatusMessageEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.RegisterAsyncJsObjectStringObjectBindingOptions">
            <summary>设置 IWebBrowser.RegisterAsyncJsObject(String name, Object objectToBind, BindingOptions options) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.RegisterJsObjectStringObjectBindingOptions">
            <summary>设置 IWebBrowser.RegisterJsObject(String name, Object objectToBind, BindingOptions options) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#RenderProcessMessageHandler">
            <summary>设置 IWebBrowser.get_RenderProcessMessageHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.RenderProcessMessageHandlerGet">
            <summary>设置 IWebBrowser.get_RenderProcessMessageHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.RenderProcessMessageHandlerSetIRenderProcessMessageHandler">
            <summary>设置 IWebBrowser.set_RenderProcessMessageHandler(IRenderProcessMessageHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#RequestContext">
            <summary>设置 IWebBrowser.get_RequestContext() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.RequestContextGet">
            <summary>设置 IWebBrowser.get_RequestContext() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#RequestHandler">
            <summary>设置 IWebBrowser.get_RequestHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.RequestHandlerGet">
            <summary>设置 IWebBrowser.get_RequestHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.RequestHandlerSetIRequestHandler">
            <summary>设置 IWebBrowser.set_RequestHandler(IRequestHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#ResourceHandlerFactory">
            <summary>设置 IWebBrowser.get_ResourceHandlerFactory() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.ResourceHandlerFactoryGet">
            <summary>设置 IWebBrowser.get_ResourceHandlerFactory() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.ResourceHandlerFactorySetIResourceHandlerFactory">
            <summary>设置 IWebBrowser.set_ResourceHandlerFactory(IResourceHandlerFactory value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.SetAddressAddressChangedEventArgs">
            <summary>设置 IWebBrowserInternal.SetAddress(AddressChangedEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.SetCanExecuteJavascriptOnMainFrameBoolean">
            <summary>设置 IWebBrowserInternal.SetCanExecuteJavascriptOnMainFrame(Boolean canExecute) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.SetLoadingStateChangeLoadingStateChangedEventArgs">
            <summary>设置 IWebBrowserInternal.SetLoadingStateChange(LoadingStateChangedEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.SetTitleTitleChangedEventArgs">
            <summary>设置 IWebBrowserInternal.SetTitle(TitleChangedEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.SetTooltipTextString">
            <summary>设置 IWebBrowserInternal.SetTooltipText(String tooltipText) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.StartDraggingIDragDataDragOperationsMaskInt32Int32">
            <summary>设置 IRenderWebBrowser.StartDragging(IDragData dragData, DragOperationsMask mask, Int32 x, Int32 y) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIRenderWebBrowser.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIRenderWebBrowser.CefSharp#IWebBrowser#TooltipText">
            <summary>设置 IWebBrowser.get_TooltipText() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.TooltipTextGet">
            <summary>设置 IWebBrowser.get_TooltipText() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIRenderWebBrowser.UpdateDragCursorDragOperationsMask">
            <summary>设置 IRenderWebBrowser.UpdateDragCursor(DragOperationsMask operation) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubITaskScheduler">
            <summary>CefSharp.Internals.ITaskScheduler 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubITaskScheduler.#ctor">
            <summary>初始化 type StubITaskScheduler 的新实例</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubITaskScheduler.CefSharp#Internals#ITaskScheduler#ExecuteTask(System.Threading.Tasks.Task)">
            <summary>设置 ITaskScheduler.ExecuteTask(Task task) 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubITaskScheduler.ExecuteTaskTask">
            <summary>设置 ITaskScheduler.ExecuteTask(Task task) 的 stub</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubIWebBrowserInternal">
            <summary>CefSharp.Internals.IWebBrowserInternal 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.#ctor">
            <summary>初始化 type StubIWebBrowserInternal 的新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#Address">
            <summary>设置 IWebBrowser.get_Address() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AddressGet">
            <summary>设置 IWebBrowser.get_Address() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToDialogHandler">
            <summary>附加委托以将 StubIWebBrowserInternal.DialogHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToDisplayHandler">
            <summary>附加委托以将 StubIWebBrowserInternal.DisplayHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToDownloadHandler">
            <summary>附加委托以将 StubIWebBrowserInternal.DownloadHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToDragHandler">
            <summary>附加委托以将 StubIWebBrowserInternal.DragHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToFindHandler">
            <summary>附加委托以将 StubIWebBrowserInternal.FindHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToFocusHandler">
            <summary>附加委托以将 StubIWebBrowserInternal.FocusHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToHasParent">
            <summary>附加委托以将 StubIWebBrowserInternal.HasParent 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToJsDialogHandler">
            <summary>附加委托以将 StubIWebBrowserInternal.JsDialogHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToKeyboardHandler">
            <summary>附加委托以将 StubIWebBrowserInternal.KeyboardHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToLifeSpanHandler">
            <summary>附加委托以将 StubIWebBrowserInternal.LifeSpanHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToLoadHandler">
            <summary>附加委托以将 StubIWebBrowserInternal.LoadHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToMenuHandler">
            <summary>附加委托以将 StubIWebBrowserInternal.MenuHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToRenderProcessMessageHandler">
            <summary>附加委托以将 StubIWebBrowserInternal.RenderProcessMessageHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToRequestHandler">
            <summary>附加委托以将 StubIWebBrowserInternal.RequestHandler 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.AttachBackingFieldToResourceHandlerFactory">
            <summary>附加委托以将 StubIWebBrowserInternal.ResourceHandlerFactory 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#Internals#IWebBrowserInternal#BrowserAdapter">
            <summary>设置 IWebBrowserInternal.get_BrowserAdapter() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.BrowserAdapterGet">
            <summary>设置 IWebBrowserInternal.get_BrowserAdapter() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#CanExecuteJavascriptInMainFrame">
            <summary>设置 IWebBrowser.get_CanExecuteJavascriptInMainFrame() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CanExecuteJavascriptInMainFrameGet">
            <summary>设置 IWebBrowser.get_CanExecuteJavascriptInMainFrame() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#CanGoBack">
            <summary>设置 IWebBrowser.get_CanGoBack() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CanGoBackGet">
            <summary>设置 IWebBrowser.get_CanGoBack() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#CanGoForward">
            <summary>设置 IWebBrowser.get_CanGoForward() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CanGoForwardGet">
            <summary>设置 IWebBrowser.get_CanGoForward() 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#Focus">
            <summary>设置 IWebBrowser.Focus() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#GetBrowser">
            <summary>设置 IWebBrowser.GetBrowser() 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#Load(System.String)">
            <summary>设置 IWebBrowser.Load(String url) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#RegisterAsyncJsObject(System.String,System.Object,CefSharp.BindingOptions)">
            <summary>设置 IWebBrowser.RegisterAsyncJsObject(String name, Object objectToBind, BindingOptions options) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#RegisterJsObject(System.String,System.Object,CefSharp.BindingOptions)">
            <summary>设置 IWebBrowser.RegisterJsObject(String name, Object objectToBind, BindingOptions options) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#Internals#IWebBrowserInternal#OnAfterBrowserCreated(CefSharp.IBrowser)">
            <summary>设置 IWebBrowserInternal.OnAfterBrowserCreated(IBrowser browser) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#Internals#IWebBrowserInternal#OnConsoleMessage(CefSharp.ConsoleMessageEventArgs)">
            <summary>设置 IWebBrowserInternal.OnConsoleMessage(ConsoleMessageEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#Internals#IWebBrowserInternal#OnFrameLoadEnd(CefSharp.FrameLoadEndEventArgs)">
            <summary>设置 IWebBrowserInternal.OnFrameLoadEnd(FrameLoadEndEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#Internals#IWebBrowserInternal#OnFrameLoadStart(CefSharp.FrameLoadStartEventArgs)">
            <summary>设置 IWebBrowserInternal.OnFrameLoadStart(FrameLoadStartEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#Internals#IWebBrowserInternal#OnLoadError(CefSharp.LoadErrorEventArgs)">
            <summary>设置 IWebBrowserInternal.OnLoadError(LoadErrorEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#Internals#IWebBrowserInternal#OnStatusMessage(CefSharp.StatusMessageEventArgs)">
            <summary>设置 IWebBrowserInternal.OnStatusMessage(StatusMessageEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#Internals#IWebBrowserInternal#SetAddress(CefSharp.AddressChangedEventArgs)">
            <summary>设置 IWebBrowserInternal.SetAddress(AddressChangedEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#Internals#IWebBrowserInternal#SetCanExecuteJavascriptOnMainFrame(System.Boolean)">
            <summary>设置 IWebBrowserInternal.SetCanExecuteJavascriptOnMainFrame(Boolean canExecute) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#Internals#IWebBrowserInternal#SetLoadingStateChange(CefSharp.LoadingStateChangedEventArgs)">
            <summary>设置 IWebBrowserInternal.SetLoadingStateChange(LoadingStateChangedEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#Internals#IWebBrowserInternal#SetTitle(CefSharp.TitleChangedEventArgs)">
            <summary>设置 IWebBrowserInternal.SetTitle(TitleChangedEventArgs args) 的 存根</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#Internals#IWebBrowserInternal#SetTooltipText(System.String)">
            <summary>设置 IWebBrowserInternal.SetTooltipText(String tooltipText) 的 存根</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#DialogHandler">
            <summary>设置 IWebBrowser.get_DialogHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.DialogHandlerGet">
            <summary>设置 IWebBrowser.get_DialogHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.DialogHandlerSetIDialogHandler">
            <summary>设置 IWebBrowser.set_DialogHandler(IDialogHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#DisplayHandler">
            <summary>设置 IWebBrowser.get_DisplayHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.DisplayHandlerGet">
            <summary>设置 IWebBrowser.get_DisplayHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.DisplayHandlerSetIDisplayHandler">
            <summary>设置 IWebBrowser.set_DisplayHandler(IDisplayHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#DownloadHandler">
            <summary>设置 IWebBrowser.get_DownloadHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.DownloadHandlerGet">
            <summary>设置 IWebBrowser.get_DownloadHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.DownloadHandlerSetIDownloadHandler">
            <summary>设置 IWebBrowser.set_DownloadHandler(IDownloadHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#DragHandler">
            <summary>设置 IWebBrowser.get_DragHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.DragHandlerGet">
            <summary>设置 IWebBrowser.get_DragHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.DragHandlerSetIDragHandler">
            <summary>设置 IWebBrowser.set_DragHandler(IDragHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#FindHandler">
            <summary>设置 IWebBrowser.get_FindHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.FindHandlerGet">
            <summary>设置 IWebBrowser.get_FindHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.FindHandlerSetIFindHandler">
            <summary>设置 IWebBrowser.set_FindHandler(IFindHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.Focus">
            <summary>设置 IWebBrowser.Focus() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#FocusHandler">
            <summary>设置 IWebBrowser.get_FocusHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.FocusHandlerGet">
            <summary>设置 IWebBrowser.get_FocusHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.FocusHandlerSetIFocusHandler">
            <summary>设置 IWebBrowser.set_FocusHandler(IFocusHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.GetBrowser">
            <summary>设置 IWebBrowser.GetBrowser() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#Internals#IWebBrowserInternal#HasParent">
            <summary>设置 IWebBrowserInternal.get_HasParent() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.HasParentGet">
            <summary>设置 IWebBrowserInternal.get_HasParent() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.HasParentSetBoolean">
            <summary>设置 IWebBrowserInternal.set_HasParent(Boolean value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#IsBrowserInitialized">
            <summary>设置 IWebBrowser.get_IsBrowserInitialized() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.IsBrowserInitializedGet">
            <summary>设置 IWebBrowser.get_IsBrowserInitialized() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#IsLoading">
            <summary>设置 IWebBrowser.get_IsLoading() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.IsLoadingGet">
            <summary>设置 IWebBrowser.get_IsLoading() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#JavascriptObjectRepository">
            <summary>设置 IWebBrowser.get_JavascriptObjectRepository() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.JavascriptObjectRepositoryGet">
            <summary>设置 IWebBrowser.get_JavascriptObjectRepository() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#JsDialogHandler">
            <summary>设置 IWebBrowser.get_JsDialogHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.JsDialogHandlerGet">
            <summary>设置 IWebBrowser.get_JsDialogHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.JsDialogHandlerSetIJsDialogHandler">
            <summary>设置 IWebBrowser.set_JsDialogHandler(IJsDialogHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#KeyboardHandler">
            <summary>设置 IWebBrowser.get_KeyboardHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.KeyboardHandlerGet">
            <summary>设置 IWebBrowser.get_KeyboardHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.KeyboardHandlerSetIKeyboardHandler">
            <summary>设置 IWebBrowser.set_KeyboardHandler(IKeyboardHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#LifeSpanHandler">
            <summary>设置 IWebBrowser.get_LifeSpanHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.LifeSpanHandlerGet">
            <summary>设置 IWebBrowser.get_LifeSpanHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.LifeSpanHandlerSetILifeSpanHandler">
            <summary>设置 IWebBrowser.set_LifeSpanHandler(ILifeSpanHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#LoadHandler">
            <summary>设置 IWebBrowser.get_LoadHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.LoadHandlerGet">
            <summary>设置 IWebBrowser.get_LoadHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.LoadHandlerSetILoadHandler">
            <summary>设置 IWebBrowser.set_LoadHandler(ILoadHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.LoadString">
            <summary>设置 IWebBrowser.Load(String url) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#MenuHandler">
            <summary>设置 IWebBrowser.get_MenuHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.MenuHandlerGet">
            <summary>设置 IWebBrowser.get_MenuHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.MenuHandlerSetIContextMenuHandler">
            <summary>设置 IWebBrowser.set_MenuHandler(IContextMenuHandler value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.OnAfterBrowserCreatedIBrowser">
            <summary>设置 IWebBrowserInternal.OnAfterBrowserCreated(IBrowser browser) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.OnConsoleMessageConsoleMessageEventArgs">
            <summary>设置 IWebBrowserInternal.OnConsoleMessage(ConsoleMessageEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.OnFrameLoadEndFrameLoadEndEventArgs">
            <summary>设置 IWebBrowserInternal.OnFrameLoadEnd(FrameLoadEndEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.OnFrameLoadStartFrameLoadStartEventArgs">
            <summary>设置 IWebBrowserInternal.OnFrameLoadStart(FrameLoadStartEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.OnLoadErrorLoadErrorEventArgs">
            <summary>设置 IWebBrowserInternal.OnLoadError(LoadErrorEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.OnStatusMessageStatusMessageEventArgs">
            <summary>设置 IWebBrowserInternal.OnStatusMessage(StatusMessageEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.RegisterAsyncJsObjectStringObjectBindingOptions">
            <summary>设置 IWebBrowser.RegisterAsyncJsObject(String name, Object objectToBind, BindingOptions options) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.RegisterJsObjectStringObjectBindingOptions">
            <summary>设置 IWebBrowser.RegisterJsObject(String name, Object objectToBind, BindingOptions options) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#RenderProcessMessageHandler">
            <summary>设置 IWebBrowser.get_RenderProcessMessageHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.RenderProcessMessageHandlerGet">
            <summary>设置 IWebBrowser.get_RenderProcessMessageHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.RenderProcessMessageHandlerSetIRenderProcessMessageHandler">
            <summary>设置 IWebBrowser.set_RenderProcessMessageHandler(IRenderProcessMessageHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#RequestContext">
            <summary>设置 IWebBrowser.get_RequestContext() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.RequestContextGet">
            <summary>设置 IWebBrowser.get_RequestContext() 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#RequestHandler">
            <summary>设置 IWebBrowser.get_RequestHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.RequestHandlerGet">
            <summary>设置 IWebBrowser.get_RequestHandler() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.RequestHandlerSetIRequestHandler">
            <summary>设置 IWebBrowser.set_RequestHandler(IRequestHandler value) 的 stub</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#ResourceHandlerFactory">
            <summary>设置 IWebBrowser.get_ResourceHandlerFactory() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.ResourceHandlerFactoryGet">
            <summary>设置 IWebBrowser.get_ResourceHandlerFactory() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.ResourceHandlerFactorySetIResourceHandlerFactory">
            <summary>设置 IWebBrowser.set_ResourceHandlerFactory(IResourceHandlerFactory value) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.SetAddressAddressChangedEventArgs">
            <summary>设置 IWebBrowserInternal.SetAddress(AddressChangedEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.SetCanExecuteJavascriptOnMainFrameBoolean">
            <summary>设置 IWebBrowserInternal.SetCanExecuteJavascriptOnMainFrame(Boolean canExecute) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.SetLoadingStateChangeLoadingStateChangedEventArgs">
            <summary>设置 IWebBrowserInternal.SetLoadingStateChange(LoadingStateChangedEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.SetTitleTitleChangedEventArgs">
            <summary>设置 IWebBrowserInternal.SetTitle(TitleChangedEventArgs args) 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.SetTooltipTextString">
            <summary>设置 IWebBrowserInternal.SetTooltipText(String tooltipText) 的 stub</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubIWebBrowserInternal.System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubIWebBrowserInternal.CefSharp#IWebBrowser#TooltipText">
            <summary>设置 IWebBrowser.get_TooltipText() 的 stub</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubIWebBrowserInternal.TooltipTextGet">
            <summary>设置 IWebBrowser.get_TooltipText() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubJavascriptCallback">
            <summary>CefSharp.Internals.JavascriptCallback 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubJavascriptCallback.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptCallback.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubJavascriptCallback.InitializeStub">
            <summary>初始化 type StubJavascriptCallback 的新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptCallback.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptCallback.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubJavascriptMethod">
            <summary>CefSharp.Internals.JavascriptMethod 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubJavascriptMethod.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptMethod.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubJavascriptMethod.InitializeStub">
            <summary>初始化 type StubJavascriptMethod 的新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptMethod.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptMethod.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubJavascriptMethod.ToString">
            <summary>设置 JavascriptMethod.ToString() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubJavascriptMethod.ToString01">
            <summary>设置 JavascriptMethod.ToString() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubJavascriptObject">
            <summary>CefSharp.Internals.JavascriptObject 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubJavascriptObject.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptObject.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubJavascriptObject.InitializeStub">
            <summary>初始化 type StubJavascriptObject 的新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptObject.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptObject.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubJavascriptObject.ToString">
            <summary>设置 JavascriptObject.ToString() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubJavascriptObject.ToString01">
            <summary>设置 JavascriptObject.ToString() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubJavascriptObjectRepository">
            <summary>CefSharp.Internals.JavascriptObjectRepository 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubJavascriptObjectRepository.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptObjectRepository.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubJavascriptObjectRepository.InitializeStub">
            <summary>初始化 type StubJavascriptObjectRepository 的新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptObjectRepository.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptObjectRepository.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubJavascriptProperty">
            <summary>CefSharp.Internals.JavascriptProperty 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubJavascriptProperty.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptProperty.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubJavascriptProperty.InitializeStub">
            <summary>初始化 type StubJavascriptProperty 的新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptProperty.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubJavascriptProperty.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubJavascriptProperty.ToString">
            <summary>设置 JavascriptProperty.ToString() 的 存根</summary>
        </member>
        <member name="F:CefSharp.Internals.Fakes.StubJavascriptProperty.ToString01">
            <summary>设置 JavascriptProperty.ToString() 的 stub</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubMethodParameter">
            <summary>CefSharp.Internals.MethodParameter 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubMethodParameter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubMethodParameter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubMethodParameter.InitializeStub">
            <summary>初始化 type StubMethodParameter 的新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubMethodParameter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubMethodParameter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Internals.Fakes.StubRenderprocessClientFactory">
            <summary>CefSharp.Internals.RenderprocessClientFactory 的存根类型</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubRenderprocessClientFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubRenderprocessClientFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.Internals.Fakes.StubRenderprocessClientFactory.InitializeStub">
            <summary>初始化 type StubRenderprocessClientFactory 的新实例</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubRenderprocessClientFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.Internals.Fakes.StubRenderprocessClientFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.ShimBindingContext">
            <summary>CefSharp.ModelBinding.BindingContext 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimBindingContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimBindingContext.#ctor(CefSharp.ModelBinding.BindingContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.ShimBindingContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.AllInstances.DestinationTypeGet">
            <summary>设置 BindingContext.get_DestinationType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.AllInstances.DestinationTypeSetType">
            <summary>设置 BindingContext.set_DestinationType(Type value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.AllInstances.GenericTypeGet">
            <summary>设置 BindingContext.get_GenericType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.AllInstances.GenericTypeSetType">
            <summary>设置 BindingContext.set_GenericType(Type value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.AllInstances.ModelGet">
            <summary>设置 BindingContext.get_Model() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.AllInstances.ModelSetObject">
            <summary>设置 BindingContext.set_Model(Object value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.AllInstances.ObjectGet">
            <summary>设置 BindingContext.get_Object() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.AllInstances.ObjectSetObject">
            <summary>设置 BindingContext.set_Object(Object value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.AllInstances.ValidModelBindingMembersGet">
            <summary>设置 BindingContext.get_ValidModelBindingMembers() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.AllInstances.ValidModelBindingMembersSetIEnumerableOfBindingMemberInfo">
            <summary>设置 BindingContext.set_ValidModelBindingMembers(IEnumerable`1&lt;BindingMemberInfo&gt; value) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimBindingContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimBindingContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.Constructor">
            <summary>设置 BindingContext.BindingContext() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.DestinationTypeGet">
            <summary>设置 BindingContext.get_DestinationType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.DestinationTypeSetType">
            <summary>设置 BindingContext.set_DestinationType(Type value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.GenericTypeGet">
            <summary>设置 BindingContext.get_GenericType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.GenericTypeSetType">
            <summary>设置 BindingContext.set_GenericType(Type value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.ModelGet">
            <summary>设置 BindingContext.get_Model() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.ModelSetObject">
            <summary>设置 BindingContext.set_Model(Object value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.ObjectGet">
            <summary>设置 BindingContext.get_Object() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.ObjectSetObject">
            <summary>设置 BindingContext.set_Object(Object value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.ValidModelBindingMembersGet">
            <summary>设置 BindingContext.get_ValidModelBindingMembers() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingContext.ValidModelBindingMembersSetIEnumerableOfBindingMemberInfo">
            <summary>设置 BindingContext.set_ValidModelBindingMembers(IEnumerable`1&lt;BindingMemberInfo&gt; value) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo">
            <summary>CefSharp.ModelBinding.BindingMemberInfo 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.#ctor(CefSharp.ModelBinding.BindingMemberInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.AllInstances.EqualsBindingMemberInfo">
            <summary>设置 BindingMemberInfo.Equals(BindingMemberInfo obj) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.AllInstances.EqualsObject">
            <summary>设置 BindingMemberInfo.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.AllInstances.GetHashCode01">
            <summary>设置 BindingMemberInfo.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.AllInstances.MemberInfoGet">
            <summary>设置 BindingMemberInfo.get_MemberInfo() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.AllInstances.NameGet">
            <summary>设置 BindingMemberInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.AllInstances.PropertyTypeGet">
            <summary>设置 BindingMemberInfo.get_PropertyType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.AllInstances.SetValueObjectObject">
            <summary>设置 BindingMemberInfo.SetValue(Object destinationObject, Object newValue) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.CollectOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{CefSharp.ModelBinding.BindingMemberInfo}})">
            <summary>设置 BindingMemberInfo.Collect() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.CollectType">
            <summary>设置 BindingMemberInfo.Collect(Type type) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.ConstructorFieldInfo">
            <summary>设置 BindingMemberInfo.BindingMemberInfo(FieldInfo fieldInfo) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.ConstructorPropertyInfo">
            <summary>设置 BindingMemberInfo.BindingMemberInfo(PropertyInfo propertyInfo) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.EqualsBindingMemberInfo">
            <summary>设置 BindingMemberInfo.Equals(BindingMemberInfo obj) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.EqualsObject">
            <summary>设置 BindingMemberInfo.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.GetHashCode">
            <summary>设置 BindingMemberInfo.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.MemberInfoGet">
            <summary>设置 BindingMemberInfo.get_MemberInfo() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.NameGet">
            <summary>设置 BindingMemberInfo.get_Name() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.PropertyTypeGet">
            <summary>设置 BindingMemberInfo.get_PropertyType() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimBindingMemberInfo.SetValueObjectObject">
            <summary>设置 BindingMemberInfo.SetValue(Object destinationObject, Object newValue) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.ShimDefaultBinder">
            <summary>CefSharp.ModelBinding.DefaultBinder 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.#ctor(CefSharp.ModelBinding.DefaultBinder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.AllInstances.BindObjectType">
            <summary>设置 DefaultBinder.Bind(Object obj, Type modelType) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.AllInstances.BindValueBindingMemberInfoObjectBindingContext">
            <summary>设置 DefaultBinder.BindValue(BindingMemberInfo modelProperty, Object obj, BindingContext context) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.AllInstances.BlackListedPropertyNamesGet">
            <summary>设置 DefaultBinder.get_BlackListedPropertyNames() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.AllInstances.BlackListedPropertyNamesSetIEnumerableOfString">
            <summary>设置 DefaultBinder.set_BlackListedPropertyNames(IEnumerable`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.AllInstances.CreateBindingContextObjectTypeType">
            <summary>设置 DefaultBinder.CreateBindingContext(Object obj, Type modelType, Type genericType) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.AllInstances.CreateModelTypeType">
            <summary>设置 DefaultBinder.CreateModel(Type modelType, Type genericType) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.AllInstances.GetBindingMembersTypeType">
            <summary>设置 DefaultBinder.GetBindingMembers(Type modelType, Type genericType) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.AllInstances.GetValueBindingContextInt32">
            <summary>设置 DefaultBinder.GetValue(BindingContext context, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.AllInstances.GetValueStringBindingContext">
            <summary>设置 DefaultBinder.GetValue(String propertyName, BindingContext context) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.Bind(CefSharp.ModelBinding.IBinder)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.BindObjectType">
            <summary>设置 DefaultBinder.Bind(Object obj, Type modelType) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.BindValueBindingMemberInfoObjectBindingContext">
            <summary>设置 DefaultBinder.BindValue(BindingMemberInfo modelProperty, Object obj, BindingContext context) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.BlackListedPropertyNamesGet">
            <summary>设置 DefaultBinder.get_BlackListedPropertyNames() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.BlackListedPropertyNamesSetIEnumerableOfString">
            <summary>设置 DefaultBinder.set_BlackListedPropertyNames(IEnumerable`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.ConstructorIFieldNameConverter">
            <summary>设置 DefaultBinder.DefaultBinder(IFieldNameConverter fieldNameConverter) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.CreateBindingContextObjectTypeType">
            <summary>设置 DefaultBinder.CreateBindingContext(Object obj, Type modelType, Type genericType) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.CreateModelTypeType">
            <summary>设置 DefaultBinder.CreateModel(Type modelType, Type genericType) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.GetBindingMembersTypeType">
            <summary>设置 DefaultBinder.GetBindingMembers(Type modelType, Type genericType) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.GetValueBindingContextInt32">
            <summary>设置 DefaultBinder.GetValue(BindingContext context, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.GetValueStringBindingContext">
            <summary>设置 DefaultBinder.GetValue(String propertyName, BindingContext context) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultBinder.StaticConstructor">
            <summary>设置 DefaultBinder.DefaultBinder() 的 填充码</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.ShimDefaultFieldNameConverter">
            <summary>CefSharp.ModelBinding.DefaultFieldNameConverter 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimDefaultFieldNameConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimDefaultFieldNameConverter.#ctor(CefSharp.ModelBinding.DefaultFieldNameConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.ShimDefaultFieldNameConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultFieldNameConverter.AllInstances.ConvertString">
            <summary>设置 DefaultFieldNameConverter.Convert(String fieldName) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimDefaultFieldNameConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimDefaultFieldNameConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultFieldNameConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.ShimDefaultFieldNameConverter.Bind(CefSharp.ModelBinding.IFieldNameConverter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultFieldNameConverter.Constructor">
            <summary>设置 DefaultFieldNameConverter.DefaultFieldNameConverter() 的 填充码</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.ShimDefaultFieldNameConverter.ConvertString">
            <summary>设置 DefaultFieldNameConverter.Convert(String fieldName) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.StubBindingContext">
            <summary>CefSharp.ModelBinding.BindingContext 的存根类型</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubBindingContext.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.StubBindingContext.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubBindingContext.InitializeStub">
            <summary>初始化 type StubBindingContext 的新实例</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.StubBindingContext.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.StubBindingContext.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.StubBindingMemberInfo">
            <summary>CefSharp.ModelBinding.BindingMemberInfo 的存根类型</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubBindingMemberInfo.#ctor(System.Reflection.FieldInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubBindingMemberInfo.#ctor(System.Reflection.PropertyInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.StubBindingMemberInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubBindingMemberInfo.Equals(System.Object)">
            <summary>设置 BindingMemberInfo.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:CefSharp.ModelBinding.Fakes.StubBindingMemberInfo.EqualsObject">
            <summary>设置 BindingMemberInfo.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubBindingMemberInfo.GetHashCode">
            <summary>设置 BindingMemberInfo.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:CefSharp.ModelBinding.Fakes.StubBindingMemberInfo.GetHashCode01">
            <summary>设置 BindingMemberInfo.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubBindingMemberInfo.InitializeStub">
            <summary>初始化 type StubBindingMemberInfo 的新实例</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.StubBindingMemberInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.StubBindingMemberInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.StubDefaultBinder">
            <summary>CefSharp.ModelBinding.DefaultBinder 的存根类型</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubDefaultBinder.#ctor(CefSharp.ModelBinding.IFieldNameConverter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubDefaultBinder.Bind(System.Object,System.Type)">
            <summary>设置 DefaultBinder.Bind(Object obj, Type modelType) 的 存根</summary>
        </member>
        <member name="F:CefSharp.ModelBinding.Fakes.StubDefaultBinder.BindObjectType">
            <summary>设置 DefaultBinder.Bind(Object obj, Type modelType) 的 stub</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubDefaultBinder.BindValue(CefSharp.ModelBinding.BindingMemberInfo,System.Object,CefSharp.ModelBinding.BindingContext)">
            <summary>设置 DefaultBinder.BindValue(BindingMemberInfo modelProperty, Object obj, BindingContext context) 的 存根</summary>
        </member>
        <member name="F:CefSharp.ModelBinding.Fakes.StubDefaultBinder.BindValueBindingMemberInfoObjectBindingContext">
            <summary>设置 DefaultBinder.BindValue(BindingMemberInfo modelProperty, Object obj, BindingContext context) 的 stub</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.StubDefaultBinder.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubDefaultBinder.CreateBindingContext(System.Object,System.Type,System.Type)">
            <summary>设置 DefaultBinder.CreateBindingContext(Object obj, Type modelType, Type genericType) 的 存根</summary>
        </member>
        <member name="F:CefSharp.ModelBinding.Fakes.StubDefaultBinder.CreateBindingContextObjectTypeType">
            <summary>设置 DefaultBinder.CreateBindingContext(Object obj, Type modelType, Type genericType) 的 stub</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubDefaultBinder.CreateModel(System.Type,System.Type)">
            <summary>设置 DefaultBinder.CreateModel(Type modelType, Type genericType) 的 存根</summary>
        </member>
        <member name="F:CefSharp.ModelBinding.Fakes.StubDefaultBinder.CreateModelTypeType">
            <summary>设置 DefaultBinder.CreateModel(Type modelType, Type genericType) 的 stub</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubDefaultBinder.GetBindingMembers(System.Type,System.Type)">
            <summary>设置 DefaultBinder.GetBindingMembers(Type modelType, Type genericType) 的 存根</summary>
        </member>
        <member name="F:CefSharp.ModelBinding.Fakes.StubDefaultBinder.GetBindingMembersTypeType">
            <summary>设置 DefaultBinder.GetBindingMembers(Type modelType, Type genericType) 的 stub</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubDefaultBinder.GetValue(CefSharp.ModelBinding.BindingContext,System.Int32)">
            <summary>设置 DefaultBinder.GetValue(BindingContext context, Int32 index) 的 存根</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubDefaultBinder.GetValue(System.String,CefSharp.ModelBinding.BindingContext)">
            <summary>设置 DefaultBinder.GetValue(String propertyName, BindingContext context) 的 存根</summary>
        </member>
        <member name="F:CefSharp.ModelBinding.Fakes.StubDefaultBinder.GetValueBindingContextInt32">
            <summary>设置 DefaultBinder.GetValue(BindingContext context, Int32 index) 的 stub</summary>
        </member>
        <member name="F:CefSharp.ModelBinding.Fakes.StubDefaultBinder.GetValueStringBindingContext">
            <summary>设置 DefaultBinder.GetValue(String propertyName, BindingContext context) 的 stub</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubDefaultBinder.InitializeStub">
            <summary>初始化 type StubDefaultBinder 的新实例</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.StubDefaultBinder.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.StubDefaultBinder.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.StubDefaultFieldNameConverter">
            <summary>CefSharp.ModelBinding.DefaultFieldNameConverter 的存根类型</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubDefaultFieldNameConverter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.StubDefaultFieldNameConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubDefaultFieldNameConverter.InitializeStub">
            <summary>初始化 type StubDefaultFieldNameConverter 的新实例</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.StubDefaultFieldNameConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.ModelBinding.Fakes.StubDefaultFieldNameConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.StubIBinder">
            <summary>CefSharp.ModelBinding.IBinder 的存根类型</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubIBinder.#ctor">
            <summary>初始化 type StubIBinder 的新实例</summary>
        </member>
        <member name="F:CefSharp.ModelBinding.Fakes.StubIBinder.BindObjectType">
            <summary>设置 IBinder.Bind(Object obj, Type modelType) 的 stub</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubIBinder.CefSharp#ModelBinding#IBinder#Bind(System.Object,System.Type)">
            <summary>设置 IBinder.Bind(Object obj, Type modelType) 的 存根</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.StubIFieldNameConverter">
            <summary>CefSharp.ModelBinding.IFieldNameConverter 的存根类型</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubIFieldNameConverter.#ctor">
            <summary>初始化 type StubIFieldNameConverter 的新实例</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubIFieldNameConverter.CefSharp#ModelBinding#IFieldNameConverter#Convert(System.String)">
            <summary>设置 IFieldNameConverter.Convert(String fieldName) 的 存根</summary>
        </member>
        <member name="F:CefSharp.ModelBinding.Fakes.StubIFieldNameConverter.ConvertString">
            <summary>设置 IFieldNameConverter.Convert(String fieldName) 的 stub</summary>
        </member>
        <member name="T:CefSharp.ModelBinding.Fakes.StubIMethodInterceptor">
            <summary>CefSharp.ModelBinding.IMethodInterceptor 的存根类型</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubIMethodInterceptor.#ctor">
            <summary>初始化 type StubIMethodInterceptor 的新实例</summary>
        </member>
        <member name="M:CefSharp.ModelBinding.Fakes.StubIMethodInterceptor.CefSharp#ModelBinding#IMethodInterceptor#Intercept(System.Func{System.Object},System.String)">
            <summary>设置 IMethodInterceptor.Intercept(Func`1&lt;Object&gt; method, String methodName) 的 存根</summary>
        </member>
        <member name="F:CefSharp.ModelBinding.Fakes.StubIMethodInterceptor.InterceptFuncOfObjectString">
            <summary>设置 IMethodInterceptor.Intercept(Func`1&lt;Object&gt; method, String methodName) 的 stub</summary>
        </member>
        <member name="T:CefSharp.SchemeHandler.Fakes.ShimFolderSchemeHandlerFactory">
            <summary>CefSharp.SchemeHandler.FolderSchemeHandlerFactory 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.SchemeHandler.Fakes.ShimFolderSchemeHandlerFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:CefSharp.SchemeHandler.Fakes.ShimFolderSchemeHandlerFactory.#ctor(CefSharp.SchemeHandler.FolderSchemeHandlerFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:CefSharp.SchemeHandler.Fakes.ShimFolderSchemeHandlerFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:CefSharp.SchemeHandler.Fakes.ShimFolderSchemeHandlerFactory.AllInstances.CefSharpISchemeHandlerFactoryCreateIBrowserIFrameStringIRequest">
            <summary>设置 FolderSchemeHandlerFactory.CefSharp.ISchemeHandlerFactory.Create(IBrowser browser, IFrame frame, String schemeName, IRequest request) 的 填充码</summary>
        </member>
        <member name="M:CefSharp.SchemeHandler.Fakes.ShimFolderSchemeHandlerFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.SchemeHandler.Fakes.ShimFolderSchemeHandlerFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.SchemeHandler.Fakes.ShimFolderSchemeHandlerFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:CefSharp.SchemeHandler.Fakes.ShimFolderSchemeHandlerFactory.Bind(CefSharp.ISchemeHandlerFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:CefSharp.SchemeHandler.Fakes.ShimFolderSchemeHandlerFactory.CefSharpISchemeHandlerFactoryCreateIBrowserIFrameStringIRequest">
            <summary>设置 FolderSchemeHandlerFactory.CefSharp.ISchemeHandlerFactory.Create(IBrowser browser, IFrame frame, String schemeName, IRequest request) 的 填充码</summary>
        </member>
        <member name="P:CefSharp.SchemeHandler.Fakes.ShimFolderSchemeHandlerFactory.ConstructorStringStringStringString">
            <summary>设置 FolderSchemeHandlerFactory.FolderSchemeHandlerFactory(String rootFolder, String schemeName, String hostName, String defaultPage) 的 填充码</summary>
        </member>
        <member name="T:CefSharp.SchemeHandler.Fakes.StubFolderSchemeHandlerFactory">
            <summary>CefSharp.SchemeHandler.FolderSchemeHandlerFactory 的存根类型</summary>
        </member>
        <member name="M:CefSharp.SchemeHandler.Fakes.StubFolderSchemeHandlerFactory.#ctor(System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:CefSharp.SchemeHandler.Fakes.StubFolderSchemeHandlerFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:CefSharp.SchemeHandler.Fakes.StubFolderSchemeHandlerFactory.InitializeStub">
            <summary>初始化 type StubFolderSchemeHandlerFactory 的新实例</summary>
        </member>
        <member name="P:CefSharp.SchemeHandler.Fakes.StubFolderSchemeHandlerFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:CefSharp.SchemeHandler.Fakes.StubFolderSchemeHandlerFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:CefSharp.Structs.Fakes.ShimCompositionUnderline">
            <summary>CefSharp.Structs.CompositionUnderline 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimCompositionUnderline.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:CefSharp.Structs.Fakes.ShimCompositionUnderline.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimCompositionUnderline.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimCompositionUnderline.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Structs.Fakes.ShimCompositionUnderline.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CefSharp.Structs.Fakes.ShimCursorInfo">
            <summary>CefSharp.Structs.CursorInfo 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimCursorInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:CefSharp.Structs.Fakes.ShimCursorInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimCursorInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimCursorInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Structs.Fakes.ShimCursorInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CefSharp.Structs.Fakes.ShimPoint">
            <summary>CefSharp.Structs.Point 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimPoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:CefSharp.Structs.Fakes.ShimPoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimPoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimPoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Structs.Fakes.ShimPoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CefSharp.Structs.Fakes.ShimRange">
            <summary>CefSharp.Structs.Range 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimRange.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:CefSharp.Structs.Fakes.ShimRange.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimRange.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimRange.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Structs.Fakes.ShimRange.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CefSharp.Structs.Fakes.ShimRect">
            <summary>CefSharp.Structs.Rect 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimRect.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:CefSharp.Structs.Fakes.ShimRect.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimRect.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimRect.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Structs.Fakes.ShimRect.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CefSharp.Structs.Fakes.ShimScreenInfo">
            <summary>CefSharp.Structs.ScreenInfo 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimScreenInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:CefSharp.Structs.Fakes.ShimScreenInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimScreenInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimScreenInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Structs.Fakes.ShimScreenInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:CefSharp.Structs.Fakes.ShimSize">
            <summary>CefSharp.Structs.Size 的填充码类型</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimSize.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:CefSharp.Structs.Fakes.ShimSize.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimSize.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:CefSharp.Structs.Fakes.ShimSize.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:CefSharp.Structs.Fakes.ShimSize.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.CefSharpDelegates">
            <summary>包含用于 CefSharp 的存根和填充码的自定义委托</summary>
        </member>
    </members>
</doc>
